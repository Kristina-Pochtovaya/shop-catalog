{"ast":null,"code":"var _jsxFileName = \"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/editProducts/components/InputEditProductsCategoryComponent.jsx\";\nimport React from 'react';\nimport PopUp from '../../../common/popup/components/PopUpComponent';\nimport PopUpSomethingWentWrong from '../../../common/popup/components/PopUpSomethingWentWrongComponent';\nimport postProductsCategory from '../api/post/postProductsCategory';\nimport getCategories from '../../editCategory/api/get/getCategories';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass InputEditProductsCategory extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      category,\n      id\n    } = this.props;\n    this.state = {\n      id,\n      categoryName: category,\n      categoriesArray: [],\n      errorMessage: '',\n      isLoading: false,\n      popupSmthWentWrongActive: true\n    };\n    this.setError = this.setError.bind(this);\n    this.updateDataCategories = this.updateDataCategories.bind(this);\n    this.setpopupSmthWentWrongActive = this.setpopupSmthWentWrongActive.bind(this);\n  }\n\n  componentDidMount() {\n    this.interval = setTimeout(async () => {\n      await getCategories(this.updateDataCategories, this.setError);\n    }, 10);\n  }\n\n  async handleCategoryProductsChange(e) {\n    const {\n      id,\n      categoriesArray\n    } = this.state;\n    e.preventDefault();\n    this.setState({\n      categoryName: e.target.value\n    });\n    postProductsCategory(id, e.target.value, categoriesArray.categories);\n  }\n\n  setError(value) {\n    this.setState({\n      errorMessage: value\n    });\n  }\n\n  setpopupSmthWentWrongActive(value) {\n    this.setState({\n      popupSmthWentWrongActive: value\n    });\n  }\n\n  updateDataCategories(value, valueIsLoading) {\n    this.setState({\n      categoriesArray: value,\n      isLoading: valueIsLoading\n    });\n  }\n\n  render() {\n    const {\n      categoriesArray,\n      errorMessage,\n      isLoading,\n      popupSmthWentWrongActive,\n      categoryName\n    } = this.state;\n    const {\n      isProductsUpdated,\n      setIsProductsUpdated\n    } = this.props;\n\n    if (!isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"-isLoading\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (errorMessage) {\n      return /*#__PURE__*/_jsxDEV(PopUp, {\n        active: popupSmthWentWrongActive,\n        setActive: this.setpopupSmthWentWrongActive,\n        children: /*#__PURE__*/_jsxDEV(PopUpSomethingWentWrong, {\n          text: \"\\u041F\\u043E\\u043F\\u0440\\u043E\\u0431\\u0443\\u0439\\u0442\\u0435 \\u0435\\u0449\\u0435 \\u0440\\u0430\\u0437\",\n          setpopupSmthWentWrongActive: this.setpopupSmthWentWrongActive\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"productsCategory\",\n        value: categoryName,\n        onChange: async e => {\n          this.handleCategoryProductsChange(e);\n          isProductsUpdated ? setIsProductsUpdated(false) : setIsProductsUpdated(true);\n        },\n        onBlur: () => isProductsUpdated ? setIsProductsUpdated(false) : setIsProductsUpdated(true),\n        children: categoriesArray.categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.category,\n          children: category.category\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default InputEditProductsCategory;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/editProducts/components/InputEditProductsCategoryComponent.jsx"],"names":["React","PopUp","PopUpSomethingWentWrong","postProductsCategory","getCategories","InputEditProductsCategory","Component","constructor","props","category","id","state","categoryName","categoriesArray","errorMessage","isLoading","popupSmthWentWrongActive","setError","bind","updateDataCategories","setpopupSmthWentWrongActive","componentDidMount","interval","setTimeout","handleCategoryProductsChange","e","preventDefault","setState","target","value","categories","valueIsLoading","render","isProductsUpdated","setIsProductsUpdated","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,iDAAlB;AACA,OAAOC,uBAAP,MAAoC,mEAApC;AACA,OAAOC,oBAAP,MAAiC,kCAAjC;AACA,OAAOC,aAAP,MAA0B,0CAA1B;;;;AAEA,MAAMC,yBAAN,SAAwCL,KAAK,CAACM,SAA9C,CAAwD;AACtDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAmB,KAAKF,KAA9B;AACA,SAAKG,KAAL,GAAa;AACXD,MAAAA,EADW;AAEXE,MAAAA,YAAY,EAAEH,QAFH;AAGXI,MAAAA,eAAe,EAAE,EAHN;AAIXC,MAAAA,YAAY,EAAE,EAJH;AAKXC,MAAAA,SAAS,EAAE,KALA;AAMXC,MAAAA,wBAAwB,EAAE;AANf,KAAb;AAQA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BD,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKE,2BAAL,GAAmC,KAAKA,2BAAL,CAAiCF,IAAjC,CAAsC,IAAtC,CAAnC;AACD;;AAEDG,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,GAAgBC,UAAU,CAAC,YAAY;AACrC,YAAMnB,aAAa,CAAC,KAAKe,oBAAN,EAA4B,KAAKF,QAAjC,CAAnB;AACD,KAFyB,EAEvB,EAFuB,CAA1B;AAGD;;AAEiC,QAA5BO,4BAA4B,CAACC,CAAD,EAAI;AACpC,UAAM;AAAEf,MAAAA,EAAF;AAAMG,MAAAA;AAAN,QAA0B,KAAKF,KAArC;AACAc,IAAAA,CAAC,CAACC,cAAF;AAEA,SAAKC,QAAL,CAAc;AACZf,MAAAA,YAAY,EAAEa,CAAC,CAACG,MAAF,CAASC;AADX,KAAd;AAIA1B,IAAAA,oBAAoB,CAACO,EAAD,EAAKe,CAAC,CAACG,MAAF,CAASC,KAAd,EAClBhB,eAAe,CAACiB,UADE,CAApB;AAED;;AAEDb,EAAAA,QAAQ,CAACY,KAAD,EAAQ;AACd,SAAKF,QAAL,CAAc;AACZb,MAAAA,YAAY,EAAEe;AADF,KAAd;AAGD;;AAEDT,EAAAA,2BAA2B,CAACS,KAAD,EAAQ;AACjC,SAAKF,QAAL,CAAc;AACZX,MAAAA,wBAAwB,EAAEa;AADd,KAAd;AAGD;;AAEDV,EAAAA,oBAAoB,CAACU,KAAD,EAAQE,cAAR,EAAwB;AAC1C,SAAKJ,QAAL,CAAc;AACZd,MAAAA,eAAe,EAAEgB,KADL;AAEZd,MAAAA,SAAS,EAAEgB;AAFC,KAAd;AAID;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AACJnB,MAAAA,eADI;AACaC,MAAAA,YADb;AAEJC,MAAAA,SAFI;AAEOC,MAAAA,wBAFP;AAEiCJ,MAAAA;AAFjC,QAGF,KAAKD,KAHT;AAIA,UAAM;AAAEsB,MAAAA,iBAAF;AAAqBC,MAAAA;AAArB,QAA8C,KAAK1B,KAAzD;;AAEA,QAAI,CAACO,SAAL,EAAgB;AACd,0BAAO;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,QAAID,YAAJ,EAAkB;AAChB,0BACE,QAAC,KAAD;AACE,QAAA,MAAM,EAAEE,wBADV;AAEE,QAAA,SAAS,EAAE,KAAKI,2BAFlB;AAAA,+BAIE,QAAC,uBAAD;AACE,UAAA,IAAI,EAAC,oGADP;AAEE,UAAA,2BAA2B,EAAE,KAAKA;AAFpC;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,cADF;AAWD;;AAED,wBACE;AAAA,6BACE;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,KAAK,EAAER,YAFT;AAGE,QAAA,QAAQ,EAAE,MAAOa,CAAP,IAAa;AACrB,eAAKD,4BAAL,CAAkCC,CAAlC;AACCQ,UAAAA,iBAAiB,GACdC,oBAAoB,CAAC,KAAD,CADN,GAEdA,oBAAoB,CAAC,IAAD,CAFxB;AAGD,SARH;AASE,QAAA,MAAM,EAAE,MAAOD,iBAAiB,GAC5BC,oBAAoB,CAAC,KAAD,CADQ,GAE5BA,oBAAoB,CAAC,IAAD,CAX1B;AAAA,kBAaGrB,eAAe,CAACiB,UAAhB,CAA2BK,GAA3B,CAAgC1B,QAAD,iBAC9B;AAEE,UAAA,KAAK,EAAEA,QAAQ,CAACA,QAFlB;AAAA,oBAIGA,QAAQ,CAACA;AAJZ,WACOA,QAAQ,CAACC,EADhB;AAAA;AAAA;AAAA;AAAA,gBADD;AAbH;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AA2BD;;AAzGqD;;AA4GxD,eAAeL,yBAAf","sourcesContent":["import React from 'react';\nimport PopUp from '../../../common/popup/components/PopUpComponent';\nimport PopUpSomethingWentWrong from '../../../common/popup/components/PopUpSomethingWentWrongComponent';\nimport postProductsCategory from '../api/post/postProductsCategory';\nimport getCategories from '../../editCategory/api/get/getCategories';\n\nclass InputEditProductsCategory extends React.Component {\n  constructor(props) {\n    super(props);\n    const { category, id } = this.props;\n    this.state = {\n      id,\n      categoryName: category,\n      categoriesArray: [],\n      errorMessage: '',\n      isLoading: false,\n      popupSmthWentWrongActive: true,\n    };\n    this.setError = this.setError.bind(this);\n    this.updateDataCategories = this.updateDataCategories.bind(this);\n    this.setpopupSmthWentWrongActive = this.setpopupSmthWentWrongActive.bind(this);\n  }\n\n  componentDidMount() {\n    this.interval = setTimeout(async () => {\n      await getCategories(this.updateDataCategories, this.setError);\n    }, 10);\n  }\n\n  async handleCategoryProductsChange(e) {\n    const { id, categoriesArray } = this.state;\n    e.preventDefault();\n\n    this.setState({\n      categoryName: e.target.value,\n    });\n\n    postProductsCategory(id, e.target.value,\n      categoriesArray.categories);\n  }\n\n  setError(value) {\n    this.setState({\n      errorMessage: value,\n    });\n  }\n\n  setpopupSmthWentWrongActive(value) {\n    this.setState({\n      popupSmthWentWrongActive: value,\n    });\n  }\n\n  updateDataCategories(value, valueIsLoading) {\n    this.setState({\n      categoriesArray: value,\n      isLoading: valueIsLoading,\n    });\n  }\n\n  render() {\n    const {\n      categoriesArray, errorMessage,\n      isLoading, popupSmthWentWrongActive, categoryName,\n    } = this.state;\n    const { isProductsUpdated, setIsProductsUpdated } = this.props;\n\n    if (!isLoading) {\n      return <div className=\"-isLoading\"> </div>;\n    }\n    if (errorMessage) {\n      return (\n        <PopUp\n          active={popupSmthWentWrongActive}\n          setActive={this.setpopupSmthWentWrongActive}\n        >\n          <PopUpSomethingWentWrong\n            text=\"Попробуйте еще раз\"\n            setpopupSmthWentWrongActive={this.setpopupSmthWentWrongActive}\n          />\n        </PopUp>\n      );\n    }\n\n    return (\n      <>\n        <select\n          className=\"productsCategory\"\n          value={categoryName}\n          onChange={async (e) => {\n            this.handleCategoryProductsChange(e);\n            (isProductsUpdated\n              ? setIsProductsUpdated(false)\n              : setIsProductsUpdated(true));\n          }}\n          onBlur={() => (isProductsUpdated\n            ? setIsProductsUpdated(false)\n            : setIsProductsUpdated(true))}\n        >\n          {categoriesArray.categories.map((category) => (\n            <option\n              key={category.id}\n              value={category.category}\n            >\n              {category.category}\n            </option>\n          ))}\n        </select>\n\n      </>\n    );\n  }\n}\n\nexport default InputEditProductsCategory;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/changePassword/components/ChangePasswordComponent.jsx\";\nimport React from 'react';\nimport ConnectedHeader from '../../main/header/container/HeaderContainer';\nimport Footer from '../../main/footer/components/FooterComponent';\nimport InputWitchCkeckingNotNull from '../../../common/input/components/InputWitchCkeckingNotNullComponent';\nimport removeErrorNotNull from '../../../common/untils/removeErrorNotNull';\nimport removeErrorLength from '../../../common/untils/removeErrorLength';\nimport processResultChangePassword from '../utils/processResultChangePassword';\nimport setErrorNotNullGroupsChangePassword from '../utils/setErrorNotNullGroupsChangePassword';\nimport ButtonForPassword from '../../../common/button/components/ButtonForPasswordComponent';\nimport setClassErrorById from '../../../common/untils/setClassErrorById';\nimport postChangePasswordRequest from '../api/post/postChangePasswordRequest';\nimport setErrorNotNull from '../../../common/untils/setErrorNotNull';\nimport setErrorIncorrectLength from '../../../common/untils/setErrorIncorrectLength';\nimport inputChangePasswordArray from '../constants/inputChangePasswordArray';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ChangePassword extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateData = (value, name) => {\n      if (name === 'clientEmail') {\n        this.setState({\n          clientEmail: value\n        });\n      }\n\n      if (name === 'passwordNew') {\n        this.setState({\n          passwordNew: value\n        });\n      }\n\n      if (name === 'passwordNewRepeat') {\n        this.setState({\n          passwordNewRepeat: value\n        });\n      }\n    };\n\n    this.updateEmail = value => {\n      this.setState({\n        clientEmail: value\n      });\n    };\n\n    const {\n      pages\n    } = this.props;\n    this.state = {\n      clientEmail: pages.loginPersonalAccountReducer.clientEmail,\n      clientEmailInput: 'emailChangePasswordInput',\n      clientEmailSymbol: 'emailChangePasswordErrorSymbol',\n      passwordNew: '',\n      passwordNewInput: 'passwordNewInput',\n      passwordNewSymbol: 'errorSymbolPasswordNew',\n      passwordNewRepeat: '',\n      passwordRepeatInput: 'passwordNewRepeatInput',\n      passwordRepeatSymbol: 'errorSymbolPasswordNewRepeat',\n      errorLength: 'errorlengthString'\n    };\n  }\n\n  componentDidMount() {\n    const {\n      pages\n    } = this.props;\n    this.setState({\n      clientEmail: pages.loginPersonalAccountReducer.clientEmail\n    });\n  }\n\n  componentDidUpdate(previousProps, previousState) {\n    const {\n      pages\n    } = this.props;\n\n    if (previousProps.pages.loginPersonalAccountReducer.clientEmail !== pages.loginPersonalAccountReducer.clientEmail) {\n      this.updateEmail(pages.loginPersonalAccountReducer.clientEmail);\n    }\n  }\n\n  render() {\n    const {\n      clientEmail,\n      clientEmailInput,\n      clientEmailSymbol,\n      passwordNew,\n      passwordNewInput,\n      passwordNewSymbol,\n      passwordNewRepeat,\n      passwordRepeatInput,\n      passwordRepeatSymbol,\n      errorLength\n    } = this.state;\n    const {\n      history\n    } = this.props;\n\n    async function handleButtonClick() {\n      clientEmail && passwordNew && passwordNewRepeat && passwordNew === passwordNewRepeat && passwordNew.length >= 9 ? processResultChangePassword(clientEmail, passwordNew, passwordNewRepeat, history, setClassErrorById, postChangePasswordRequest) : setErrorNotNullGroupsChangePassword(clientEmail, clientEmailInput, clientEmailSymbol, passwordNew, passwordNewInput, passwordNewSymbol, passwordNewRepeat, passwordRepeatInput, passwordRepeatSymbol, errorLength, setErrorNotNull, setErrorIncorrectLength);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ConnectedHeader, {\n        linkItem: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"buttonBack\",\n          children: \"\\u0413\\u043B\\u0430\\u0432\\u043D\\u0430\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 36\n        }, this),\n        link: \"/main-page\",\n        disabled: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changePassword-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" \\u0421\\u043C\\u0435\\u043D\\u0430 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044F \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"changePassword\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"notRealUser\",\n            className: \"userNotFoundBlock -disabled\",\n            children: \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F \\u0441 \\u0442\\u0430\\u043A\\u0438\\u043C email \\u043D\\u0435 \\u0441\\u0443\\u0449\\u0435\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), inputChangePasswordArray.map(input => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: input.name,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: input.classNameOfString,\n              children: input.nameOfString\n            }, input.classNameOfString, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputWitchCkeckingNotNull, {\n              initialValue: setInitialValue(input.name, firstName, lastName, email, phoneNumber, address, password, passwordNewRepeat),\n              type: input.type,\n              name: input.name,\n              classInput: input.className,\n              classSymbol: input.classNameSymbol,\n              updateData: this.updateData,\n              removeErrorNotNull: input.removeErrorNotNull ? removeErrorNotNull : '',\n              removeErrorLength: input.removeErrorLength ? removeErrorLength : '',\n              classerrorLength: input.classerrorLength ? errorLength : '',\n              minLength: input.minLength ? '13' : '',\n              maxLength: input.maxLength ? '13' : '',\n              placeholder: input.placeholder ? '+375 (__) ___-__-__' : '',\n              updatePhone: input.onFocus ? this.updatePhone : '',\n              onEnterEmail: input.onEnterEmail ? onEnterEmail : '',\n              classNameOfString: input.classNameOfString,\n              nameOfString: input.nameOfString\n            }, input.className, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), input.name === 'passwordNew' && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `${errorLength} -disabled`,\n              children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C \\u0434\\u043E\\u043B\\u0436\\u0435\\u043D \\u0431\\u044B\\u0442\\u044C \\u043D\\u0435 \\u043C\\u0435\\u043D\\u0435\\u0435 9 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 50\n            }, this)]\n          }, input.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"emailString -required\",\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputWitchCkeckingNotNull, {\n              initialValue: clientEmail,\n              type: \"email\",\n              name: \"clientEmail\",\n              classInput: clientEmailInput,\n              classSymbol: clientEmailSymbol,\n              updateData: this.updateData,\n              removeErrorNotNull: removeErrorNotNull\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"passwordNew\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"passwordNewString -required\",\n              children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputWitchCkeckingNotNull, {\n              initialValue: passwordNew,\n              type: \"password\",\n              name: \"passwordNew\",\n              classInput: passwordNewInput,\n              classSymbol: passwordNewSymbol,\n              updateData: this.updateData,\n              removeErrorNotNull: removeErrorNotNull,\n              removeErrorLength: removeErrorLength,\n              classerrorLength: errorLength\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `${errorLength} -disabled`,\n              children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C \\u0434\\u043E\\u043B\\u0436\\u0435\\u043D \\u0431\\u044B\\u0442\\u044C \\u043D\\u0435 \\u043C\\u0435\\u043D\\u0435\\u0435 9 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"passwordNewRepeat\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"passwordNewRepeatString -required\",\n              children: \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputWitchCkeckingNotNull, {\n              initialValue: passwordNewRepeat,\n              type: \"password\",\n              name: \"passwordNewRepeat\",\n              classInput: passwordRepeatInput,\n              classSymbol: passwordRepeatSymbol,\n              updateData: this.updateData,\n              removeErrorNotNull: removeErrorNotNull\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonForPassword, {\n            className: \"changePasswordButton\",\n            handleButtonClick: handleButtonClick,\n            children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default ChangePassword;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/changePassword/components/ChangePasswordComponent.jsx"],"names":["React","ConnectedHeader","Footer","InputWitchCkeckingNotNull","removeErrorNotNull","removeErrorLength","processResultChangePassword","setErrorNotNullGroupsChangePassword","ButtonForPassword","setClassErrorById","postChangePasswordRequest","setErrorNotNull","setErrorIncorrectLength","inputChangePasswordArray","ChangePassword","Component","constructor","props","updateData","value","name","setState","clientEmail","passwordNew","passwordNewRepeat","updateEmail","pages","state","loginPersonalAccountReducer","clientEmailInput","clientEmailSymbol","passwordNewInput","passwordNewSymbol","passwordRepeatInput","passwordRepeatSymbol","errorLength","componentDidMount","componentDidUpdate","previousProps","previousState","render","history","handleButtonClick","length","map","input","classNameOfString","nameOfString","setInitialValue","firstName","lastName","email","phoneNumber","address","password","type","className","classNameSymbol","classerrorLength","minLength","maxLength","placeholder","onFocus","updatePhone","onEnterEmail"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ConnectedHeader from '../../main/header/container/HeaderContainer';\nimport Footer from '../../main/footer/components/FooterComponent';\nimport InputWitchCkeckingNotNull from '../../../common/input/components/InputWitchCkeckingNotNullComponent';\nimport removeErrorNotNull from '../../../common/untils/removeErrorNotNull';\nimport removeErrorLength from '../../../common/untils/removeErrorLength';\nimport processResultChangePassword from '../utils/processResultChangePassword';\nimport setErrorNotNullGroupsChangePassword from '../utils/setErrorNotNullGroupsChangePassword';\nimport ButtonForPassword from '../../../common/button/components/ButtonForPasswordComponent';\nimport setClassErrorById from '../../../common/untils/setClassErrorById';\nimport postChangePasswordRequest from '../api/post/postChangePasswordRequest';\nimport setErrorNotNull from '../../../common/untils/setErrorNotNull';\nimport setErrorIncorrectLength from '../../../common/untils/setErrorIncorrectLength';\nimport inputChangePasswordArray from '../constants/inputChangePasswordArray';\n\nclass ChangePassword extends React.Component {\n  constructor(props) {\n    super(props);\n    const { pages } = this.props;\n    this.state = {\n      clientEmail: pages.loginPersonalAccountReducer.clientEmail,\n      clientEmailInput: 'emailChangePasswordInput',\n      clientEmailSymbol: 'emailChangePasswordErrorSymbol',\n      passwordNew: '',\n      passwordNewInput: 'passwordNewInput',\n      passwordNewSymbol: 'errorSymbolPasswordNew',\n      passwordNewRepeat: '',\n      passwordRepeatInput: 'passwordNewRepeatInput',\n      passwordRepeatSymbol: 'errorSymbolPasswordNewRepeat',\n      errorLength: 'errorlengthString',\n    };\n  }\n\n  componentDidMount() {\n    const { pages } = this.props;\n    this.setState({\n      clientEmail: pages.loginPersonalAccountReducer.clientEmail,\n    });\n  }\n\n  componentDidUpdate(previousProps, previousState) {\n    const { pages } = this.props;\n    if (previousProps.pages.loginPersonalAccountReducer.clientEmail\n      !== pages.loginPersonalAccountReducer.clientEmail) {\n      this.updateEmail(pages.loginPersonalAccountReducer.clientEmail);\n    }\n  }\n\n  updateData = (value, name) => {\n    if (name === 'clientEmail') { this.setState({ clientEmail: value }); }\n    if (name === 'passwordNew') { this.setState({ passwordNew: value }); }\n    if (name === 'passwordNewRepeat') { this.setState({ passwordNewRepeat: value }); }\n  }\n\n  updateEmail = (value) => { this.setState({ clientEmail: value }); }\n\n  render() {\n    const {\n      clientEmail, clientEmailInput, clientEmailSymbol,\n      passwordNew, passwordNewInput, passwordNewSymbol,\n      passwordNewRepeat, passwordRepeatInput, passwordRepeatSymbol, errorLength,\n    } = this.state;\n    const { history } = this.props;\n\n    async function handleButtonClick() {\n      (clientEmail && passwordNew && passwordNewRepeat)\n            && (passwordNew === passwordNewRepeat) && (passwordNew.length >= 9)\n        ? processResultChangePassword(clientEmail, passwordNew, passwordNewRepeat, history,\n          setClassErrorById, postChangePasswordRequest)\n        : setErrorNotNullGroupsChangePassword(clientEmail, clientEmailInput, clientEmailSymbol,\n          passwordNew, passwordNewInput, passwordNewSymbol, passwordNewRepeat, passwordRepeatInput,\n          passwordRepeatSymbol, errorLength, setErrorNotNull, setErrorIncorrectLength);\n    }\n    return (\n      <>\n        <ConnectedHeader linkItem={<button type=\"button\" className=\"buttonBack\">Главная</button>} link=\"/main-page\" disabled={false} />\n        <div className=\"changePassword-wrap\">\n          <h2> Смена пароля </h2>\n          <form className=\"changePassword\">\n            <p id=\"notRealUser\" className=\"userNotFoundBlock -disabled\">Пользователя с таким email не существует</p>\n            {inputChangePasswordArray.map((input) => (\n              <div className={input.name} key={input.name}>\n                <p className={input.classNameOfString} key={input.classNameOfString}>\n                  {input.nameOfString}\n                </p>\n                <InputWitchCkeckingNotNull\n                  key={input.className}\n                  initialValue={setInitialValue(input.name, firstName, lastName, email,\n                    phoneNumber, address, password, passwordNewRepeat)}\n                  type={input.type}\n                  name={input.name}\n                  classInput={input.className}\n                  classSymbol={input.classNameSymbol}\n                  updateData={this.updateData}\n                  removeErrorNotNull={input.removeErrorNotNull ? removeErrorNotNull : ''}\n                  removeErrorLength={input.removeErrorLength ? removeErrorLength : ''}\n                  classerrorLength={input.classerrorLength ? errorLength : ''}\n                  minLength={input.minLength ? '13' : ''}\n                  maxLength={input.maxLength ? '13' : ''}\n                  placeholder={input.placeholder ? '+375 (__) ___-__-__' : ''}\n                  updatePhone={input.onFocus ? this.updatePhone : ''}\n                  onEnterEmail={input.onEnterEmail ? onEnterEmail : ''}\n                  classNameOfString={input.classNameOfString}\n                  nameOfString={input.nameOfString}\n                />\n                {input.name === 'passwordNew' && <p className={`${errorLength} -disabled`}>Пароль должен быть не менее 9 символов</p>}\n              </div>\n            ))}\n            <div className=\"email\">\n              <p className=\"emailString -required\">Email:</p>\n              <InputWitchCkeckingNotNull\n                initialValue={clientEmail}\n                type=\"email\"\n                name=\"clientEmail\"\n                classInput={clientEmailInput}\n                classSymbol={clientEmailSymbol}\n                updateData={this.updateData}\n                removeErrorNotNull={removeErrorNotNull}\n              />\n            </div>\n            <div className=\"passwordNew\">\n              <p className=\"passwordNewString -required\">Пароль:</p>\n              <InputWitchCkeckingNotNull\n                initialValue={passwordNew}\n                type=\"password\"\n                name=\"passwordNew\"\n                classInput={passwordNewInput}\n                classSymbol={passwordNewSymbol}\n                updateData={this.updateData}\n                removeErrorNotNull={removeErrorNotNull}\n                removeErrorLength={removeErrorLength}\n                classerrorLength={errorLength}\n              />\n              <p className={`${errorLength} -disabled`}>Пароль должен быть не менее 9 символов</p>\n            </div>\n            <div className=\"passwordNewRepeat\">\n              <p className=\"passwordNewRepeatString -required\">Повторите пароль:</p>\n              <InputWitchCkeckingNotNull\n                initialValue={passwordNewRepeat}\n                type=\"password\"\n                name=\"passwordNewRepeat\"\n                classInput={passwordRepeatInput}\n                classSymbol={passwordRepeatSymbol}\n                updateData={this.updateData}\n                removeErrorNotNull={removeErrorNotNull}\n              />\n            </div>\n            <ButtonForPassword\n              className=\"changePasswordButton\"\n              handleButtonClick={handleButtonClick}\n            >\n              Изменить пароль\n            </ButtonForPassword>\n          </form>\n        </div>\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default ChangePassword;\n"]},"metadata":{},"sourceType":"module"}
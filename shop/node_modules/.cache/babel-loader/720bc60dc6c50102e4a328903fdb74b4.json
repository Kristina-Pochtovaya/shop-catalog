{"ast":null,"code":"var _jsxFileName = \"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/editProducts/components/EditProductsPageColumnsComponent.jsx\";\nimport React from 'react';\nimport getProducts from '../api/get/getProducts';\nimport getCategories from '../../editCategory/api/get/getCategories';\nimport PopUpErrorLoading from '../../../common/popup/components/PopUpErrorLoadingComponent';\nimport IsEditActiveColumnsComponent from './IsEditActiveColumnsComponent';\nimport IsEditNotActiveColumnsComponent from './IsEditNotActiveColumnsComponent';\nimport postDeleteProduct from '../api/post/postDeleteProduct';\nimport postProducts from '../api/post/postProducts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass EditProductsPageColumns extends React.Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n\n    this.handleButtonOnSave = async e => {\n      const {\n        isEditActiveId,\n        productImage,\n        productCategory,\n        categoriesArray,\n        productName,\n        isUpdated,\n        productPrice,\n        productInStock\n      } = this.state;\n      const {\n        isProductsUpdated,\n        setIsProductsUpdated\n      } = this.props;\n      await postProducts(isEditActiveId, productImage, productCategory, categoriesArray, productName, productPrice, productInStock);\n      this.setState({\n        isUpdated: !isUpdated\n      });\n      isProductsUpdated ? setIsProductsUpdated(false) : setIsProductsUpdated(true);\n    };\n\n    this.setError = errorMessage => this.setState({\n      ErrorMessageProducts: errorMessage\n    });\n\n    this.setpopupSmthWentWrongActive = value => this.setState({\n      popupSmthWentWrongActive: value\n    });\n\n    this.setEditActive = value => this.setState({\n      isEditActive: value\n    });\n\n    this.updateImage = value => this.setState({\n      productImage: value\n    });\n\n    this.updateProductCategory = (value, array) => {\n      this.setState({\n        productCategory: value,\n        categoriesArray: array\n      });\n    };\n\n    this.updateProductName = value => this.setState({\n      productName: value\n    });\n\n    this.updateProductPrice = value => this.setState({\n      productPrice: value\n    });\n\n    this.updateProductInStock = value => this.setState({\n      productInStock: value\n    });\n\n    this.updateProducts = (value, valueIsLoading) => {\n      if (this._isMounted) {\n        this.setState({\n          productsArray: value,\n          isLoadingProducts: valueIsLoading\n        });\n      }\n    };\n\n    this.updateDataCategories = (value, valueIsLoading) => {\n      if (this._isMounted) {\n        this.setState({\n          categoriesArray: value.categories,\n          isLoadingCategories: valueIsLoading\n        });\n      }\n    };\n\n    this.updateAfterDelete = () => {\n      const {\n        isUpdated\n      } = this.state;\n      this.setState({\n        isUpdated: !isUpdated\n      });\n    };\n\n    this.state = {\n      productsArray: [],\n      isEditActive: false,\n      isEditActiveId: '',\n      isUpdated: false,\n      isLoadingProducts: false,\n      isLoadingCategories: false,\n      ErrorMessageProducts: '',\n      popupSmthWentWrongActive: true,\n      IsSaveButtonVisible: false,\n      IsEditButtonVisible: true,\n      productImage: '',\n      productCategory: '',\n      productName: '',\n      productPrice: '',\n      productInStock: 1,\n      categoriesArray: []\n    };\n  }\n\n  async componentDidMount() {\n    this._isMounted = true;\n    await getProducts(this.updateProducts, this.setError);\n    await getCategories(this.updateDataCategories);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const {\n      isUpdated\n    } = this.state;\n\n    if (prevState.isUpdated !== isUpdated) {\n      await getProducts(this.updateProducts, this.setError);\n      await getCategories(this.updateDataCategories);\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    const {\n      isEditActive,\n      isEditActiveId,\n      ErrorMessageProducts,\n      popupSmthWentWrongActive,\n      productsArray,\n      isLoadingProducts,\n      IsSaveButtonVisible,\n      IsEditButtonVisible,\n      isLoadingCategories,\n      isUpdated,\n      categoriesArray\n    } = this.state;\n    const {\n      isProductsUpdated,\n      setIsProductsUpdated\n    } = this.props;\n\n    if (!isLoadingProducts || !isLoadingCategories) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"-isLoading\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (ErrorMessageProducts) {\n      return /*#__PURE__*/_jsxDEV(PopUpErrorLoading, {\n        popupSmthWentWrongActive: popupSmthWentWrongActive,\n        setpopupSmthWentWrongActive: this.setpopupSmthWentWrongActive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: productsArray.products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"columns\",\n          children: [isEditActive && product.id === isEditActiveId ? /*#__PURE__*/_jsxDEV(IsEditActiveColumnsComponent, {\n            product: product,\n            categoriesArray: categoriesArray,\n            updateImage: this.updateImage,\n            updateProductCategory: this.updateProductCategory,\n            updateProductName: this.updateProductName,\n            updateProductPrice: this.updateProductPrice,\n            updateProductInStock: this.updateProductInStock\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(IsEditNotActiveColumnsComponent, {\n            product: product,\n            categoriesArray: categoriesArray\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnEdit\",\n            children: IsEditButtonVisible && isEditActive && product.id === isEditActiveId ? /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"editProductsButton\",\n              onClick: () => {\n                this.setState({\n                  isEditActive: false,\n                  isEditActiveId: product.id,\n                  IsSaveButtonVisible: true,\n                  IsEditButtonVisible: false\n                });\n                this.handleButtonOnSave();\n              },\n              children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }, this) : categoriesArray.map(category => product.categoryId === category.id && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"editProductsButton\",\n              onClick: () => {\n                this.setState({\n                  isEditActive: true,\n                  isEditActiveId: product.id,\n                  productImage: product.image,\n                  productCategory: category.category,\n                  productName: product.description,\n                  productPrice: product.price,\n                  productInStock: product.inStock,\n                  IsEditButtonVisible: true,\n                  IsSaveButtonVisible: false\n                });\n              },\n              children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n            }, product.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnDelete\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"deleteProductsButton\",\n              onClick: () => {\n                postDeleteProduct(product.id, setIsProductsUpdated, isProductsUpdated, this.updateAfterDelete);\n              },\n              children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this))\n    }, void 0, false);\n  }\n\n}\n\nexport default EditProductsPageColumns;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/editProducts/components/EditProductsPageColumnsComponent.jsx"],"names":["React","getProducts","getCategories","PopUpErrorLoading","IsEditActiveColumnsComponent","IsEditNotActiveColumnsComponent","postDeleteProduct","postProducts","EditProductsPageColumns","Component","constructor","props","_isMounted","handleButtonOnSave","e","isEditActiveId","productImage","productCategory","categoriesArray","productName","isUpdated","productPrice","productInStock","state","isProductsUpdated","setIsProductsUpdated","setState","setError","errorMessage","ErrorMessageProducts","setpopupSmthWentWrongActive","value","popupSmthWentWrongActive","setEditActive","isEditActive","updateImage","updateProductCategory","array","updateProductName","updateProductPrice","updateProductInStock","updateProducts","valueIsLoading","productsArray","isLoadingProducts","updateDataCategories","categories","isLoadingCategories","updateAfterDelete","IsSaveButtonVisible","IsEditButtonVisible","componentDidMount","componentDidUpdate","prevProps","prevState","componentWillUnmount","render","products","map","product","id","category","categoryId","image","description","price","inStock"],"mappings":"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","sourcesContent":["import React from 'react';\nimport getProducts from '../api/get/getProducts';\nimport getCategories from '../../editCategory/api/get/getCategories';\nimport PopUpErrorLoading from '../../../common/popup/components/PopUpErrorLoadingComponent';\nimport IsEditActiveColumnsComponent from './IsEditActiveColumnsComponent';\nimport IsEditNotActiveColumnsComponent from './IsEditNotActiveColumnsComponent';\nimport postDeleteProduct from '../api/post/postDeleteProduct';\nimport postProducts from '../api/post/postProducts';\n\nclass EditProductsPageColumns extends React.Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      productsArray: [],\n      isEditActive: false,\n      isEditActiveId: '',\n      isUpdated: false,\n      isLoadingProducts: false,\n      isLoadingCategories: false,\n      ErrorMessageProducts: '',\n      popupSmthWentWrongActive: true,\n      IsSaveButtonVisible: false,\n      IsEditButtonVisible: true,\n      productImage: '',\n      productCategory: '',\n      productName: '',\n      productPrice: '',\n      productInStock: 1,\n      categoriesArray: [],\n    };\n  }\n\n  async componentDidMount() {\n    this._isMounted = true;\n    await getProducts(this.updateProducts, this.setError);\n    await getCategories(this.updateDataCategories);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const { isUpdated } = this.state;\n    if (prevState.isUpdated !== isUpdated) {\n      await getProducts(this.updateProducts, this.setError);\n      await getCategories(this.updateDataCategories);\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n   handleButtonOnSave = async (e) => {\n     const {\n       isEditActiveId, productImage, productCategory, categoriesArray, productName, isUpdated,\n       productPrice, productInStock,\n     } = this.state;\n     const { isProductsUpdated, setIsProductsUpdated } = this.props;\n     await postProducts(\n       isEditActiveId, productImage, productCategory, categoriesArray, productName, productPrice,\n       productInStock,\n     );\n     this.setState({ isUpdated: !isUpdated });\n     isProductsUpdated ? setIsProductsUpdated(false) : setIsProductsUpdated(true);\n   }\n\n  setError = (errorMessage) => this.setState({ ErrorMessageProducts: errorMessage });\n\n  setpopupSmthWentWrongActive = (value) => this.setState({ popupSmthWentWrongActive: value });\n\n  setEditActive = (value) => this.setState({ isEditActive: value });\n\n  updateImage = (value) => this.setState({ productImage: value });\n\n  updateProductCategory = (value, array) => {\n    this.setState({ productCategory: value, categoriesArray: array });\n  }\n\n  updateProductName = (value) => this.setState({ productName: value });\n\n  updateProductPrice = (value) => this.setState({ productPrice: value });\n\n  updateProductInStock = (value) => this.setState({ productInStock: value });\n\n  updateProducts = (value, valueIsLoading) => {\n    if (this._isMounted) {\n      this.setState({\n        productsArray: value,\n        isLoadingProducts: valueIsLoading,\n      });\n    }\n  }\n\n  updateDataCategories = (value, valueIsLoading) => {\n    if (this._isMounted) {\n      this.setState({\n        categoriesArray: value.categories,\n        isLoadingCategories: valueIsLoading,\n      });\n    }\n  }\n\n  updateAfterDelete = () => {\n    const { isUpdated } = this.state;\n    this.setState({ isUpdated: !isUpdated });\n  }\n\n  render() {\n    const {\n      isEditActive, isEditActiveId, ErrorMessageProducts, popupSmthWentWrongActive,\n      productsArray, isLoadingProducts, IsSaveButtonVisible, IsEditButtonVisible,\n      isLoadingCategories, isUpdated, categoriesArray,\n    } = this.state;\n    const { isProductsUpdated, setIsProductsUpdated } = this.props;\n    if (!isLoadingProducts || !isLoadingCategories) {\n      return <div className=\"-isLoading\"> </div>;\n    }\n    if (ErrorMessageProducts) {\n      return (\n        <PopUpErrorLoading\n          popupSmthWentWrongActive={popupSmthWentWrongActive}\n          setpopupSmthWentWrongActive={this.setpopupSmthWentWrongActive}\n        />\n      );\n    }\n    return (\n      <>\n        {productsArray.products.map((product) => (\n          <li key={product.id}>\n            <div className=\"columns\">\n              {isEditActive && product.id === isEditActiveId\n                ? (\n                  <IsEditActiveColumnsComponent\n                    product={product}\n                    categoriesArray={categoriesArray}\n                    updateImage={this.updateImage}\n                    updateProductCategory={this.updateProductCategory}\n                    updateProductName={this.updateProductName}\n                    updateProductPrice={this.updateProductPrice}\n                    updateProductInStock={this.updateProductInStock}\n                  />\n                ) : (\n                  <IsEditNotActiveColumnsComponent\n                    product={product}\n                    categoriesArray={categoriesArray}\n                  />\n                )}\n              <div className=\"columnEdit\">\n                {IsEditButtonVisible && isEditActive && product.id === isEditActiveId ? (\n                  <button\n                    type=\"button\"\n                    className=\"editProductsButton\"\n                    onClick={() => {\n                      this.setState({\n                        isEditActive: false,\n                        isEditActiveId: product.id,\n                        IsSaveButtonVisible: true,\n                        IsEditButtonVisible: false,\n                      });\n                      this.handleButtonOnSave();\n                    }}\n                  >\n                    Сохранить\n                  </button>\n                ) : (\n                  categoriesArray.map((category) => (\n                    product.categoryId === category.id\n                    && (\n                    <button\n                      key={product.id}\n                      type=\"button\"\n                      className=\"editProductsButton\"\n                      onClick={() => {\n                        this.setState({\n                          isEditActive: true,\n                          isEditActiveId: product.id,\n                          productImage: product.image,\n                          productCategory: category.category,\n                          productName: product.description,\n                          productPrice: product.price,\n                          productInStock: product.inStock,\n                          IsEditButtonVisible: true,\n                          IsSaveButtonVisible: false,\n                        });\n                      }}\n                    >\n                      Изменить\n                    </button>\n                    )))\n                )}\n              </div>\n              <div className=\"columnDelete\">\n                <button\n                  type=\"button\"\n                  className=\"deleteProductsButton\"\n                  onClick={() => {\n                    postDeleteProduct(product.id, setIsProductsUpdated,\n                      isProductsUpdated, this.updateAfterDelete);\n                  }}\n                >\n                  Удалить\n                </button>\n              </div>\n            </div>\n          </li>\n        ))}\n      </>\n    );\n  }\n}\n\nexport default EditProductsPageColumns;\n"]},"metadata":{},"sourceType":"module"}
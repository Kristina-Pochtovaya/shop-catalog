{"ast":null,"code":"import postNewCategory from '../api/post/postNewCategory';\nimport setClassErrorById from '../../../common/untils/setClassErrorById';\nimport checkOnSymbols from '../../../common/untils/checkOnSymbols';\n\nconst processResultAddNewCategory = async (categoryName, image, titleColor, history, isProductsUpdated, setIsProductsUpdated) => {\n  let newCategoryName = '';\n  const result = '';\n  newCategoryName = checkOnSymbols(categoryName);\n  return newCategoryName;\n  /*   if (newCategoryName === 'Prohibited symbols') {\n      setClassErrorById('errorProhibitedsymbols', 'errorProhibitedsymbols');\n    } else {\n      result = await postNewCategory(categoryName, image, titleColor);\n  \n      if (result === categoryName) {\n        history.push('/edit-category');\n        setIsProductsUpdated(!isProductsUpdated);\n      } if (result === false) {\n        setClassErrorById('errorNewImage', 'errorNewImage');\n      } if (result === 'Not new category') {\n        setClassErrorById('errorNewName', 'errorNewName');\n      }\n    } */\n};\n\nexport default processResultAddNewCategory;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/editCategory/utils/processResultAddNewCategory.jsx"],"names":["postNewCategory","setClassErrorById","checkOnSymbols","processResultAddNewCategory","categoryName","image","titleColor","history","isProductsUpdated","setIsProductsUpdated","newCategoryName","result"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,6BAA5B;AACA,OAAOC,iBAAP,MAA8B,0CAA9B;AACA,OAAOC,cAAP,MAA2B,uCAA3B;;AAEA,MAAMC,2BAA2B,GAAG,OAAOC,YAAP,EAAqBC,KAArB,EAA4BC,UAA5B,EAAwCC,OAAxC,EAClCC,iBADkC,EACfC,oBADe,KACU;AAC5C,MAAIC,eAAe,GAAG,EAAtB;AACA,QAAMC,MAAM,GAAG,EAAf;AACAD,EAAAA,eAAe,GAAGR,cAAc,CAACE,YAAD,CAAhC;AAEA,SAAOM,eAAP;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,CAtBD;;AAwBA,eAAeP,2BAAf","sourcesContent":["import postNewCategory from '../api/post/postNewCategory';\nimport setClassErrorById from '../../../common/untils/setClassErrorById';\nimport checkOnSymbols from '../../../common/untils/checkOnSymbols';\n\nconst processResultAddNewCategory = async (categoryName, image, titleColor, history,\n  isProductsUpdated, setIsProductsUpdated) => {\n  let newCategoryName = '';\n  const result = '';\n  newCategoryName = checkOnSymbols(categoryName);\n\n  return newCategoryName;\n\n/*   if (newCategoryName === 'Prohibited symbols') {\n    setClassErrorById('errorProhibitedsymbols', 'errorProhibitedsymbols');\n  } else {\n    result = await postNewCategory(categoryName, image, titleColor);\n\n    if (result === categoryName) {\n      history.push('/edit-category');\n      setIsProductsUpdated(!isProductsUpdated);\n    } if (result === false) {\n      setClassErrorById('errorNewImage', 'errorNewImage');\n    } if (result === 'Not new category') {\n      setClassErrorById('errorNewName', 'errorNewName');\n    }\n  } */\n};\n\nexport default processResultAddNewCategory;\n"]},"metadata":{},"sourceType":"module"}
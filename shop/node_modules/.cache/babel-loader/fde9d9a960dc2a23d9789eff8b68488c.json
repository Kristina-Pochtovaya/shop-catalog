{"ast":null,"code":"import { ADD, DELETE, INCREASE, DECREASE, DELETEALL, ADDCLIENTINFORMATION } from '../actions/catalogItemsActions';\nconst initialState = [];\n\nconst catalogItemsReducer = (states = initialState, action) => {\n  switch (action.type) {\n    case ADD.type:\n      {\n        const index = states.findIndex(item => item.id === action.payload.item.id);\n\n        if (index === -1) {\n          return [...states, action.payload.item];\n        }\n\n        return states;\n      }\n\n    case INCREASE.type:\n      {\n        const index = states.findIndex(item => item.id === action.payload.itemId);\n        return [...states.slice(0, index), { ...states[index],\n          counter: action.payload.counter + 1\n        }, ...states.slice(index + 1)];\n      }\n\n    case DECREASE.type:\n      {\n        if (action.payload.counter > 1) {\n          const index = states.findIndex(item => item.id === action.payload.itemId);\n          return [...states.slice(0, index), { ...states[index],\n            counter: action.payload.counter - 1\n          }, ...states.slice(index + 1)];\n        }\n\n        return states;\n      }\n\n    case DELETE.type:\n      {\n        return [...states.filter(item => item.id !== action.payload.itemId)];\n      }\n\n    case DELETEALL.type:\n      {\n        return [];\n      }\n\n    case ADDCLIENTINFORMATION.type:\n      {\n        let i = 0;\n\n        for (i; i <= states.length; i += 1) {\n          const item = states[i];\n\n          if (item !== undefined) {\n            item.clientInformation = action.payload.clientName;\n          }\n        }\n\n        return states;\n      }\n\n    default:\n      return states;\n  }\n};\n\nexport default catalogItemsReducer;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/redux/reducers/catalogItemsReducer.jsx"],"names":["ADD","DELETE","INCREASE","DECREASE","DELETEALL","ADDCLIENTINFORMATION","initialState","catalogItemsReducer","states","action","type","index","findIndex","item","id","payload","itemId","slice","counter","filter","i","length","undefined","clientInformation","clientName"],"mappings":"AAAA,SACEA,GADF,EACOC,MADP,EACeC,QADf,EACyBC,QADzB,EACmCC,SADnC,EAC8CC,oBAD9C,QAEO,gCAFP;AAIA,MAAMC,YAAY,GAAG,EAArB;;AAEA,MAAMC,mBAAmB,GAAG,CAACC,MAAM,GAAGF,YAAV,EAAwBG,MAAxB,KAAmC;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,GAAG,CAACU,IAAT;AAAe;AACb,cAAMC,KAAK,GAAGH,MAAM,CAACI,SAAP,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAP,CAAeF,IAAf,CAAoBC,EAA3D,CAAd;;AACA,YAAIH,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,iBAAO,CAAC,GAAGH,MAAJ,EAAYC,MAAM,CAACM,OAAP,CAAeF,IAA3B,CAAP;AACD;;AAAC,eAAOL,MAAP;AACH;;AAED,SAAKN,QAAQ,CAACQ,IAAd;AAAoB;AAClB,cAAMC,KAAK,GAAGH,MAAM,CAACI,SAAP,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAP,CAAeC,MAAtD,CAAd;AACA,eAAO,CACL,GAAGR,MAAM,CAACS,KAAP,CAAa,CAAb,EAAgBN,KAAhB,CADE,EAEL,EAAE,GAAGH,MAAM,CAACG,KAAD,CAAX;AAAoBO,UAAAA,OAAO,EAAET,MAAM,CAACM,OAAP,CAAeG,OAAf,GAAyB;AAAtD,SAFK,EAGL,GAAGV,MAAM,CAACS,KAAP,CAAaN,KAAK,GAAG,CAArB,CAHE,CAAP;AAKD;;AAED,SAAKR,QAAQ,CAACO,IAAd;AAAoB;AAClB,YAAID,MAAM,CAACM,OAAP,CAAeG,OAAf,GAAyB,CAA7B,EAAgC;AAC9B,gBAAMP,KAAK,GAAGH,MAAM,CAACI,SAAP,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAP,CAAeC,MAAtD,CAAd;AACA,iBAAO,CACL,GAAGR,MAAM,CAACS,KAAP,CAAa,CAAb,EAAgBN,KAAhB,CADE,EAEL,EAAE,GAAGH,MAAM,CAACG,KAAD,CAAX;AAAoBO,YAAAA,OAAO,EAAET,MAAM,CAACM,OAAP,CAAeG,OAAf,GAAyB;AAAtD,WAFK,EAGL,GAAGV,MAAM,CAACS,KAAP,CAAaN,KAAK,GAAG,CAArB,CAHE,CAAP;AAKD;;AAAC,eAAOH,MAAP;AACH;;AAED,SAAKP,MAAM,CAACS,IAAZ;AAAkB;AAChB,eAAO,CACL,GAAGF,MAAM,CAACW,MAAP,CAAeN,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAP,CAAeC,MAAnD,CADE,CAAP;AAGD;;AAED,SAAKZ,SAAS,CAACM,IAAf;AAAqB;AACnB,eAAO,EAAP;AACD;;AAED,SAAKL,oBAAoB,CAACK,IAA1B;AAAgC;AAC9B,YAAIU,CAAC,GAAG,CAAR;;AACA,aAAKA,CAAL,EAAQA,CAAC,IAAIZ,MAAM,CAACa,MAApB,EAA4BD,CAAC,IAAI,CAAjC,EAAoC;AAClC,gBAAMP,IAAI,GAAGL,MAAM,CAACY,CAAD,CAAnB;;AACA,cAAIP,IAAI,KAAKS,SAAb,EAAwB;AACtBT,YAAAA,IAAI,CAACU,iBAAL,GAAyBd,MAAM,CAACM,OAAP,CAAeS,UAAxC;AACD;AACF;;AAED,eAAOhB,MAAP;AACD;;AAED;AACE,aAAOA,MAAP;AAnDJ;AAqDD,CAtDD;;AAwDA,eAAeD,mBAAf","sourcesContent":["import {\n  ADD, DELETE, INCREASE, DECREASE, DELETEALL, ADDCLIENTINFORMATION,\n} from '../actions/catalogItemsActions';\n\nconst initialState = [];\n\nconst catalogItemsReducer = (states = initialState, action) => {\n  switch (action.type) {\n    case ADD.type: {\n      const index = states.findIndex((item) => item.id === action.payload.item.id);\n      if (index === -1) {\n        return [...states, action.payload.item];\n      } return states;\n    }\n\n    case INCREASE.type: {\n      const index = states.findIndex((item) => item.id === action.payload.itemId);\n      return [\n        ...states.slice(0, index),\n        { ...states[index], counter: action.payload.counter + 1 },\n        ...states.slice(index + 1),\n      ];\n    }\n\n    case DECREASE.type: {\n      if (action.payload.counter > 1) {\n        const index = states.findIndex((item) => item.id === action.payload.itemId);\n        return [\n          ...states.slice(0, index),\n          { ...states[index], counter: action.payload.counter - 1 },\n          ...states.slice(index + 1),\n        ];\n      } return states;\n    }\n\n    case DELETE.type: {\n      return [\n        ...states.filter((item) => item.id !== action.payload.itemId),\n      ];\n    }\n\n    case DELETEALL.type: {\n      return [];\n    }\n\n    case ADDCLIENTINFORMATION.type: {\n      let i = 0;\n      for (i; i <= states.length; i += 1) {\n        const item = states[i];\n        if (item !== undefined) {\n          item.clientInformation = action.payload.clientName;\n        }\n      }\n\n      return states;\n    }\n\n    default:\n      return states;\n  }\n};\n\nexport default catalogItemsReducer;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"function formatPhoneNumber(value) {\n  let phone = '';\n  value.split('').forEach((letter, index) => {\n    if (index === 4) {\n      phone += `(${letter}`;\n\n      if ('+0123456789'.includes(letter)) {\n        phone += letter;\n      }\n    }\n  });\n  return phone;\n}\n\nexport default formatPhoneNumber;\n/*\nfunction formatPhoneNumber(value) {\n  let phone = '';\n  value.split('').forEach((letter) => {\n    if ('+0123456789'.includes(letter)) {\n      phone += letter;\n    }\n  });\n  return phone;\n} */","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/src/common/untils/formatPhoneNumber.jsx"],"names":["formatPhoneNumber","value","phone","split","forEach","letter","index","includes"],"mappings":"AAAA,SAASA,iBAAT,CAA2BC,KAA3B,EAAkC;AAChC,MAAIC,KAAK,GAAG,EAAZ;AAEAD,EAAAA,KAAK,CAACE,KAAN,CAAY,EAAZ,EAAgBC,OAAhB,CAAwB,CAACC,MAAD,EAASC,KAAT,KAAmB;AACzC,QAAIA,KAAK,KAAK,CAAd,EAAiB;AACfJ,MAAAA,KAAK,IAAK,IAAGG,MAAO,EAApB;;AACA,UAAI,cAAcE,QAAd,CAAuBF,MAAvB,CAAJ,EAAoC;AAClCH,QAAAA,KAAK,IAAIG,MAAT;AACD;AACF;AACF,GAPD;AAQA,SAAOH,KAAP;AACD;;AAED,eAAeF,iBAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["function formatPhoneNumber(value) {\n  let phone = '';\n\n  value.split('').forEach((letter, index) => {\n    if (index === 4) {\n      phone += `(${letter}`;\n      if ('+0123456789'.includes(letter)) {\n        phone += letter;\n      }\n    }\n  });\n  return phone;\n}\n\nexport default formatPhoneNumber;\n/*\nfunction formatPhoneNumber(value) {\n  let phone = '';\n  value.split('').forEach((letter) => {\n    if ('+0123456789'.includes(letter)) {\n      phone += letter;\n    }\n  });\n  return phone;\n} */\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/personalAccount/components/PersonaIformationComponent.jsx\";\n\n/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport setErrorNotNull from '../../../common/untils/setErrorNotNull';\nimport InputWitchCkeckingNotNull from '../../../common/input/components/InputWitchCkeckingNotNullComponent';\nimport formatPhoneNumber from '../../../common/untils/formatPhoneNumber';\nimport PopUp from '../../../common/popup/components/PopUpComponent';\nimport PopUpSomethingWentWrong from '../../../common/popup/components/PopUpSomethingWentWrongComponent';\n/* import postChangePasswordRequest from '../api/post/postChangePasswordRequest';\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PersonaIformation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: '',\n      firstNameInput: 'firstNameInput',\n      firstNameSymbol: 'firstNameSymbol',\n      lastName: '',\n      lastNameInput: 'lastNameInput',\n      lastNameSymbol: 'lastNameSymbol',\n      email: '',\n      emailInput: 'emailInput',\n      emailSymbol: 'emailSymbol',\n      phoneNumber: '+375(__)___-__-__',\n      address: '',\n      passwordNew: '',\n      passwordNewInput: 'passwordNewInput',\n      passwordNewSymbol: 'errorSymbolPasswordNew',\n      passwordNewRepeat: '',\n      passwordRepeatInput: 'passwordNewRepeatInput',\n      passwordRepeatSymbol: 'errorSymbolPasswordNewRepeat',\n      isLoading: false,\n      ErrorMessage: ''\n    };\n    this.updateData = this.updateData.bind(this);\n  }\n\n  componentDidMount() {\n    /*     this.interval = setTimeout(async () => {\n      await getUsers(this.props.pages.loginPersonalAccountReducer.clientEmail, this.setError);\n    }, 10); */\n    console.log(this.props.pages.loginPersonalAccountReducer.clientEmail);\n  }\n\n  updateData(value, name) {\n    if (name === 'firstName') {\n      this.setState({\n        firstName: value\n      });\n    }\n\n    if (name === 'lastName') {\n      this.setState({\n        lastName: value\n      });\n    }\n\n    if (name === 'email') {\n      this.setState({\n        email: value\n      });\n    }\n\n    if (name === 'passwordNew') {\n      this.setState({\n        passwordNew: value\n      });\n    }\n\n    if (name === 'passwordNewRepeat') {\n      this.setState({\n        passwordNewRepeat: value\n      });\n    }\n  }\n\n  render() {\n    const {\n      firstName,\n      firstNameInput,\n      firstNameSymbol,\n      lastName,\n      lastNameInput,\n      lastNameSymbol,\n      email,\n      emailInput,\n      emailSymbol,\n      phoneNumber,\n      address,\n      passwordNew,\n      passwordNewInput,\n      passwordNewSymbol,\n      passwordNewRepeat,\n      passwordRepeatInput,\n      passwordRepeatSymbol,\n      isLoading,\n      ErrorMessage\n    } = this.state;\n    const {\n      history\n    } = this.props;\n\n    async function handleButtonClick() {\n      const userNotFound = document.getElementById('notRealUser');\n      const result = '';\n      /* const result =\n       await postChangePasswordRequest(clientEmail, passwordNew, passwordNewRepeat); */\n\n      if (result === true) {\n        history.push('/main-page');\n      }\n\n      if (result === 'incorrectUserOrPassword') {\n        userNotFound.setAttribute('class', 'userNotFoundBlock');\n      }\n    }\n\n    if (!isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"-isLoading\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (ErrorMessage) {\n      return /*#__PURE__*/_jsxDEV(PopUp, {\n        active: popupSmthWentWrongActive,\n        setActive: this.setpopupSmthWentWrongActive,\n        children: /*#__PURE__*/_jsxDEV(PopUpSomethingWentWrong, {\n          text: \"\\u041F\\u043E\\u043F\\u0440\\u043E\\u0431\\u0443\\u0439\\u0442\\u0435 \\u0435\\u0449\\u0435 \\u0440\\u0430\\u0437\",\n          setpopupSmthWentWrongActive: this.setpopupSmthWentWrongActive\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"personalInformation-wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"personalInformation\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"firstName\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"firstNameString -required\",\n            children: \"\\u0418\\u043C\\u044F:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputWitchCkeckingNotNull, {\n            initialValue: firstName,\n            type: \"text\",\n            name: \"firstName\",\n            classInput: firstNameInput,\n            classSymbol: firstNameSymbol,\n            updateData: this.updateData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lastName\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"lastNameString -required\",\n            children: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputWitchCkeckingNotNull, {\n            initialValue: lastName,\n            type: \"text\",\n            name: \"lastName\",\n            classInput: lastNameInput,\n            classSymbol: lastNameSymbol,\n            updateData: this.updateData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"emailString -required\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputWitchCkeckingNotNull, {\n            initialValue: email,\n            type: \"email\",\n            name: \"email\",\n            classInput: emailInput,\n            classSymbol: emailSymbol,\n            updateData: this.updateData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"phone\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"phoneString\",\n            children: \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"phoneInput\",\n            name: \"PHONE\",\n            type: \"tel\",\n            minLength: \"13\",\n            maxLength: \"13\",\n            placeholder: \"+375 (__) ___-__-__\",\n            value: phoneNumber,\n            onFocus: () => this.setState({\n              phoneNumber: '+375'\n            }),\n            onChange: event => {\n              this.setState({\n                phoneNumber: formatPhoneNumber(event.target.value)\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"address\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"addressString\",\n            children: \"\\u0410\\u0434\\u0440\\u0435\\u0441:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"addressInput\",\n            type: \"text\",\n            name: \"address\",\n            value: address,\n            onChange: e => {\n              this.setState({\n                address: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"passwordNew\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"passwordNewString -required\",\n            children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputWitchCkeckingNotNull, {\n            initialValue: passwordNew,\n            type: \"password\",\n            name: \"passwordNew\",\n            classInput: passwordNewInput,\n            classSymbol: passwordNewSymbol,\n            updateData: this.updateData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"passwordNewRepeat\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"passwordNewRepeatString -required\",\n            children: \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputWitchCkeckingNotNull, {\n            initialValue: passwordNewRepeat,\n            type: \"password\",\n            name: \"passwordNewRepeat\",\n            classInput: passwordRepeatInput,\n            classSymbol: passwordRepeatSymbol,\n            updateData: this.updateData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), firstName && lastName && email && passwordNew && passwordNewRepeat && passwordNew === passwordNewRepeat ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"changePasswordButton\",\n          onClick: () => handleButtonClick(),\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 5\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"changePasswordButton\",\n          onClick: () => {\n            if (!firstName) {\n              setErrorNotNull(firstNameInput, firstNameSymbol);\n            }\n\n            if (!lastName) {\n              setErrorNotNull(lastNameInput, lastNameSymbol);\n            }\n\n            if (!email) {\n              setErrorNotNull(emailInput, emailSymbol);\n            }\n\n            if (!passwordNew) {\n              setErrorNotNull(passwordNewInput, passwordNewSymbol);\n            }\n\n            if (passwordNew !== passwordNewRepeat) {\n              setErrorNotNull(passwordRepeatInput, passwordRepeatSymbol);\n            }\n          },\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst ConnectedPersonaIformation = connect(state => ({\n  pages: state\n}))(PersonaIformation);\nexport default ConnectedPersonaIformation;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/personalAccount/components/PersonaIformationComponent.jsx"],"names":["React","withRouter","connect","setErrorNotNull","InputWitchCkeckingNotNull","formatPhoneNumber","PopUp","PopUpSomethingWentWrong","PersonaIformation","Component","constructor","props","state","firstName","firstNameInput","firstNameSymbol","lastName","lastNameInput","lastNameSymbol","email","emailInput","emailSymbol","phoneNumber","address","passwordNew","passwordNewInput","passwordNewSymbol","passwordNewRepeat","passwordRepeatInput","passwordRepeatSymbol","isLoading","ErrorMessage","updateData","bind","componentDidMount","console","log","pages","loginPersonalAccountReducer","clientEmail","value","name","setState","render","history","handleButtonClick","userNotFound","document","getElementById","result","push","setAttribute","popupSmthWentWrongActive","setpopupSmthWentWrongActive","event","target","e","ConnectedPersonaIformation"],"mappings":"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","sourcesContent":["/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport setErrorNotNull from '../../../common/untils/setErrorNotNull';\nimport InputWitchCkeckingNotNull from '../../../common/input/components/InputWitchCkeckingNotNullComponent';\nimport formatPhoneNumber from '../../../common/untils/formatPhoneNumber';\nimport PopUp from '../../../common/popup/components/PopUpComponent';\nimport PopUpSomethingWentWrong from '../../../common/popup/components/PopUpSomethingWentWrongComponent';\n/* import postChangePasswordRequest from '../api/post/postChangePasswordRequest';\n */\nclass PersonaIformation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: '',\n      firstNameInput: 'firstNameInput',\n      firstNameSymbol: 'firstNameSymbol',\n      lastName: '',\n      lastNameInput: 'lastNameInput',\n      lastNameSymbol: 'lastNameSymbol',\n      email: '',\n      emailInput: 'emailInput',\n      emailSymbol: 'emailSymbol',\n      phoneNumber: '+375(__)___-__-__',\n      address: '',\n      passwordNew: '',\n      passwordNewInput: 'passwordNewInput',\n      passwordNewSymbol: 'errorSymbolPasswordNew',\n      passwordNewRepeat: '',\n      passwordRepeatInput: 'passwordNewRepeatInput',\n      passwordRepeatSymbol: 'errorSymbolPasswordNewRepeat',\n      isLoading: false,\n      ErrorMessage: '',\n    };\n    this.updateData = this.updateData.bind(this);\n  }\n\n  componentDidMount() {\n    /*     this.interval = setTimeout(async () => {\n      await getUsers(this.props.pages.loginPersonalAccountReducer.clientEmail, this.setError);\n    }, 10); */\n    console.log(this.props.pages.loginPersonalAccountReducer.clientEmail);\n  }\n\n  updateData(value, name) {\n    if (name === 'firstName') { this.setState({ firstName: value }); }\n    if (name === 'lastName') { this.setState({ lastName: value }); }\n    if (name === 'email') { this.setState({ email: value }); }\n    if (name === 'passwordNew') { this.setState({ passwordNew: value }); }\n    if (name === 'passwordNewRepeat') { this.setState({ passwordNewRepeat: value }); }\n  }\n\n  render() {\n    const {\n      firstName, firstNameInput, firstNameSymbol,\n      lastName, lastNameInput, lastNameSymbol,\n      email, emailInput, emailSymbol,\n      phoneNumber, address,\n      passwordNew, passwordNewInput, passwordNewSymbol,\n      passwordNewRepeat, passwordRepeatInput, passwordRepeatSymbol,\n      isLoading, ErrorMessage,\n    } = this.state;\n    const { history } = this.props;\n    async function handleButtonClick() {\n      const userNotFound = document.getElementById('notRealUser');\n      const result = '';\n      /* const result =\n       await postChangePasswordRequest(clientEmail, passwordNew, passwordNewRepeat); */\n      if (result === true) {\n        history.push('/main-page');\n      } if (result === 'incorrectUserOrPassword') {\n        userNotFound.setAttribute('class', 'userNotFoundBlock');\n      }\n    }\n    if (!isLoading) {\n      return <div className=\"-isLoading\"> </div>;\n    }\n    if (ErrorMessage) {\n      return (\n        <PopUp\n          active={popupSmthWentWrongActive}\n          setActive={this.setpopupSmthWentWrongActive}\n        >\n          <PopUpSomethingWentWrong\n            text=\"Попробуйте еще раз\"\n            setpopupSmthWentWrongActive={this.setpopupSmthWentWrongActive}\n          />\n        </PopUp>\n      );\n    }\n    return (\n      <div className=\"personalInformation-wrap\">\n        <form className=\"personalInformation\">\n          <div className=\"firstName\">\n            <p className=\"firstNameString -required\">Имя:</p>\n            <InputWitchCkeckingNotNull\n              initialValue={firstName}\n              type=\"text\"\n              name=\"firstName\"\n              classInput={firstNameInput}\n              classSymbol={firstNameSymbol}\n              updateData={this.updateData}\n            />\n          </div>\n          <div className=\"lastName\">\n            <p className=\"lastNameString -required\">Фамилия:</p>\n            <InputWitchCkeckingNotNull\n              initialValue={lastName}\n              type=\"text\"\n              name=\"lastName\"\n              classInput={lastNameInput}\n              classSymbol={lastNameSymbol}\n              updateData={this.updateData}\n            />\n          </div>\n          <div className=\"email\">\n            <p className=\"emailString -required\">Email:</p>\n            <InputWitchCkeckingNotNull\n              initialValue={email}\n              type=\"email\"\n              name=\"email\"\n              classInput={emailInput}\n              classSymbol={emailSymbol}\n              updateData={this.updateData}\n            />\n          </div>\n          <div className=\"phone\">\n            <p className=\"phoneString\">Телефон:</p>\n            <input\n              className=\"phoneInput\"\n              name=\"PHONE\"\n              type=\"tel\"\n              minLength=\"13\"\n              maxLength=\"13\"\n              placeholder=\"+375 (__) ___-__-__\"\n              value={phoneNumber}\n              onFocus={() => this.setState({ phoneNumber: '+375' })}\n              onChange={(event) => {\n                this.setState({\n                  phoneNumber: formatPhoneNumber(event.target.value),\n                });\n              }}\n            />\n          </div>\n          <div className=\"address\">\n            <p className=\"addressString\">Адрес:</p>\n            <input\n              className=\"addressInput\"\n              type=\"text\"\n              name=\"address\"\n              value={address}\n              onChange={(e) => {\n                this.setState({\n                  address: e.target.value,\n                });\n              }}\n            />\n          </div>\n          <div className=\"passwordNew\">\n            <p className=\"passwordNewString -required\">Пароль:</p>\n            <InputWitchCkeckingNotNull\n              initialValue={passwordNew}\n              type=\"password\"\n              name=\"passwordNew\"\n              classInput={passwordNewInput}\n              classSymbol={passwordNewSymbol}\n              updateData={this.updateData}\n            />\n          </div>\n          <div className=\"passwordNewRepeat\">\n            <p className=\"passwordNewRepeatString -required\">Повторите пароль:</p>\n            <InputWitchCkeckingNotNull\n              initialValue={passwordNewRepeat}\n              type=\"password\"\n              name=\"passwordNewRepeat\"\n              classInput={passwordRepeatInput}\n              classSymbol={passwordRepeatSymbol}\n              updateData={this.updateData}\n            />\n          </div>\n          {(firstName && lastName && email && passwordNew && passwordNewRepeat)\n  && (passwordNew === passwordNewRepeat) ? (\n    <button\n      type=\"button\"\n      className=\"changePasswordButton\"\n      onClick={() => handleButtonClick()}\n    >\n      Сохранить\n    </button>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"changePasswordButton\"\n                onClick={() => {\n                  if (!firstName) {\n                    setErrorNotNull(firstNameInput, firstNameSymbol);\n                  } if (!lastName) {\n                    setErrorNotNull(lastNameInput, lastNameSymbol);\n                  } if (!email) {\n                    setErrorNotNull(emailInput, emailSymbol);\n                  } if (!passwordNew) {\n                    setErrorNotNull(passwordNewInput, passwordNewSymbol);\n                  } if (passwordNew !== passwordNewRepeat) {\n                    setErrorNotNull(passwordRepeatInput, passwordRepeatSymbol);\n                  }\n                }}\n              >\n                Сохранить\n              </button>\n            )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst ConnectedPersonaIformation = connect(\n  (state) => ({\n    pages: state,\n  }),\n)(PersonaIformation);\n\nexport default ConnectedPersonaIformation;\n"]},"metadata":{},"sourceType":"module"}
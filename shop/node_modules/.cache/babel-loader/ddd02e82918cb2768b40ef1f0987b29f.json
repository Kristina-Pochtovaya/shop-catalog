{"ast":null,"code":"import _regeneratorRuntime from\"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import postRequest from'../../../../common/api/post/postRequest';var deleteCategory='/delete-category';function postDeleteCategory(_x,_x2){return _postDeleteCategory.apply(this,arguments);}function _postDeleteCategory(){_postDeleteCategory=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id,updateAfterDelete){var payload,response,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:payload={data:{id:id}};_context.prev=1;response=postRequest(deleteCategory,payload);result=response.data;updateAfterDelete();return _context.abrupt(\"return\",result);case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);return _context.abrupt(\"return\",null);case 11:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);}));return _postDeleteCategory.apply(this,arguments);}export default postDeleteCategory;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/editCategory/api/post/postDeleteCategory.jsx"],"names":["postRequest","deleteCategory","postDeleteCategory","id","updateAfterDelete","payload","data","response","result"],"mappings":"iZAAA,MAAOA,CAAAA,WAAP,KAAwB,yCAAxB,CAEA,GAAMC,CAAAA,cAAc,CAAG,kBAAvB,C,QAEeC,CAAAA,kB,sKAAf,iBAAkCC,EAAlC,CAAsCC,iBAAtC,8IACQC,OADR,CACkB,CACdC,IAAI,CAAE,CACJH,EAAE,CAAFA,EADI,CADQ,CADlB,iBAQUI,QARV,CAQqBP,WAAW,CAACC,cAAD,CAAiBI,OAAjB,CARhC,CASUG,MATV,CASmBD,QAAQ,CAACD,IAT5B,CAUIF,iBAAiB,GAVrB,gCAWWI,MAXX,0FAaW,IAbX,sE,qDAiBA,cAAeN,CAAAA,kBAAf","sourcesContent":["import postRequest from '../../../../common/api/post/postRequest';\n\nconst deleteCategory = '/delete-category';\n\nasync function postDeleteCategory(id, updateAfterDelete) {\n  const payload = {\n    data: {\n      id,\n    },\n  };\n\n  try {\n    const response = postRequest(deleteCategory, payload);\n    const result = response.data;\n    updateAfterDelete();\n    return result;\n  } catch (error) {\n    return null;\n  }\n}\n\nexport default postDeleteCategory;\n"]},"metadata":{},"sourceType":"module"}
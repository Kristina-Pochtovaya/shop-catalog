{"ast":null,"code":"var _jsxFileName = \"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/changePassword/components/ChangePasswordComponent.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Header from '../../main/header/components/HeaderComponent';\nimport Footer from '../../main/footer/components/FooterComponent';\nimport setErrorNotNull from '../../../common/untils/setErrorNotNull';\nimport removeErrorNotNull from '../../../common/untils/removeErrorNotNull';\nimport ErrorSymbol from '../../../common/errorSymbol/components/ErrorSymbolComponent';\nimport InputWitchCkeckingNotNull from '../../../common/input/components/InputWitchCkeckingNotNullComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ChangePassword extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      pages\n    } = this.props;\n    this.state = {\n      clientEmail: pages.loginPersonalAccountReducer.clientEmail,\n      clientEmailInput: 'emailChangePasswordInput',\n      clientEmailSymbol: 'emailChangePasswordErrorSymbol',\n      passwordNew: '',\n      passwordNewInput: 'passwordNewInput',\n      passwordNewSymbol: 'errorSymbolPasswordNew',\n      passwordNewRepeat: '',\n      passwordRepeatInput: 'passwordNewRepeatInput',\n      passwordRepeatSymbol: 'errorSymbolPasswordNewRepeat'\n    };\n    this.updateData = this.updateData.bind(this);\n  }\n\n  updateData(value, name) {\n    if (name === 'clientEmail') {\n      this.setState({\n        clientEmail: value\n      });\n    }\n\n    if (name === 'passwordNew') {\n      this.setState({\n        passwordNew: value\n      });\n    }\n\n    if (name === 'passwordNewRepeat') {\n      this.setState({\n        passwordNewRepeat: value\n      });\n    }\n  }\n\n  render() {\n    const {\n      clientEmail,\n      clientEmailInput,\n      clientEmailSymbol,\n      passwordNew,\n      passwordNewInput,\n      passwordNewSymbol,\n      passwordNewRepeat,\n      passwordRepeatInput,\n      passwordRepeatSymbol\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        linkItem: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"buttonBack\",\n          children: \"\\u0413\\u043B\\u0430\\u0432\\u043D\\u0430\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 27\n        }, this),\n        link: \"/main-page\",\n        disabled: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changePassword-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" \\u0421\\u043C\\u0435\\u043D\\u0430 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044F \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"changePassword\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"emailString -required\",\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputWitchCkeckingNotNull, {\n              initialValue: clientEmail,\n              type: \"email\",\n              name: \"clientEmail\",\n              classInput: clientEmailInput,\n              classSymbol: clientEmailSymbol,\n              updateData: this.updateData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"passwordNew\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"passwordNewString -required\",\n              children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputWitchCkeckingNotNull, {\n              initialValue: clientEmail,\n              type: \"password\",\n              name: \"clientEmail\",\n              classInput: passwordNewInput,\n              classSymbol: passwordNewSymbol,\n              updateData: this.updateData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: passwordNewInput,\n              type: \"password\",\n              name: \"PASSWORD\",\n              value: passwordNew,\n              onChange: event => {\n                this.setState({\n                  passwordNew: event.target.value\n                });\n                removeErrorNotNull(passwordNewInput, passwordNewSymbol);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorSymbol, {\n              Class: `${passwordNewSymbol} -disabled`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"passwordNewRepeat\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"passwordNewRepeatString -required\",\n              children: \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: passwordRepeatInput,\n              type: \"password\",\n              name: \"PASSWORD\",\n              value: passwordNewRepeat,\n              onChange: event => {\n                this.setState({\n                  passwordNewRepeat: event.target.value\n                });\n                removeErrorNotNull(passwordRepeatInput, passwordRepeatSymbol);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorSymbol, {\n              Class: `${passwordRepeatSymbol} -disabled`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), clientEmail && passwordNew && passwordNewRepeat && passwordNew === passwordNewRepeat ? /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/main-page\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"changePasswordButton\",\n              children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"changePasswordButton\",\n            onClick: () => {\n              if (!clientEmail) {\n                setErrorNotNull(clientEmailInput, clientEmailSymbol);\n              }\n\n              if (!passwordNew) {\n                setErrorNotNull(passwordNewInput, passwordNewSymbol);\n              }\n\n              if (passwordNew !== passwordNewRepeat) {\n                setErrorNotNull(passwordRepeatInput, passwordRepeatSymbol);\n              }\n            },\n            children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst ConnectedChangePassword = connect(state => ({\n  pages: state\n}))(ChangePassword);\nexport default ConnectedChangePassword;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/changePassword/components/ChangePasswordComponent.jsx"],"names":["React","Link","connect","Header","Footer","setErrorNotNull","removeErrorNotNull","ErrorSymbol","InputWitchCkeckingNotNull","ChangePassword","Component","constructor","props","pages","state","clientEmail","loginPersonalAccountReducer","clientEmailInput","clientEmailSymbol","passwordNew","passwordNewInput","passwordNewSymbol","passwordNewRepeat","passwordRepeatInput","passwordRepeatSymbol","updateData","bind","value","name","setState","render","event","target","ConnectedChangePassword"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,8CAAnB;AACA,OAAOC,MAAP,MAAmB,8CAAnB;AACA,OAAOC,eAAP,MAA4B,wCAA5B;AACA,OAAOC,kBAAP,MAA+B,2CAA/B;AACA,OAAOC,WAAP,MAAwB,6DAAxB;AACA,OAAOC,yBAAP,MAAsC,qEAAtC;;;;AAEA,MAAMC,cAAN,SAA6BT,KAAK,CAACU,SAAnC,CAA6C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,SAAKE,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAEF,KAAK,CAACG,2BAAN,CAAkCD,WADpC;AAEXE,MAAAA,gBAAgB,EAAE,0BAFP;AAGXC,MAAAA,iBAAiB,EAAE,gCAHR;AAIXC,MAAAA,WAAW,EAAE,EAJF;AAKXC,MAAAA,gBAAgB,EAAE,kBALP;AAMXC,MAAAA,iBAAiB,EAAE,wBANR;AAOXC,MAAAA,iBAAiB,EAAE,EAPR;AAQXC,MAAAA,mBAAmB,EAAE,wBARV;AASXC,MAAAA,oBAAoB,EAAE;AATX,KAAb;AAWA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAEDD,EAAAA,UAAU,CAACE,KAAD,EAAQC,IAAR,EAAc;AACtB,QAAIA,IAAI,KAAK,aAAb,EAA4B;AAAE,WAAKC,QAAL,CAAc;AAAEd,QAAAA,WAAW,EAAEY;AAAf,OAAd;AAAwC;;AACtE,QAAIC,IAAI,KAAK,aAAb,EAA4B;AAAE,WAAKC,QAAL,CAAc;AAAEV,QAAAA,WAAW,EAAEQ;AAAf,OAAd;AAAwC;;AACtE,QAAIC,IAAI,KAAK,mBAAb,EAAkC;AAAE,WAAKC,QAAL,CAAc;AAAEP,QAAAA,iBAAiB,EAAEK;AAArB,OAAd;AAA8C;AACnF;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AACJf,MAAAA,WADI;AACSE,MAAAA,gBADT;AAC2BC,MAAAA,iBAD3B;AAEJC,MAAAA,WAFI;AAESC,MAAAA,gBAFT;AAE2BC,MAAAA,iBAF3B;AAGJC,MAAAA,iBAHI;AAGeC,MAAAA,mBAHf;AAGoCC,MAAAA;AAHpC,QAIF,KAAKV,KAJT;AAKA,wBACE;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,QAAQ,eAAE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAlB;AAAiF,QAAA,IAAI,EAAC,YAAtF;AAAmG,QAAA,QAAQ,EAAE;AAA7G;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,SAAS,EAAC,gBAAhB;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,oCACE;AAAG,cAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,yBAAD;AACE,cAAA,YAAY,EAAEC,WADhB;AAEE,cAAA,IAAI,EAAC,OAFP;AAGE,cAAA,IAAI,EAAC,aAHP;AAIE,cAAA,UAAU,EAAEE,gBAJd;AAKE,cAAA,WAAW,EAAEC,iBALf;AAME,cAAA,UAAU,EAAE,KAAKO;AANnB;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAYE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACE;AAAG,cAAA,SAAS,EAAC,6BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,yBAAD;AACE,cAAA,YAAY,EAAEV,WADhB;AAEE,cAAA,IAAI,EAAC,UAFP;AAGE,cAAA,IAAI,EAAC,aAHP;AAIE,cAAA,UAAU,EAAEK,gBAJd;AAKE,cAAA,WAAW,EAAEC,iBALf;AAME,cAAA,UAAU,EAAE,KAAKI;AANnB;AAAA;AAAA;AAAA;AAAA,oBAFF,eAUE;AACE,cAAA,SAAS,EAAEL,gBADb;AAEE,cAAA,IAAI,EAAC,UAFP;AAGE,cAAA,IAAI,EAAC,UAHP;AAIE,cAAA,KAAK,EAAED,WAJT;AAKE,cAAA,QAAQ,EAAIY,KAAD,IAAW;AACpB,qBAAKF,QAAL,CAAc;AAAEV,kBAAAA,WAAW,EAAEY,KAAK,CAACC,MAAN,CAAaL;AAA5B,iBAAd;AACArB,gBAAAA,kBAAkB,CAACc,gBAAD,EAAmBC,iBAAnB,CAAlB;AACD;AARH;AAAA;AAAA;AAAA;AAAA,oBAVF,eAoBE,QAAC,WAAD;AAAa,cAAA,KAAK,EAAG,GAAEA,iBAAkB;AAAzC;AAAA;AAAA;AAAA;AAAA,oBApBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF,eAkCE;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA,oCACE;AAAG,cAAA,SAAS,EAAC,mCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,cAAA,SAAS,EAAEE,mBADb;AAEE,cAAA,IAAI,EAAC,UAFP;AAGE,cAAA,IAAI,EAAC,UAHP;AAIE,cAAA,KAAK,EAAED,iBAJT;AAKE,cAAA,QAAQ,EAAIS,KAAD,IAAW;AACpB,qBAAKF,QAAL,CAAc;AAAEP,kBAAAA,iBAAiB,EAAES,KAAK,CAACC,MAAN,CAAaL;AAAlC,iBAAd;AACArB,gBAAAA,kBAAkB,CAACiB,mBAAD,EAAsBC,oBAAtB,CAAlB;AACD;AARH;AAAA;AAAA;AAAA;AAAA,oBAFF,eAYE,QAAC,WAAD;AAAa,cAAA,KAAK,EAAG,GAAEA,oBAAqB;AAA5C;AAAA;AAAA;AAAA;AAAA,oBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlCF,EAgDIT,WAAW,IAAII,WAAf,IAA8BG,iBAA/B,IACGH,WAAW,KAAKG,iBADnB,gBAEC,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,YAAT;AAAA,mCACE;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,SAAS,EAAC,sBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFD,gBAWG;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,SAAS,EAAC,sBAFZ;AAGE,YAAA,OAAO,EAAE,MAAM;AACb,kBAAI,CAACP,WAAL,EAAkB;AAChBV,gBAAAA,eAAe,CAACY,gBAAD,EAAmBC,iBAAnB,CAAf;AACD;;AAAC,kBAAI,CAACC,WAAL,EAAkB;AAClBd,gBAAAA,eAAe,CAACe,gBAAD,EAAmBC,iBAAnB,CAAf;AACD;;AAAC,kBAAIF,WAAW,KAAKG,iBAApB,EAAuC;AACvCjB,gBAAAA,eAAe,CAACkB,mBAAD,EAAsBC,oBAAtB,CAAf;AACD;AACF,aAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3DN;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAiFE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAjFF;AAAA,oBADF;AAqFD;;AAnH0C;;AAsH7C,MAAMS,uBAAuB,GAAG/B,OAAO,CACpCY,KAAD,KAAY;AACVD,EAAAA,KAAK,EAAEC;AADG,CAAZ,CADqC,CAAP,CAI9BL,cAJ8B,CAAhC;AAMA,eAAewB,uBAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Header from '../../main/header/components/HeaderComponent';\nimport Footer from '../../main/footer/components/FooterComponent';\nimport setErrorNotNull from '../../../common/untils/setErrorNotNull';\nimport removeErrorNotNull from '../../../common/untils/removeErrorNotNull';\nimport ErrorSymbol from '../../../common/errorSymbol/components/ErrorSymbolComponent';\nimport InputWitchCkeckingNotNull from '../../../common/input/components/InputWitchCkeckingNotNullComponent';\n\nclass ChangePassword extends React.Component {\n  constructor(props) {\n    super(props);\n    const { pages } = this.props;\n    this.state = {\n      clientEmail: pages.loginPersonalAccountReducer.clientEmail,\n      clientEmailInput: 'emailChangePasswordInput',\n      clientEmailSymbol: 'emailChangePasswordErrorSymbol',\n      passwordNew: '',\n      passwordNewInput: 'passwordNewInput',\n      passwordNewSymbol: 'errorSymbolPasswordNew',\n      passwordNewRepeat: '',\n      passwordRepeatInput: 'passwordNewRepeatInput',\n      passwordRepeatSymbol: 'errorSymbolPasswordNewRepeat',\n    };\n    this.updateData = this.updateData.bind(this);\n  }\n\n  updateData(value, name) {\n    if (name === 'clientEmail') { this.setState({ clientEmail: value }); }\n    if (name === 'passwordNew') { this.setState({ passwordNew: value }); }\n    if (name === 'passwordNewRepeat') { this.setState({ passwordNewRepeat: value }); }\n  }\n\n  render() {\n    const {\n      clientEmail, clientEmailInput, clientEmailSymbol,\n      passwordNew, passwordNewInput, passwordNewSymbol,\n      passwordNewRepeat, passwordRepeatInput, passwordRepeatSymbol,\n    } = this.state;\n    return (\n      <>\n        <Header linkItem={<button type=\"button\" className=\"buttonBack\">Главная</button>} link=\"/main-page\" disabled={false} />\n        <div className=\"changePassword-wrap\">\n          <h2> Смена пароля </h2>\n          <form className=\"changePassword\">\n            <div className=\"email\">\n              <p className=\"emailString -required\">Email:</p>\n              <InputWitchCkeckingNotNull\n                initialValue={clientEmail}\n                type=\"email\"\n                name=\"clientEmail\"\n                classInput={clientEmailInput}\n                classSymbol={clientEmailSymbol}\n                updateData={this.updateData}\n              />\n            </div>\n            <div className=\"passwordNew\">\n              <p className=\"passwordNewString -required\">Пароль:</p>\n              <InputWitchCkeckingNotNull\n                initialValue={clientEmail}\n                type=\"password\"\n                name=\"clientEmail\"\n                classInput={passwordNewInput}\n                classSymbol={passwordNewSymbol}\n                updateData={this.updateData}\n              />\n              <input\n                className={passwordNewInput}\n                type=\"password\"\n                name=\"PASSWORD\"\n                value={passwordNew}\n                onChange={((event) => {\n                  this.setState({ passwordNew: event.target.value });\n                  removeErrorNotNull(passwordNewInput, passwordNewSymbol);\n                })}\n              />\n              <ErrorSymbol Class={`${passwordNewSymbol} -disabled`} />\n            </div>\n            <div className=\"passwordNewRepeat\">\n              <p className=\"passwordNewRepeatString -required\">Повторите пароль:</p>\n              <input\n                className={passwordRepeatInput}\n                type=\"password\"\n                name=\"PASSWORD\"\n                value={passwordNewRepeat}\n                onChange={((event) => {\n                  this.setState({ passwordNewRepeat: event.target.value });\n                  removeErrorNotNull(passwordRepeatInput, passwordRepeatSymbol);\n                })}\n              />\n              <ErrorSymbol Class={`${passwordRepeatSymbol} -disabled`} />\n            </div>\n            {(clientEmail && passwordNew && passwordNewRepeat)\n            && (passwordNew === passwordNewRepeat) ? (\n              <Link to=\"/main-page\">\n                <button\n                  type=\"button\"\n                  className=\"changePasswordButton\"\n                >\n                  Изменить пароль\n                </button>\n              </Link>\n              ) : (\n                <button\n                  type=\"button\"\n                  className=\"changePasswordButton\"\n                  onClick={() => {\n                    if (!clientEmail) {\n                      setErrorNotNull(clientEmailInput, clientEmailSymbol);\n                    } if (!passwordNew) {\n                      setErrorNotNull(passwordNewInput, passwordNewSymbol);\n                    } if (passwordNew !== passwordNewRepeat) {\n                      setErrorNotNull(passwordRepeatInput, passwordRepeatSymbol);\n                    }\n                  }}\n                >\n                  Изменить пароль\n                </button>\n              )}\n          </form>\n        </div>\n        <Footer />\n      </>\n    );\n  }\n}\n\nconst ConnectedChangePassword = connect(\n  (state) => ({\n    pages: state,\n  }),\n)(ChangePassword);\n\nexport default ConnectedChangePassword;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/editProducts/components/EditProductsPageColumnsComponent.jsx\";\n\n/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport getProducts from '../api/get/getProducts';\nimport getCategories from '../../editCategory/api/get/getCategories';\nimport setImg from '../../../common/untils/setImg';\nimport InputEditProductsCategory from './InputEditProductsCategoryComponent';\nimport InputEditProductsInStock from './InputEditProductsInStockComponent';\nimport InputEditProductsName from './InputEditProductsNameComponent';\nimport InputEditProductsPrice from './InputEditCategoryPriceComponent';\nimport PopUp from '../../../common/popup/components/PopUpComponent';\nimport PopUpSomethingWentWrong from '../../../common/popup/components/PopUpSomethingWentWrongComponent';\nimport EditProductsImage from './EditProductsImageComponent';\nimport postDeleteProduct from '../api/post/postDeleteProduct';\nimport postProducts from '../api/post/postProducts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass EditProductsPageColumns extends React.Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n\n    this.setError = errorMessage => this.setState({\n      ErrorMessageProducts: errorMessage\n    });\n\n    this.setErrorCategories = errorMessage => this.setState({\n      ErrorMessageCategories: errorMessage\n    });\n\n    this.setpopupSmthWentWrongActive = value => this.setState({\n      popupSmthWentWrongActive: value\n    });\n\n    this.setEditActive = value => this.setState({\n      isEditActive: value\n    });\n\n    this.updateImage = value => this.setState({\n      productImage: value\n    });\n\n    this.updateProductCategory = (value, array) => this.setState({\n      productCategory: value,\n      categoriesArray: array\n    });\n\n    this.updateProductName = value => this.setState({\n      productName: value\n    });\n\n    this.updateProductPrice = value => this.setState({\n      productPrice: value\n    });\n\n    this.updateProductInStock = value => this.setState({\n      productInStock: value\n    });\n\n    this.updateProducts = (value, valueIsLoading) => this.setState({\n      productsArray: value,\n      isLoadingProducts: valueIsLoading\n    });\n\n    this.updateDataCategories = (value, valueIsLoading) => this.setState({\n      categoriesArray: value.categories,\n      isLoadingCategories: valueIsLoading\n    });\n\n    this.updateAfterDelete = () => {\n      const {\n        isUpdated\n      } = this.state;\n      this.setState({\n        isUpdated: !isUpdated\n      });\n    };\n\n    this.state = {\n      productsArray: [],\n      isEditActive: false,\n      isEditActiveId: '',\n      isUpdated: false,\n      isLoadingProducts: true,\n      isLoadingCategories: true,\n      ErrorMessageProducts: '',\n      ErrorMessageCategories: '',\n      popupSmthWentWrongActive: true,\n      IsSaveButtonVisible: false,\n      IsEditButtonVisible: true,\n      productImage: '',\n      productCategory: '',\n      productName: '',\n      productPrice: '',\n      productInStock: 1,\n      categoriesArray: []\n    };\n  }\n\n  async componentDidMount() {\n    this._isMounted = true;\n    console.log(this._isMounted);\n\n    if (this._isMounted) {\n      const products = await getProducts();\n    }\n    /*     const products = await getProducts(); */\n\n    /*     const categories = await getCategories(); */\n\n    /*     console.log(await getCategories()); */\n\n    /*     if (this._isMounted && !products && !categories) {\n      this.setState({\n        productsArray: products,\n        isLoadingProducts: false,\n        categoriesArray: categories,\n        isLoadingCategories: false,\n      });\n    } */\n\n  }\n  /*   async componentDidUpdate(prevProps, prevState) {\n    const { isUpdated } = this.state;\n    if (prevState.isUpdated !== isUpdated) {\n      await getProducts(this.updateProducts, this.setError);\n    }\n  }\n  */\n\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    console.log(this._isMounted);\n  }\n\n  async handleButtonOnClick(e) {\n    const {\n      isEditActiveId,\n      productImage,\n      productCategory,\n      categoriesArray,\n      productName,\n      isUpdated,\n      productPrice,\n      productInStock\n    } = this.state;\n    const {\n      isProductsUpdated,\n      setIsProductsUpdated\n    } = this.props;\n    await postProducts(isEditActiveId, productImage, productCategory, categoriesArray, productName, productPrice, productInStock);\n    this.setState({\n      isUpdated: !isUpdated\n    });\n    isProductsUpdated ? setIsProductsUpdated(false) : setIsProductsUpdated(true);\n  }\n\n  render() {\n    const {\n      isEditActive,\n      isEditActiveId,\n      ErrorMessageProducts,\n      popupSmthWentWrongActive,\n      productsArray,\n      isLoadingProducts,\n      IsSaveButtonVisible,\n      IsEditButtonVisible,\n      isLoadingCategories,\n      ErrorMessageCategories,\n      isUpdated\n    } = this.state;\n    const {\n      isProductsUpdated,\n      setIsProductsUpdated\n    } = this.props;\n\n    if (!isLoadingProducts || !isLoadingCategories) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"-isLoading\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (ErrorMessageProducts || ErrorMessageCategories) {\n      return /*#__PURE__*/_jsxDEV(PopUp, {\n        active: popupSmthWentWrongActive,\n        setActive: this.setpopupSmthWentWrongActive,\n        children: /*#__PURE__*/_jsxDEV(PopUpSomethingWentWrong, {\n          text: \"\\u041F\\u043E\\u043F\\u0440\\u043E\\u0431\\u0443\\u0439\\u0442\\u0435 \\u0435\\u0449\\u0435 \\u0440\\u0430\\u0437\",\n          setpopupSmthWentWrongActive: this.setpopupSmthWentWrongActive\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: productsArray.products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"columns\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnImage\",\n            children: (isEditActive && product.id) !== isEditActiveId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: product.image ? /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"imageProducts\",\n                src: product.image,\n                alt: product.imgAlt,\n                title: product.imgTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 27\n              }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                src: setImg(product.description),\n                alt: product.imgAlt,\n                title: product.imgTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 27\n              }, this)\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(EditProductsImage, {\n              id: product.id,\n              description: product.description,\n              updateImage: this.updateImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnCategory\",\n            children: isEditActive && product.id === isEditActiveId ? /*#__PURE__*/_jsxDEV(InputEditProductsCategory, {\n              category: product.category,\n              categoryId: product.categoryId,\n              updateProductCategory: this.updateProductCategory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: product.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnName\",\n            children: isEditActive && product.id === isEditActiveId ? /*#__PURE__*/_jsxDEV(InputEditProductsName, {\n              description: product.description,\n              updateProductName: this.updateProductName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: product.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnPrice\",\n            children: isEditActive && product.id === isEditActiveId ? /*#__PURE__*/_jsxDEV(InputEditProductsPrice, {\n              price: product.price,\n              updateProductPrice: this.updateProductPrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: product.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnInStock\",\n            children: isEditActive && product.id === isEditActiveId ? /*#__PURE__*/_jsxDEV(InputEditProductsInStock, {\n              inStock: product.inStock,\n              updateProductInStock: this.updateProductInStock\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"inStockString\",\n              children: Number(product.inStock) === 1 ? 'да' : 'нет'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnEdit\",\n            children: IsEditButtonVisible && isEditActive && product.id === isEditActiveId ? /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"editProductsButton\",\n              onClick: () => {\n                this.setState({\n                  isEditActive: false,\n                  isEditActiveId: product.id,\n                  IsSaveButtonVisible: true,\n                  IsEditButtonVisible: false\n                });\n                this.handleButtonOnClick();\n              },\n              children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"editProductsButton\",\n              onClick: () => {\n                this.setState({\n                  isEditActive: true,\n                  isEditActiveId: product.id,\n                  productImage: product.image,\n                  productCategory: product.category,\n                  productName: product.description,\n                  productPrice: product.price,\n                  productInStock: product.inStock,\n                  IsEditButtonVisible: true,\n                  IsSaveButtonVisible: false\n                });\n              },\n              children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnDelete\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"deleteProductsButton\",\n              onClick: () => {\n                postDeleteProduct(product.id, setIsProductsUpdated, isProductsUpdated, this.updateAfterDelete);\n              },\n              children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this))\n    }, void 0, false);\n  }\n\n}\n\nexport default EditProductsPageColumns;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/editProducts/components/EditProductsPageColumnsComponent.jsx"],"names":["React","getProducts","getCategories","setImg","InputEditProductsCategory","InputEditProductsInStock","InputEditProductsName","InputEditProductsPrice","PopUp","PopUpSomethingWentWrong","EditProductsImage","postDeleteProduct","postProducts","EditProductsPageColumns","Component","constructor","props","_isMounted","setError","errorMessage","setState","ErrorMessageProducts","setErrorCategories","ErrorMessageCategories","setpopupSmthWentWrongActive","value","popupSmthWentWrongActive","setEditActive","isEditActive","updateImage","productImage","updateProductCategory","array","productCategory","categoriesArray","updateProductName","productName","updateProductPrice","productPrice","updateProductInStock","productInStock","updateProducts","valueIsLoading","productsArray","isLoadingProducts","updateDataCategories","categories","isLoadingCategories","updateAfterDelete","isUpdated","state","isEditActiveId","IsSaveButtonVisible","IsEditButtonVisible","componentDidMount","console","log","products","componentWillUnmount","handleButtonOnClick","e","isProductsUpdated","setIsProductsUpdated","render","map","product","id","image","imgAlt","imgTitle","description","category","categoryId","price","inStock","Number"],"mappings":"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","sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport getProducts from '../api/get/getProducts';\nimport getCategories from '../../editCategory/api/get/getCategories';\nimport setImg from '../../../common/untils/setImg';\nimport InputEditProductsCategory from './InputEditProductsCategoryComponent';\nimport InputEditProductsInStock from './InputEditProductsInStockComponent';\nimport InputEditProductsName from './InputEditProductsNameComponent';\nimport InputEditProductsPrice from './InputEditCategoryPriceComponent';\nimport PopUp from '../../../common/popup/components/PopUpComponent';\nimport PopUpSomethingWentWrong from '../../../common/popup/components/PopUpSomethingWentWrongComponent';\nimport EditProductsImage from './EditProductsImageComponent';\nimport postDeleteProduct from '../api/post/postDeleteProduct';\nimport postProducts from '../api/post/postProducts';\n\nclass EditProductsPageColumns extends React.Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      productsArray: [],\n      isEditActive: false,\n      isEditActiveId: '',\n      isUpdated: false,\n      isLoadingProducts: true,\n      isLoadingCategories: true,\n      ErrorMessageProducts: '',\n      ErrorMessageCategories: '',\n      popupSmthWentWrongActive: true,\n      IsSaveButtonVisible: false,\n      IsEditButtonVisible: true,\n      productImage: '',\n      productCategory: '',\n      productName: '',\n      productPrice: '',\n      productInStock: 1,\n      categoriesArray: [],\n    };\n  }\n\n  async componentDidMount() {\n    this._isMounted = true;\n    console.log(this._isMounted);\n    if (this._isMounted) {\n      const products = await getProducts();\n    }\n    /*     const products = await getProducts(); */\n    /*     const categories = await getCategories(); */\n    /*     console.log(await getCategories()); */\n    /*     if (this._isMounted && !products && !categories) {\n      this.setState({\n        productsArray: products,\n        isLoadingProducts: false,\n        categoriesArray: categories,\n        isLoadingCategories: false,\n      });\n    } */\n  }\n\n  /*   async componentDidUpdate(prevProps, prevState) {\n    const { isUpdated } = this.state;\n    if (prevState.isUpdated !== isUpdated) {\n      await getProducts(this.updateProducts, this.setError);\n    }\n  }\n */\n  componentWillUnmount() {\n    this._isMounted = false;\n    console.log(this._isMounted);\n  }\n\n  async handleButtonOnClick(e) {\n    const {\n      isEditActiveId, productImage, productCategory, categoriesArray, productName, isUpdated,\n      productPrice, productInStock,\n    } = this.state;\n    const { isProductsUpdated, setIsProductsUpdated } = this.props;\n    await postProducts(\n      isEditActiveId, productImage, productCategory, categoriesArray, productName, productPrice,\n      productInStock,\n    );\n    this.setState({\n      isUpdated: !isUpdated,\n    });\n    isProductsUpdated ? setIsProductsUpdated(false) : setIsProductsUpdated(true);\n  }\n\n  setError = (errorMessage) => this.setState({ ErrorMessageProducts: errorMessage });\n\n  setErrorCategories = (errorMessage) => this.setState({ ErrorMessageCategories: errorMessage });\n\n  setpopupSmthWentWrongActive = (value) => this.setState({ popupSmthWentWrongActive: value });\n\n  setEditActive = (value) => this.setState({ isEditActive: value });\n\n  updateImage = (value) => this.setState({ productImage: value });\n\n  updateProductCategory = (value, array) => this.setState({\n    productCategory: value, categoriesArray: array,\n  });\n\n  updateProductName = (value) => this.setState({ productName: value });\n\n  updateProductPrice = (value) => this.setState({ productPrice: value });\n\n  updateProductInStock = (value) => this.setState({ productInStock: value });\n\n  updateProducts = (value, valueIsLoading) => this.setState({\n    productsArray: value,\n    isLoadingProducts: valueIsLoading,\n  });\n\n  updateDataCategories = (value, valueIsLoading) => this.setState({\n    categoriesArray: value.categories,\n    isLoadingCategories: valueIsLoading,\n  });\n\n  updateAfterDelete = () => {\n    const { isUpdated } = this.state;\n    this.setState({ isUpdated: !isUpdated });\n  }\n\n  render() {\n    const {\n      isEditActive, isEditActiveId, ErrorMessageProducts, popupSmthWentWrongActive,\n      productsArray, isLoadingProducts, IsSaveButtonVisible, IsEditButtonVisible,\n      isLoadingCategories, ErrorMessageCategories, isUpdated,\n    } = this.state;\n\n    const { isProductsUpdated, setIsProductsUpdated } = this.props;\n    if (!isLoadingProducts || !isLoadingCategories) {\n      return <div className=\"-isLoading\"> </div>;\n    }\n    if (ErrorMessageProducts || ErrorMessageCategories) {\n      return (\n        <PopUp\n          active={popupSmthWentWrongActive}\n          setActive={this.setpopupSmthWentWrongActive}\n        >\n          <PopUpSomethingWentWrong\n            text=\"Попробуйте еще раз\"\n            setpopupSmthWentWrongActive={this.setpopupSmthWentWrongActive}\n          />\n        </PopUp>\n      );\n    }\n    return (\n      <>\n        {productsArray.products.map((product) => (\n          <li key={product.id}>\n            <div className=\"columns\">\n              <div className=\"columnImage\">\n                {(isEditActive && product.id) !== isEditActiveId\n                  ? (\n                    <>\n                      {product.image\n                        ? (\n                          <img\n                            className=\"imageProducts\"\n                            src={product.image}\n                            alt={product.imgAlt}\n                            title={product.imgTitle}\n                          />\n                        ) : (\n                          <img\n                            src={setImg(product.description)}\n                            alt={product.imgAlt}\n                            title={product.imgTitle}\n                          />\n                        )}\n                    </>\n                  ) : (\n                    <EditProductsImage\n                      id={product.id}\n                      description={product.description}\n                      updateImage={this.updateImage}\n                    />\n                  )}\n              </div>\n              <div className=\"columnCategory\">\n                {isEditActive && product.id === isEditActiveId\n                  ? (\n                    <InputEditProductsCategory\n                      category={product.category}\n                      categoryId={product.categoryId}\n                      updateProductCategory={this.updateProductCategory}\n                    />\n                  ) : <p>{product.category}</p>}\n              </div>\n              <div className=\"columnName\">\n                {isEditActive && product.id === isEditActiveId\n                  ? (\n                    <InputEditProductsName\n                      description={product.description}\n                      updateProductName={this.updateProductName}\n                    />\n                  ) : <p>{product.description}</p>}\n              </div>\n              <div className=\"columnPrice\">\n                {isEditActive && product.id === isEditActiveId\n                  ? (\n                    <InputEditProductsPrice\n                      price={product.price}\n                      updateProductPrice={this.updateProductPrice}\n                    />\n                  ) : <p>{product.price}</p>}\n              </div>\n              <div className=\"columnInStock\">\n                {isEditActive && product.id === isEditActiveId\n                  ? (\n                    <InputEditProductsInStock\n                      inStock={product.inStock}\n                      updateProductInStock={this.updateProductInStock}\n                    />\n                  )\n                  : <p className=\"inStockString\">{Number(product.inStock) === 1 ? 'да' : 'нет'}</p>}\n              </div>\n              <div className=\"columnEdit\">\n                {IsEditButtonVisible && isEditActive && product.id === isEditActiveId ? (\n                  <button\n                    type=\"button\"\n                    className=\"editProductsButton\"\n                    onClick={() => {\n                      this.setState({\n                        isEditActive: false,\n                        isEditActiveId: product.id,\n                        IsSaveButtonVisible: true,\n                        IsEditButtonVisible: false,\n                      });\n                      this.handleButtonOnClick();\n                    }}\n                  >\n                    Сохранить\n                  </button>\n                ) : (\n                  <button\n                    type=\"button\"\n                    className=\"editProductsButton\"\n                    onClick={() => {\n                      this.setState({\n                        isEditActive: true,\n                        isEditActiveId: product.id,\n                        productImage: product.image,\n                        productCategory: product.category,\n                        productName: product.description,\n                        productPrice: product.price,\n                        productInStock: product.inStock,\n                        IsEditButtonVisible: true,\n                        IsSaveButtonVisible: false,\n                      });\n                    }}\n                  >\n                    Изменить\n                  </button>\n                )}\n              </div>\n              <div className=\"columnDelete\">\n                <button\n                  type=\"button\"\n                  className=\"deleteProductsButton\"\n                  onClick={() => {\n                    postDeleteProduct(product.id, setIsProductsUpdated,\n                      isProductsUpdated, this.updateAfterDelete);\n                  }}\n                >\n                  Удалить\n                </button>\n              </div>\n            </div>\n          </li>\n        ))}\n      </>\n    );\n  }\n}\n\nexport default EditProductsPageColumns;\n"]},"metadata":{},"sourceType":"module"}
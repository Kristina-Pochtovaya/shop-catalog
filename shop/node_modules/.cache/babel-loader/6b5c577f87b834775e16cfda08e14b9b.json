{"ast":null,"code":"import postNewCategory from '../api/post/postNewCategory';\nimport setClassErrorById from '../../../common/untils/setClassErrorById';\nimport checkOnSymbols from '../../../common/untils/checkOnSymbols';\n\nconst processResultAddNewCategory = async (categoryName, image, titleColor, history, isProductsUpdated, setIsProductsUpdated) => {\n  let newCategoryName = '';\n  newCategoryName = checkOnSymbols(categoryName);\n  let result = '';\n\n  if (newCategoryName === 'Prohibited symbols') {\n    setClassErrorById('errorProhibitedsymbols', 'errorProhibitedsymbols');\n  } else {\n    console.log(result);\n    result = await postNewCategory(newCategoryName, image, titleColor);\n\n    if (result === newCategoryName) {\n      history.push('/edit-category');\n      setIsProductsUpdated(!isProductsUpdated);\n    }\n\n    if (result === false) {\n      setClassErrorById('errorNewImage', 'errorNewImage');\n    }\n\n    if (result === 'Not new category') {\n      setClassErrorById('errorNewName', 'errorNewName');\n    }\n  }\n};\n\nexport default processResultAddNewCategory;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/editCategory/utils/processResultAddNewCategory.jsx"],"names":["postNewCategory","setClassErrorById","checkOnSymbols","processResultAddNewCategory","categoryName","image","titleColor","history","isProductsUpdated","setIsProductsUpdated","newCategoryName","result","console","log","push"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,6BAA5B;AACA,OAAOC,iBAAP,MAA8B,0CAA9B;AACA,OAAOC,cAAP,MAA2B,uCAA3B;;AAEA,MAAMC,2BAA2B,GAAG,OAAOC,YAAP,EAAqBC,KAArB,EAA4BC,UAA5B,EAAwCC,OAAxC,EAClCC,iBADkC,EACfC,oBADe,KACU;AAC5C,MAAIC,eAAe,GAAG,EAAtB;AACAA,EAAAA,eAAe,GAAGR,cAAc,CAACE,YAAD,CAAhC;AACA,MAAIO,MAAM,GAAG,EAAb;;AACA,MAAID,eAAe,KAAK,oBAAxB,EAA8C;AAC5CT,IAAAA,iBAAiB,CAAC,wBAAD,EAA2B,wBAA3B,CAAjB;AACD,GAFD,MAEO;AACLW,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAA,IAAAA,MAAM,GAAG,MAAMX,eAAe,CAACU,eAAD,EAAkBL,KAAlB,EAAyBC,UAAzB,CAA9B;;AACA,QAAIK,MAAM,KAAKD,eAAf,EAAgC;AAC9BH,MAAAA,OAAO,CAACO,IAAR,CAAa,gBAAb;AACAL,MAAAA,oBAAoB,CAAC,CAACD,iBAAF,CAApB;AACD;;AAAC,QAAIG,MAAM,KAAK,KAAf,EAAsB;AACtBV,MAAAA,iBAAiB,CAAC,eAAD,EAAkB,eAAlB,CAAjB;AACD;;AAAC,QAAIU,MAAM,KAAK,kBAAf,EAAmC;AACnCV,MAAAA,iBAAiB,CAAC,cAAD,EAAiB,cAAjB,CAAjB;AACD;AACF;AACF,CAnBD;;AAqBA,eAAeE,2BAAf","sourcesContent":["import postNewCategory from '../api/post/postNewCategory';\nimport setClassErrorById from '../../../common/untils/setClassErrorById';\nimport checkOnSymbols from '../../../common/untils/checkOnSymbols';\n\nconst processResultAddNewCategory = async (categoryName, image, titleColor, history,\n  isProductsUpdated, setIsProductsUpdated) => {\n  let newCategoryName = '';\n  newCategoryName = checkOnSymbols(categoryName);\n  let result = '';\n  if (newCategoryName === 'Prohibited symbols') {\n    setClassErrorById('errorProhibitedsymbols', 'errorProhibitedsymbols');\n  } else {\n    console.log(result);\n    result = await postNewCategory(newCategoryName, image, titleColor);\n    if (result === newCategoryName) {\n      history.push('/edit-category');\n      setIsProductsUpdated(!isProductsUpdated);\n    } if (result === false) {\n      setClassErrorById('errorNewImage', 'errorNewImage');\n    } if (result === 'Not new category') {\n      setClassErrorById('errorNewName', 'errorNewName');\n    }\n  }\n};\n\nexport default processResultAddNewCategory;\n"]},"metadata":{},"sourceType":"module"}
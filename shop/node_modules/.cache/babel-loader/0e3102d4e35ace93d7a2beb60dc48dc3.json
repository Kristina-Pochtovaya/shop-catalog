{"ast":null,"code":"var _jsxFileName = \"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/common/loginForm/components/ForgetPasswordComponent.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { ENTER, ENTEREMAIL, LOGIN } from '../../../redux/actions/loginPersonalAccountActions';\nimport setErrorNotNull from '../../untils/setErrorNotNull';\nimport removeErrorNotNull from '../../untils/removeErrorNotNull';\nimport ErrorSymbol from '../../errorSymbol/components/ErrorSymbolComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ForgetPassword extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emailInput: 'emailInput',\n      emailSymbol: 'errorSymbol'\n    };\n  }\n\n  render() {\n    const {\n      onEnter,\n      onLogin,\n      onEnterEmail,\n      pages\n    } = this.props;\n    const {\n      emailInput,\n      emailSymbol\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loginString -required\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: emailInput,\n          type: \"email\",\n          name: \"EMAIL\",\n          value: pages.loginPersonalAccountReducer.clientEmail,\n          onChange: event => {\n            onEnterEmail(event.target.value);\n            removeErrorNotNull(emailInput, emailSymbol);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorSymbol, {\n          Class: `${emailSymbol} -disabled`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        type: \"button\",\n        className: \"\",\n        children: pages.loginPersonalAccountReducer.clientEmail ? /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/change-password\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"entranceButton\",\n            onClick: () => {\n              onEnter(true, false);\n              onLogin(false, false, false);\n            },\n            children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"entranceButton\",\n          onClick: () => {\n            if (!pages.loginPersonalAccountReducer.clientEmail) {\n              setErrorNotNull(emailInput, emailSymbol);\n            }\n          },\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"forgotPasswordButton\",\n        onClick: () => {\n          onEnter(true, false);\n          onLogin(true, true, false);\n        },\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/registration\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"registrationButton\",\n          onClick: () => onLogin(false, false, false),\n          children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst ConnectedForgetPassword = connect(state => ({\n  pages: state\n}), dispatch => ({\n  onEnter: (loginIsVisible, personAccountIsVisible) => dispatch({\n    type: ENTER.type,\n    payload: {\n      loginIsVisible,\n      personAccountIsVisible\n    }\n  }),\n  onLogin: (loginFormIsVisible, loginFormLoginPageIsVisible, loginFormForgetPasswordIsVisible) => dispatch({\n    type: LOGIN.type,\n    payload: {\n      loginFormIsVisible,\n      loginFormLoginPageIsVisible,\n      loginFormForgetPasswordIsVisible\n    }\n  }),\n  onEnterEmail: clientEmail => dispatch({\n    type: ENTEREMAIL.type,\n    payload: {\n      clientEmail\n    }\n  })\n}))(ForgetPassword);\nexport default ConnectedForgetPassword;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/common/loginForm/components/ForgetPasswordComponent.jsx"],"names":["React","Link","connect","ENTER","ENTEREMAIL","LOGIN","setErrorNotNull","removeErrorNotNull","ErrorSymbol","ForgetPassword","Component","constructor","props","state","emailInput","emailSymbol","render","onEnter","onLogin","onEnterEmail","pages","loginPersonalAccountReducer","clientEmail","event","target","value","ConnectedForgetPassword","dispatch","loginIsVisible","personAccountIsVisible","type","payload","loginFormIsVisible","loginFormLoginPageIsVisible","loginFormForgetPasswordIsVisible"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { ENTER, ENTEREMAIL, LOGIN } from '../../../redux/actions/loginPersonalAccountActions';\nimport setErrorNotNull from '../../untils/setErrorNotNull';\nimport removeErrorNotNull from '../../untils/removeErrorNotNull';\nimport ErrorSymbol from '../../errorSymbol/components/ErrorSymbolComponent';\n\nclass ForgetPassword extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emailInput: 'emailInput',\n      emailSymbol: 'errorSymbol',\n    };\n  }\n\n  render() {\n    const {\n      onEnter, onLogin, onEnterEmail, pages,\n    } = this.props;\n    const { emailInput, emailSymbol } = this.state;\n    return (\n      <form className=\"form\">\n        <div className=\"login\">\n          <p className=\"loginString -required\">Email:</p>\n          <input\n            className={emailInput}\n            type=\"email\"\n            name=\"EMAIL\"\n            value={pages.loginPersonalAccountReducer.clientEmail}\n            onChange={((event) => {\n              onEnterEmail(event.target.value);\n              removeErrorNotNull(emailInput, emailSymbol);\n            })}\n          />\n          <ErrorSymbol Class={`${emailSymbol} -disabled`} />\n        </div>\n        <div\n          type=\"button\"\n          className=\"\"\n        >\n          {pages.loginPersonalAccountReducer.clientEmail ? (\n            <Link to=\"/change-password\">\n              <button\n                type=\"button\"\n                className=\"entranceButton\"\n                onClick={() => {\n                  onEnter(true, false);\n                  onLogin(false, false, false);\n                }}\n              >\n                Отправить\n              </button>\n            </Link>\n          ) : (\n            <button\n              type=\"button\"\n              className=\"entranceButton\"\n              onClick={() => {\n                if (!pages.loginPersonalAccountReducer.clientEmail) {\n                  setErrorNotNull(emailInput, emailSymbol);\n                }\n              }}\n            >\n              Отправить\n            </button>\n          )}\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"forgotPasswordButton\"\n          onClick={() => {\n            onEnter(true, false);\n            onLogin(true, true, false);\n          }}\n        >\n          Войти\n        </button>\n        <Link to=\"/registration\">\n          <button\n            type=\"button\"\n            className=\"registrationButton\"\n            onClick={() => onLogin(false, false, false)}\n          >\n            Регистрация\n          </button>\n        </Link>\n      </form>\n    );\n  }\n}\n\nconst ConnectedForgetPassword = connect(\n  (state) => ({\n    pages: state,\n  }),\n  (dispatch) => ({\n    onEnter: (loginIsVisible, personAccountIsVisible) => dispatch({\n      type: ENTER.type,\n      payload: { loginIsVisible, personAccountIsVisible },\n    }),\n    onLogin: (\n      loginFormIsVisible, loginFormLoginPageIsVisible, loginFormForgetPasswordIsVisible,\n    ) => dispatch({\n      type: LOGIN.type,\n      payload: {\n        loginFormIsVisible, loginFormLoginPageIsVisible, loginFormForgetPasswordIsVisible,\n      },\n    }),\n    onEnterEmail: (\n      clientEmail,\n    ) => dispatch({\n      type: ENTEREMAIL.type,\n      payload: {\n        clientEmail,\n      },\n    }),\n  }),\n)(ForgetPassword);\n\nexport default ConnectedForgetPassword;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/common/components/loginForm/components/LoginComponent.jsx\";\nimport React from 'react';\nimport InputWitchCkeckingNotNull from '../../input/components/InputWitchCkeckingNotNullComponent';\nimport removeErrorNotNull from '../../../untils/removeErrorNotNull';\nimport processResultLoginForgetPassword from '../../untils/processResultLoginForgetPassword';\nimport ButtonLogin from '../../components/button/components/ButtonLoginComponent';\nimport setErrorNotNullGroupsLogin from '../utils/setErrorNotNullGroupsLogin';\nimport buttonLoginArray from '../constants/buttonLoginArray';\nimport inputLoginArray from '../constants/inputLoginArray';\nimport setInitialValue from '../utils/setInitialValue';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateId = value => this.setState({\n      id: value\n    });\n\n    this.handleButtonClick = () => {\n      const {\n        clientLogin,\n        clientPassword\n      } = this.state;\n      const {\n        onLogin,\n        onEnter,\n        history,\n        onAdd,\n        onEnterEmail\n      } = this.props;\n      clientLogin && clientPassword ? processResultLoginForgetPassword(onEnter, onLogin, history, onAdd, onEnterEmail, clientLogin, clientPassword, this.updateId) : setErrorNotNullGroupsLogin(clientLogin, clientPassword);\n    };\n\n    this.link = () => {\n      const {\n        history\n      } = this.props;\n      history.push('/registration');\n    };\n\n    this.updateData = (value, name) => {\n      if (name === 'clientLogin') {\n        this.setState({\n          clientLogin: value\n        });\n      }\n\n      if (name === 'clientPassword') {\n        this.setState({\n          clientPassword: value\n        });\n      }\n    };\n\n    this.state = {\n      id: '',\n      clientLogin: '',\n      clientPassword: ''\n    };\n  }\n\n  render() {\n    const {\n      clientLogin,\n      clientPassword,\n      id\n    } = this.state;\n    const {\n      onLogin,\n      onEnterEmail\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"incorrectLoginOrPassword\",\n        className: \"userNotFoundBlock -disabled\",\n        children: \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F \\u0441 \\u0442\\u0430\\u043A\\u0438\\u043C email \\u043D\\u0435 \\u0441\\u0443\\u0449\\u0435\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442 \\u0438\\u043B\\u0438 \\u043D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), inputLoginArray.map(input => /*#__PURE__*/_jsxDEV(InputWitchCkeckingNotNull, {\n        initialValue: setInitialValue(input.name, clientLogin, clientPassword),\n        type: input.type,\n        name: input.name,\n        classInput: input.className,\n        classSymbol: input.classNameSymbol,\n        updateData: this.updateData,\n        removeErrorNotNull: removeErrorNotNull\n      }, input.className, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)), buttonLoginArray.map(button => /*#__PURE__*/_jsxDEV(ButtonLogin, {\n        className: button.className,\n        handleButtonClick: button.handleButtonClick ? this.handleButtonClick : '',\n        onEnterEmail: button.onEnterEmail ? onEnterEmail : '',\n        onLogin: button.onLogin ? onLogin : '',\n        link: button.link ? this.link : '',\n        clientLogin: button.clientLogin ? clientLogin : '',\n        id: id,\n        children: button.text\n      }, button.className, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/common/components/loginForm/components/LoginComponent.jsx"],"names":["React","InputWitchCkeckingNotNull","removeErrorNotNull","processResultLoginForgetPassword","ButtonLogin","setErrorNotNullGroupsLogin","buttonLoginArray","inputLoginArray","setInitialValue","Login","Component","constructor","props","updateId","value","setState","id","handleButtonClick","clientLogin","clientPassword","state","onLogin","onEnter","history","onAdd","onEnterEmail","link","push","updateData","name","render","map","input","type","className","classNameSymbol","button","text"],"mappings":"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","sourcesContent":["import React from 'react';\nimport InputWitchCkeckingNotNull from '../../input/components/InputWitchCkeckingNotNullComponent';\nimport removeErrorNotNull from '../../../untils/removeErrorNotNull';\nimport processResultLoginForgetPassword from '../../untils/processResultLoginForgetPassword';\nimport ButtonLogin from '../../components/button/components/ButtonLoginComponent';\nimport setErrorNotNullGroupsLogin from '../utils/setErrorNotNullGroupsLogin';\nimport buttonLoginArray from '../constants/buttonLoginArray';\nimport inputLoginArray from '../constants/inputLoginArray';\nimport setInitialValue from '../utils/setInitialValue';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      clientLogin: '',\n      clientPassword: '',\n    };\n  }\n\n  updateId = (value) => this.setState({ id: value });\n\n  handleButtonClick = () => {\n    const { clientLogin, clientPassword } = this.state;\n    const {\n      onLogin, onEnter, history, onAdd, onEnterEmail,\n    } = this.props;\n    (clientLogin && clientPassword)\n      ? processResultLoginForgetPassword(\n        onEnter, onLogin, history, onAdd, onEnterEmail, clientLogin, clientPassword, this.updateId,\n      ) : setErrorNotNullGroupsLogin(clientLogin, clientPassword);\n  };\n\n   link = () => {\n     const { history } = this.props;\n     history.push('/registration');\n   };\n\n  updateData = (value, name) => {\n    if (name === 'clientLogin') { this.setState({ clientLogin: value }); }\n    if (name === 'clientPassword') { this.setState({ clientPassword: value }); }\n  }\n\n  render() {\n    const { clientLogin, clientPassword, id } = this.state;\n    const { onLogin, onEnterEmail } = this.props;\n\n    return (\n      <form className=\"form\">\n        <p id=\"incorrectLoginOrPassword\" className=\"userNotFoundBlock -disabled\">Пользователя с таким email не существует или неверный пароль</p>\n        {inputLoginArray.map((input) => (\n          <InputWitchCkeckingNotNull\n            key={input.className}\n            initialValue={setInitialValue(input.name, clientLogin, clientPassword)}\n            type={input.type}\n            name={input.name}\n            classInput={input.className}\n            classSymbol={input.classNameSymbol}\n            updateData={this.updateData}\n            removeErrorNotNull={removeErrorNotNull}\n          />\n        ))}\n        {buttonLoginArray.map((button) => (\n          <ButtonLogin\n            key={button.className}\n            className={button.className}\n            handleButtonClick={button.handleButtonClick ? this.handleButtonClick : ''}\n            onEnterEmail={button.onEnterEmail ? onEnterEmail : ''}\n            onLogin={button.onLogin ? onLogin : ''}\n            link={button.link ? this.link : ''}\n            clientLogin={button.clientLogin ? clientLogin : ''}\n            id={id}\n          >\n            {button.text}\n          </ButtonLogin>\n        ))}\n      </form>\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}
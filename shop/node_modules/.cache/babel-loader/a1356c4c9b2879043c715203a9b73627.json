{"ast":null,"code":"var _jsxFileName = \"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/common/loginForm/components/LoginComponent.jsx\";\nimport React from 'react';\nimport InputWitchCkeckingNotNull from '../../input/components/InputWitchCkeckingNotNullComponent';\nimport removeErrorNotNull from '../../untils/removeErrorNotNull';\nimport processResultLoginForgetPassword from '../../untils/processResultLoginForgetPassword';\nimport ButtonLogin from '../../button/components/ButtonLoginComponent';\nimport setErrorNotNullGroupsLogin from '../utils/setErrorNotNullGroupsLogin';\nimport buttonLoginArray from '../constants/buttonLoginArray';\nimport inputLoginArray from '../constants/inputLoginArray';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateId = value => this.setState({\n      id: value\n    });\n\n    this.handleButtonClick = () => {\n      const {\n        clientLogin,\n        clientPassword\n      } = this.state;\n      const {\n        onLogin,\n        onEnter,\n        history,\n        onAdd,\n        onEnterEmail\n      } = this.props;\n      clientLogin && clientPassword ? processResultLoginForgetPassword(onEnter, onLogin, history, onAdd, onEnterEmail, clientLogin, clientPassword, this.updateId) : setErrorNotNullGroupsLogin(clientLogin, clientPassword);\n    };\n\n    this.link = () => {\n      const {\n        history\n      } = this.props;\n      history.push('/registration');\n    };\n\n    this.updateData = (value, name) => {\n      if (name === 'clientLogin') {\n        this.setState({\n          clientLogin: value\n        });\n      }\n\n      if (name === 'clientPassword') {\n        this.setState({\n          clientPassword: value\n        });\n      }\n    };\n\n    this.state = {\n      id: '',\n      clientLogin: '',\n      clientLoginSymbol: 'errorSymbol',\n      clientPassword: '',\n      clientPasswordSymbol: 'errorSymbolPassword'\n    };\n  }\n\n  render() {\n    const {\n      clientLogin,\n      clientLoginSymbol,\n      clientPassword,\n      clientPasswordSymbol,\n      id\n    } = this.state;\n    const {\n      onLogin,\n      onEnterEmail\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"incorrectLoginOrPassword\",\n        className: \"userNotFoundBlock -disabled\",\n        children: \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F \\u0441 \\u0442\\u0430\\u043A\\u0438\\u043C email \\u043D\\u0435 \\u0441\\u0443\\u0449\\u0435\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442 \\u0438\\u043B\\u0438 \\u043D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loginString -required\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), inputLoginArray.map(input => /*#__PURE__*/_jsxDEV(InputWitchCkeckingNotNull, {\n          initialValue: \"\",\n          type: input.type,\n          name: input.name,\n          className: \"loginInput\"\n        }, input.className, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(InputWitchCkeckingNotNull, {\n          initialValue: clientLogin,\n          type: \"email\",\n          name: \"clientLogin\",\n          classInput: \"loginInput\",\n          classSymbol: clientLoginSymbol,\n          updateData: this.updateData,\n          removeErrorNotNull: removeErrorNotNull\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"passwordString -required\",\n          children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputWitchCkeckingNotNull, {\n          initialValue: clientPassword,\n          type: \"password\",\n          name: \"clientPassword\",\n          classInput: \"passwordInput\",\n          classSymbol: clientPasswordSymbol,\n          updateData: this.updateData,\n          removeErrorNotNull: removeErrorNotNull\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), buttonLoginArray.map(button => /*#__PURE__*/_jsxDEV(ButtonLogin, {\n        className: button.className,\n        handleButtonClick: button.handleButtonClick ? this.handleButtonClick : '',\n        onEnterEmail: button.onEnterEmail ? onEnterEmail : '',\n        onLogin: button.onLogin ? onLogin : '',\n        link: button.link ? this.link : '',\n        clientLogin: button.clientLogin ? clientLogin : '',\n        id: id,\n        children: button.text\n      }, button.className, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/common/loginForm/components/LoginComponent.jsx"],"names":["React","InputWitchCkeckingNotNull","removeErrorNotNull","processResultLoginForgetPassword","ButtonLogin","setErrorNotNullGroupsLogin","buttonLoginArray","inputLoginArray","Login","Component","constructor","props","updateId","value","setState","id","handleButtonClick","clientLogin","clientPassword","state","onLogin","onEnter","history","onAdd","onEnterEmail","link","push","updateData","name","clientLoginSymbol","clientPasswordSymbol","render","map","input","type","className","button","text"],"mappings":"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","sourcesContent":["import React from 'react';\nimport InputWitchCkeckingNotNull from '../../input/components/InputWitchCkeckingNotNullComponent';\nimport removeErrorNotNull from '../../untils/removeErrorNotNull';\nimport processResultLoginForgetPassword from '../../untils/processResultLoginForgetPassword';\nimport ButtonLogin from '../../button/components/ButtonLoginComponent';\nimport setErrorNotNullGroupsLogin from '../utils/setErrorNotNullGroupsLogin';\nimport buttonLoginArray from '../constants/buttonLoginArray';\nimport inputLoginArray from '../constants/inputLoginArray';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      clientLogin: '',\n      clientLoginSymbol: 'errorSymbol',\n      clientPassword: '',\n      clientPasswordSymbol: 'errorSymbolPassword',\n    };\n  }\n\n  updateId = (value) => this.setState({ id: value });\n\n  handleButtonClick = () => {\n    const { clientLogin, clientPassword } = this.state;\n    const {\n      onLogin, onEnter, history, onAdd, onEnterEmail,\n    } = this.props;\n    (clientLogin && clientPassword)\n      ? processResultLoginForgetPassword(\n        onEnter, onLogin, history, onAdd, onEnterEmail, clientLogin, clientPassword, this.updateId,\n      ) : setErrorNotNullGroupsLogin(clientLogin, clientPassword);\n  };\n\n  link = () => {\n    const { history } = this.props;\n    history.push('/registration');\n  };\n\n  updateData = (value, name) => {\n    if (name === 'clientLogin') { this.setState({ clientLogin: value }); }\n    if (name === 'clientPassword') { this.setState({ clientPassword: value }); }\n  }\n\n  render() {\n    const {\n      clientLogin, clientLoginSymbol, clientPassword, clientPasswordSymbol, id,\n    } = this.state;\n    const { onLogin, onEnterEmail } = this.props;\n\n    return (\n      <form className=\"form\">\n        <p id=\"incorrectLoginOrPassword\" className=\"userNotFoundBlock -disabled\">Пользователя с таким email не существует или неверный пароль</p>\n        <div className=\"login\">\n          <p className=\"loginString -required\">Email:</p>\n          {inputLoginArray.map((input) => (\n            <InputWitchCkeckingNotNull\n              key={input.className}\n              initialValue=\"\"\n              type={input.type}\n              name={input.name}\n              className=\"loginInput\"\n            />\n          ))}\n          <InputWitchCkeckingNotNull\n            initialValue={clientLogin}\n            type=\"email\"\n            name=\"clientLogin\"\n            classInput=\"loginInput\"\n            classSymbol={clientLoginSymbol}\n            updateData={this.updateData}\n            removeErrorNotNull={removeErrorNotNull}\n          />\n        </div>\n        <div className=\"password\">\n          <p className=\"passwordString -required\">Пароль:</p>\n          <InputWitchCkeckingNotNull\n            initialValue={clientPassword}\n            type=\"password\"\n            name=\"clientPassword\"\n            classInput=\"passwordInput\"\n            classSymbol={clientPasswordSymbol}\n            updateData={this.updateData}\n            removeErrorNotNull={removeErrorNotNull}\n          />\n        </div>\n        {buttonLoginArray.map((button) => (\n          <ButtonLogin\n            key={button.className}\n            className={button.className}\n            handleButtonClick={button.handleButtonClick ? this.handleButtonClick : ''}\n            onEnterEmail={button.onEnterEmail ? onEnterEmail : ''}\n            onLogin={button.onLogin ? onLogin : ''}\n            link={button.link ? this.link : ''}\n            clientLogin={button.clientLogin ? clientLogin : ''}\n            id={id}\n          >\n            {button.text}\n          </ButtonLogin>\n        ))}\n      </form>\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}
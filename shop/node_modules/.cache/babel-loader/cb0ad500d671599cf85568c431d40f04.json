{"ast":null,"code":"var _jsxFileName = \"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/editProducts/components/EditProductsPageColumnsComponent.jsx\";\nimport React from 'react';\nimport getProducts from '../api/get/getProducts';\nimport getCategories from '../../editCategory/api/get/getCategories';\nimport PopUpErrorLoading from '../../../common/popup/components/PopUpErrorLoadingComponent';\nimport IsEditActiveColumnsComponent from './IsEditActiveColumnsComponent';\nimport IsEditNotActiveColumnsComponent from './IsEditNotActiveColumnsComponent';\nimport processHandleButtonOnEdit from '../utils/processHandleButtonOnEdit';\nimport ButtonEditProducts from '../../../common/button/components/ButtonEditProductsComponent';\nimport ButtonDeleteCategoryProducts from '../../../common/button/components/ButtonDeleteCategoryProductsComponent';\nimport updateDataOnClick from '../utils/updateDataOnClick';\nimport updateData from '../utils/updateData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass EditProductsPageColumns extends React.Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n    this.setState = this.setState.bind(this);\n\n    this.handleButtonOnClick = async (product, category = false) => {\n      const {\n        isProductsUpdated,\n        setIsProductsUpdated\n      } = this.props;\n\n      if (!category) {\n        processHandleButtonOnEdit(this.setState, this.state, product, updateDataOnClick, isProductsUpdated, setIsProductsUpdated);\n      } else {\n        updateDataOnClick(this.setState, false, this.state, product, category);\n      }\n    };\n\n    this.setpopupSmthWentWrongActive = value => this.setState({\n      popupSmthWentWrongActive: value\n    });\n\n    this.updateAfterDelete = () => {\n      const {\n        isUpdated\n      } = this.state;\n      this.setState({\n        isUpdated: !isUpdated\n      });\n    };\n\n    this.updateCategoriesProducts = (value, valueIsLoading, name) => {\n      if (this._isMounted) {\n        if (name === 'updateProducts') this.setState({\n          productsArray: value,\n          isLoadingProducts: valueIsLoading\n        });\n        if (name === 'updateCategories') this.setState({\n          categoriesArray: value.categories,\n          isLoadingCategories: valueIsLoading\n        });\n      }\n    };\n\n    this.state = {\n      productsArray: [],\n      isEditActive: false,\n      isEditActiveId: '',\n      isUpdated: false,\n      isLoadingProducts: false,\n      isLoadingCategories: false,\n      ErrorMessageProducts: '',\n      popupSmthWentWrongActive: true,\n      IsSaveButtonVisible: false,\n      IsEditButtonVisible: true,\n      productImage: '',\n      productCategory: '',\n      productName: '',\n      productPrice: '',\n      productInStock: 1,\n      categoriesArray: []\n    };\n  }\n\n  async componentDidMount() {\n    this._isMounted = true;\n    await getProducts(this.updateCategoriesProducts, this.setError);\n    await getCategories(this.updateCategoriesProducts);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const {\n      isUpdated\n    } = this.state;\n\n    if (prevState.isUpdated !== isUpdated) {\n      await getProducts(this.updateCategoriesProducts, this.setError);\n      await getCategories(this.updateCategoriesProducts);\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    const {\n      isEditActive,\n      isEditActiveId,\n      ErrorMessageProducts,\n      popupSmthWentWrongActive,\n      productsArray,\n      isLoadingProducts,\n      IsEditButtonVisible,\n      isLoadingCategories,\n      categoriesArray\n    } = this.state;\n    const {\n      isProductsUpdated,\n      setIsProductsUpdated\n    } = this.props;\n\n    if (!isLoadingProducts || !isLoadingCategories) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"-isLoading\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (ErrorMessageProducts) {\n      return /*#__PURE__*/_jsxDEV(PopUpErrorLoading, {\n        popupSmthWentWrongActive: popupSmthWentWrongActive,\n        setpopupSmthWentWrongActive: this.setpopupSmthWentWrongActive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: productsArray.products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"columns\",\n          children: [isEditActive && product.id === isEditActiveId ? /*#__PURE__*/_jsxDEV(IsEditActiveColumnsComponent, {\n            product: product,\n            categoriesArray: categoriesArray,\n            updateData: this.updateData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(IsEditNotActiveColumnsComponent, {\n            product: product,\n            categoriesArray: categoriesArray\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 19\n          }, this), categoriesArray.map(category => product.categoryId === category.id && /*#__PURE__*/_jsxDEV(ButtonEditProducts, {\n            category: category,\n            product: product,\n            handleButtonOnClick: this.handleButtonOnClick,\n            IsEditButtonVisible: IsEditButtonVisible,\n            isEditActive: isEditActive,\n            isEditActiveId: isEditActiveId\n          }, product.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnDelete\",\n            children: /*#__PURE__*/_jsxDEV(ButtonDeleteCategoryProducts, {\n              item: product,\n              category: false,\n              updateAfterDelete: this.updateAfterDelete,\n              setIsProductsUpdated: setIsProductsUpdated,\n              isProductsUpdated: isProductsUpdated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this))\n    }, void 0, false);\n  }\n\n}\n\nexport default EditProductsPageColumns;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/editProducts/components/EditProductsPageColumnsComponent.jsx"],"names":["React","getProducts","getCategories","PopUpErrorLoading","IsEditActiveColumnsComponent","IsEditNotActiveColumnsComponent","processHandleButtonOnEdit","ButtonEditProducts","ButtonDeleteCategoryProducts","updateDataOnClick","updateData","EditProductsPageColumns","Component","constructor","props","_isMounted","setState","bind","handleButtonOnClick","product","category","isProductsUpdated","setIsProductsUpdated","state","setpopupSmthWentWrongActive","value","popupSmthWentWrongActive","updateAfterDelete","isUpdated","updateCategoriesProducts","valueIsLoading","name","productsArray","isLoadingProducts","categoriesArray","categories","isLoadingCategories","isEditActive","isEditActiveId","ErrorMessageProducts","IsSaveButtonVisible","IsEditButtonVisible","productImage","productCategory","productName","productPrice","productInStock","componentDidMount","setError","componentDidUpdate","prevProps","prevState","componentWillUnmount","render","products","map","id","categoryId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport getProducts from '../api/get/getProducts';\nimport getCategories from '../../editCategory/api/get/getCategories';\nimport PopUpErrorLoading from '../../../common/popup/components/PopUpErrorLoadingComponent';\nimport IsEditActiveColumnsComponent from './IsEditActiveColumnsComponent';\nimport IsEditNotActiveColumnsComponent from './IsEditNotActiveColumnsComponent';\nimport processHandleButtonOnEdit from '../utils/processHandleButtonOnEdit';\nimport ButtonEditProducts from '../../../common/button/components/ButtonEditProductsComponent';\nimport ButtonDeleteCategoryProducts from '../../../common/button/components/ButtonDeleteCategoryProductsComponent';\nimport updateDataOnClick from '../utils/updateDataOnClick';\nimport updateData from '../utils/updateData';\n\nclass EditProductsPageColumns extends React.Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      productsArray: [],\n      isEditActive: false,\n      isEditActiveId: '',\n      isUpdated: false,\n      isLoadingProducts: false,\n      isLoadingCategories: false,\n      ErrorMessageProducts: '',\n      popupSmthWentWrongActive: true,\n      IsSaveButtonVisible: false,\n      IsEditButtonVisible: true,\n      productImage: '',\n      productCategory: '',\n      productName: '',\n      productPrice: '',\n      productInStock: 1,\n      categoriesArray: [],\n    };\n  }\n\n  async componentDidMount() {\n    this._isMounted = true;\n    await getProducts(this.updateCategoriesProducts, this.setError);\n    await getCategories(this.updateCategoriesProducts);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const { isUpdated } = this.state;\n    if (prevState.isUpdated !== isUpdated) {\n      await getProducts(this.updateCategoriesProducts, this.setError);\n      await getCategories(this.updateCategoriesProducts);\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n setState = this.setState.bind(this)\n\n   handleButtonOnClick = async (product, category = false) => {\n     const { isProductsUpdated, setIsProductsUpdated } = this.props;\n     if (!category) {\n       processHandleButtonOnEdit(this.setState, this.state, product, updateDataOnClick,\n         isProductsUpdated, setIsProductsUpdated);\n     } else {\n       updateDataOnClick(this.setState, false, this.state, product, category);\n     }\n   }\n\n   /*   updateData=(value, name, array = '') => {\n    if (name === 'setError') this.setState({ ErrorMessageProducts: value });\n    if (name === 'updateImage') this.setState({ productImage: value });\n    if (name === 'updateProductName') this.setState({ productName: value });\n    if (name === 'updateProductPrice') this.setState({ productPrice: value });\n    if (name === 'updateProductInStock') this.setState({ productInStock: value });\n    if (name === 'updateProductCategory')\n     this.setState({ productCategory: value, categoriesArray: array });\n  }\n */\n  setpopupSmthWentWrongActive = (value) => this.setState({ popupSmthWentWrongActive: value });\n\n  updateAfterDelete = () => {\n    const { isUpdated } = this.state;\n    this.setState({ isUpdated: !isUpdated });\n  }\n\n  updateCategoriesProducts=(value, valueIsLoading, name) => {\n    if (this._isMounted) {\n      if (name === 'updateProducts') this.setState({ productsArray: value, isLoadingProducts: valueIsLoading });\n      if (name === 'updateCategories') this.setState({ categoriesArray: value.categories, isLoadingCategories: valueIsLoading });\n    }\n  }\n\n  render() {\n    const {\n      isEditActive, isEditActiveId, ErrorMessageProducts, popupSmthWentWrongActive, productsArray,\n      isLoadingProducts, IsEditButtonVisible, isLoadingCategories, categoriesArray,\n    } = this.state;\n    const { isProductsUpdated, setIsProductsUpdated } = this.props;\n    if (!isLoadingProducts || !isLoadingCategories) {\n      return <div className=\"-isLoading\"> </div>;\n    }\n    if (ErrorMessageProducts) {\n      return (\n        <PopUpErrorLoading\n          popupSmthWentWrongActive={popupSmthWentWrongActive}\n          setpopupSmthWentWrongActive={this.setpopupSmthWentWrongActive}\n        />\n      );\n    }\n    return (\n      <>\n        {productsArray.products.map((product) => (\n          <li key={product.id}>\n            <div className=\"columns\">\n              {isEditActive && product.id === isEditActiveId\n                ? (\n                  <IsEditActiveColumnsComponent\n                    product={product}\n                    categoriesArray={categoriesArray}\n                    updateData={this.updateData}\n                  />\n                ) : (\n                  <IsEditNotActiveColumnsComponent\n                    product={product}\n                    categoriesArray={categoriesArray}\n                  />\n                )}\n              { categoriesArray.map((category) => (\n                product.categoryId === category.id && (\n                <ButtonEditProducts\n                  key={product.id}\n                  category={category}\n                  product={product}\n                  handleButtonOnClick={this.handleButtonOnClick}\n                  IsEditButtonVisible={IsEditButtonVisible}\n                  isEditActive={isEditActive}\n                  isEditActiveId={isEditActiveId}\n                />\n                )))}\n              <div className=\"columnDelete\">\n                <ButtonDeleteCategoryProducts\n                  item={product}\n                  category={false}\n                  updateAfterDelete={this.updateAfterDelete}\n                  setIsProductsUpdated={setIsProductsUpdated}\n                  isProductsUpdated={isProductsUpdated}\n                />\n              </div>\n            </div>\n          </li>\n        ))}\n      </>\n    );\n  }\n}\n\nexport default EditProductsPageColumns;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { ADD, DELETE, INCREASE, DECREASE, DELETEALL, ADDCLIENTINFORMATION } from '../actions/catalogItemsActions';\nconst initialState = [];\n\nconst catalogItemsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD.type:\n      {\n        const index = state.findIndex(item => item.id === action.payload.item.id);\n\n        if (index === -1) {\n          console.log(action.payload.item);\n          return [...state, action.payload.item];\n        }\n\n        return state;\n      }\n\n    case INCREASE.type:\n      {\n        const index = state.findIndex(item => item.id === action.payload.itemId);\n        return [...state.slice(0, index), { ...state[index],\n          counter: action.payload.counter + 1\n        }, ...state.slice(index + 1)];\n      }\n\n    case DECREASE.type:\n      {\n        if (action.payload.counter > 1) {\n          const index = state.findIndex(item => item.id === action.payload.itemId);\n          return [...state.slice(0, index), { ...state[index],\n            counter: action.payload.counter - 1\n          }, ...state.slice(index + 1)];\n        }\n\n        return state;\n      }\n\n    case DELETE.type:\n      {\n        return [...state.filter(item => item.id !== action.payload.itemId)];\n      }\n\n    case DELETEALL.type:\n      {\n        return [];\n      }\n\n    case ADDCLIENTINFORMATION.type:\n      {\n        let i = 0;\n\n        for (i; i <= state.length; i += 1) {\n          const item = state[i];\n\n          if (item !== undefined) {\n            item.clientInformation = action.payload.clientName;\n          }\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default catalogItemsReducer;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/redux/reducers/catalogItemsReducer.jsx"],"names":["ADD","DELETE","INCREASE","DECREASE","DELETEALL","ADDCLIENTINFORMATION","initialState","catalogItemsReducer","state","action","type","index","findIndex","item","id","payload","console","log","itemId","slice","counter","filter","i","length","undefined","clientInformation","clientName"],"mappings":"AAAA,SACEA,GADF,EACOC,MADP,EACeC,QADf,EACyBC,QADzB,EACmCC,SADnC,EAC8CC,oBAD9C,QAEO,gCAFP;AAIA,MAAMC,YAAY,GAAG,EAArB;;AAEA,MAAMC,mBAAmB,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,GAAG,CAACU,IAAT;AAAe;AACb,cAAMC,KAAK,GAAGH,KAAK,CAACI,SAAN,CAAiBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAP,CAAeF,IAAf,CAAoBC,EAA1D,CAAd;;AACA,YAAIH,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBK,UAAAA,OAAO,CAACC,GAAR,CAAYR,MAAM,CAACM,OAAP,CAAeF,IAA3B;AACA,iBAAO,CAAC,GAAGL,KAAJ,EAAWC,MAAM,CAACM,OAAP,CAAeF,IAA1B,CAAP;AACD;;AAAC,eAAOL,KAAP;AACH;;AAED,SAAKN,QAAQ,CAACQ,IAAd;AAAoB;AAClB,cAAMC,KAAK,GAAGH,KAAK,CAACI,SAAN,CAAiBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAP,CAAeG,MAArD,CAAd;AACA,eAAO,CACL,GAAGV,KAAK,CAACW,KAAN,CAAY,CAAZ,EAAeR,KAAf,CADE,EAEL,EAAE,GAAGH,KAAK,CAACG,KAAD,CAAV;AAAmBS,UAAAA,OAAO,EAAEX,MAAM,CAACM,OAAP,CAAeK,OAAf,GAAyB;AAArD,SAFK,EAGL,GAAGZ,KAAK,CAACW,KAAN,CAAYR,KAAK,GAAG,CAApB,CAHE,CAAP;AAKD;;AAED,SAAKR,QAAQ,CAACO,IAAd;AAAoB;AAClB,YAAID,MAAM,CAACM,OAAP,CAAeK,OAAf,GAAyB,CAA7B,EAAgC;AAC9B,gBAAMT,KAAK,GAAGH,KAAK,CAACI,SAAN,CAAiBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAP,CAAeG,MAArD,CAAd;AACA,iBAAO,CACL,GAAGV,KAAK,CAACW,KAAN,CAAY,CAAZ,EAAeR,KAAf,CADE,EAEL,EAAE,GAAGH,KAAK,CAACG,KAAD,CAAV;AAAmBS,YAAAA,OAAO,EAAEX,MAAM,CAACM,OAAP,CAAeK,OAAf,GAAyB;AAArD,WAFK,EAGL,GAAGZ,KAAK,CAACW,KAAN,CAAYR,KAAK,GAAG,CAApB,CAHE,CAAP;AAKD;;AAAC,eAAOH,KAAP;AACH;;AAED,SAAKP,MAAM,CAACS,IAAZ;AAAkB;AAChB,eAAO,CACL,GAAGF,KAAK,CAACa,MAAN,CAAcR,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAP,CAAeG,MAAlD,CADE,CAAP;AAGD;;AAED,SAAKd,SAAS,CAACM,IAAf;AAAqB;AACnB,eAAO,EAAP;AACD;;AAED,SAAKL,oBAAoB,CAACK,IAA1B;AAAgC;AAC9B,YAAIY,CAAC,GAAG,CAAR;;AACA,aAAKA,CAAL,EAAQA,CAAC,IAAId,KAAK,CAACe,MAAnB,EAA2BD,CAAC,IAAI,CAAhC,EAAmC;AACjC,gBAAMT,IAAI,GAAGL,KAAK,CAACc,CAAD,CAAlB;;AACA,cAAIT,IAAI,KAAKW,SAAb,EAAwB;AACtBX,YAAAA,IAAI,CAACY,iBAAL,GAAyBhB,MAAM,CAACM,OAAP,CAAeW,UAAxC;AACD;AACF;;AAED,eAAOlB,KAAP;AACD;;AAED;AACE,aAAOA,KAAP;AApDJ;AAsDD,CAvDD;;AAyDA,eAAeD,mBAAf","sourcesContent":["import {\n  ADD, DELETE, INCREASE, DECREASE, DELETEALL, ADDCLIENTINFORMATION,\n} from '../actions/catalogItemsActions';\n\nconst initialState = [];\n\nconst catalogItemsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD.type: {\n      const index = state.findIndex((item) => item.id === action.payload.item.id);\n      if (index === -1) {\n        console.log(action.payload.item);\n        return [...state, action.payload.item];\n      } return state;\n    }\n\n    case INCREASE.type: {\n      const index = state.findIndex((item) => item.id === action.payload.itemId);\n      return [\n        ...state.slice(0, index),\n        { ...state[index], counter: action.payload.counter + 1 },\n        ...state.slice(index + 1),\n      ];\n    }\n\n    case DECREASE.type: {\n      if (action.payload.counter > 1) {\n        const index = state.findIndex((item) => item.id === action.payload.itemId);\n        return [\n          ...state.slice(0, index),\n          { ...state[index], counter: action.payload.counter - 1 },\n          ...state.slice(index + 1),\n        ];\n      } return state;\n    }\n\n    case DELETE.type: {\n      return [\n        ...state.filter((item) => item.id !== action.payload.itemId),\n      ];\n    }\n\n    case DELETEALL.type: {\n      return [];\n    }\n\n    case ADDCLIENTINFORMATION.type: {\n      let i = 0;\n      for (i; i <= state.length; i += 1) {\n        const item = state[i];\n        if (item !== undefined) {\n          item.clientInformation = action.payload.clientName;\n        }\n      }\n\n      return state;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default catalogItemsReducer;\n"]},"metadata":{},"sourceType":"module"}
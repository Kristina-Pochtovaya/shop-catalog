{"ast":null,"code":"var _jsxFileName = \"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/registration/components/RegistrationComponent.jsx\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport ConnectedHeader from '../../main/header/container/HeaderContainer';\nimport Footer from '../../main/footer/components/FooterComponent';\nimport formatPhoneNumber from '../../../common/untils/formatPhoneNumber';\nimport postUsers from '../api/post/postUsersRequest';\nimport InputWitchCkeckingNotNull from '../../../common/input/components/InputWitchCkeckingNotNullComponent';\nimport removeErrorNotNull from '../../../common/untils/removeErrorNotNull';\nimport removeErrorLength from '../../../common/untils/removeErrorLength';\nimport processResultRegistration from '../utils/processResultRegistration';\nimport setClassErrorById from '../../../common/untils/setClassErrorById';\nimport executeFunctionsIfNoErrorsLoginRegistration from '../../../common/untils/executeFunctionsIfNoErrorsLoginRegistration';\nimport setErrorNotNullGroupsRegistration from '../utils/setErrorNotNullGroupsRegistration';\nimport ButtonLogin from '../../../common/button/components/ButtonLoginComponent';\nimport inputRegistrationArray from '../constants/inputRegistrationArray';\nimport setInitialValue from '../utils/setInitialValue';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Registration extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateData = (value, name) => {\n      if (name === 'firstName') {\n        this.setState({\n          firstName: value\n        });\n      }\n\n      if (name === 'lastName') {\n        this.setState({\n          lastName: value\n        });\n      }\n\n      if (name === 'email') {\n        this.setState({\n          email: value\n        });\n      }\n\n      if (name === 'address') {\n        this.setState({\n          address: value\n        });\n      }\n\n      if (name === 'passwordNew') {\n        this.setState({\n          password: value\n        });\n      }\n\n      if (name === 'passwordNewRepeat') {\n        this.setState({\n          passwordNewRepeat: value\n        });\n      }\n\n      if (name === 'phone') {\n        this.setState({\n          phoneNumber: formatPhoneNumber(value)\n        });\n      }\n    };\n\n    this.updatePhone = () => this.setState({\n      phoneNumber: '+375'\n    });\n\n    this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      phoneNumber: '+375(__)___-__-__',\n      address: '',\n      password: '',\n      passwordNewRepeat: '',\n      errorLength: 'errorlengthString'\n    };\n  }\n\n  render() {\n    const {\n      firstName,\n      lastName,\n      email,\n      phoneNumber,\n      address,\n      password,\n      ClassPasswordNewInput,\n      ClassPasswordNewSymbol,\n      passwordNewRepeat,\n      ClassPasswordRepeatInput,\n      ClassPasswordRepeatSymbol,\n      errorLength\n    } = this.state;\n    const {\n      onEnter,\n      onLogin,\n      history,\n      onEnterEmail\n    } = this.props;\n\n    function handleButtonClick() {\n      if (firstName && lastName && email && passwordNewRepeat && phoneNumber && address && password === passwordNewRepeat && password.length >= 9) {\n        processResultRegistration(firstName, lastName, email, history, password, phoneNumber, address, postUsers, setClassErrorById, onEnter, onLogin, executeFunctionsIfNoErrorsLoginRegistration);\n      } else {\n        setErrorNotNullGroupsRegistration(firstName, lastName, email, errorLength, phoneNumber, address, password, ClassPasswordNewInput, ClassPasswordNewSymbol, passwordNewRepeat, ClassPasswordRepeatInput, ClassPasswordRepeatSymbol);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ConnectedHeader, {\n        linkItem: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"buttonBack\",\n          children: \"\\u0413\\u043B\\u0430\\u0432\\u043D\\u0430\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 36\n        }, this),\n        link: \"/main-page\",\n        disabled: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registration-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" \\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"registration\",\n          children: [inputRegistrationArray.map(input => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: input.name,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: input.classNameOfString,\n              children: input.nameOfString\n            }, input.classNameOfString, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputWitchCkeckingNotNull, {\n              initialValue: setInitialValue(input.name, firstName, lastName, email, phoneNumber, address, password, passwordNewRepeat),\n              type: input.type,\n              name: input.name,\n              classInput: input.className,\n              classSymbol: input.classNameSymbol,\n              updateData: this.updateData,\n              removeErrorNotNull: input.removeErrorNotNull ? removeErrorNotNull : '',\n              removeErrorLength: input.removeErrorLength ? removeErrorLength : '',\n              classerrorLength: input.classerrorLength ? errorLength : '',\n              minLength: input.minLength ? '13' : '',\n              maxLength: input.maxLength ? '13' : '',\n              placeholder: input.placeholder ? '+375 (__) ___-__-__' : '',\n              updatePhone: input.onFocus ? this.updatePhone : '',\n              onEnterEmail: input.onEnterEmail ? onEnterEmail : '',\n              classNameOfString: input.classNameOfString,\n              nameOfString: input.nameOfString\n            }, input.className, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), input.name === 'passwordNew' && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `${errorLength} -disabled`,\n              children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C \\u0434\\u043E\\u043B\\u0436\\u0435\\u043D \\u0431\\u044B\\u0442\\u044C \\u043D\\u0435 \\u043C\\u0435\\u043D\\u0435\\u0435 9 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 50\n            }, this)]\n          }, input.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"existingUserString -disabled\",\n            id: \"existingUser\",\n            children: \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C \\u0441 \\u0442\\u0430\\u043A\\u0438\\u043C email \\u0443\\u0436\\u0435 \\u0441\\u0443\\u0449\\u0435\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonLogin, {\n            className: \"registrationButton\",\n            handleButtonClick: handleButtonClick,\n            onLogin: \"\",\n            onEnterEmail: \"\",\n            clientLogin: \"\",\n            children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0435\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default _c = withRouter(Registration);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/registration/components/RegistrationComponent.jsx"],"names":["React","withRouter","ConnectedHeader","Footer","formatPhoneNumber","postUsers","InputWitchCkeckingNotNull","removeErrorNotNull","removeErrorLength","processResultRegistration","setClassErrorById","executeFunctionsIfNoErrorsLoginRegistration","setErrorNotNullGroupsRegistration","ButtonLogin","inputRegistrationArray","setInitialValue","Registration","Component","constructor","props","updateData","value","name","setState","firstName","lastName","email","address","password","passwordNewRepeat","phoneNumber","updatePhone","state","errorLength","render","ClassPasswordNewInput","ClassPasswordNewSymbol","ClassPasswordRepeatInput","ClassPasswordRepeatSymbol","onEnter","onLogin","history","onEnterEmail","handleButtonClick","length","map","input","classNameOfString","nameOfString","type","className","classNameSymbol","classerrorLength","minLength","maxLength","placeholder","onFocus"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport ConnectedHeader from '../../main/header/container/HeaderContainer';\nimport Footer from '../../main/footer/components/FooterComponent';\nimport formatPhoneNumber from '../../../common/untils/formatPhoneNumber';\nimport postUsers from '../api/post/postUsersRequest';\nimport InputWitchCkeckingNotNull from '../../../common/input/components/InputWitchCkeckingNotNullComponent';\nimport removeErrorNotNull from '../../../common/untils/removeErrorNotNull';\nimport removeErrorLength from '../../../common/untils/removeErrorLength';\nimport processResultRegistration from '../utils/processResultRegistration';\nimport setClassErrorById from '../../../common/untils/setClassErrorById';\nimport executeFunctionsIfNoErrorsLoginRegistration from '../../../common/untils/executeFunctionsIfNoErrorsLoginRegistration';\nimport setErrorNotNullGroupsRegistration from '../utils/setErrorNotNullGroupsRegistration';\nimport ButtonLogin from '../../../common/button/components/ButtonLoginComponent';\nimport inputRegistrationArray from '../constants/inputRegistrationArray';\nimport setInitialValue from '../utils/setInitialValue';\n\nclass Registration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      phoneNumber: '+375(__)___-__-__',\n      address: '',\n      password: '',\n      passwordNewRepeat: '',\n      errorLength: 'errorlengthString',\n    };\n  }\n\n  updateData = (value, name) => {\n    if (name === 'firstName') { this.setState({ firstName: value }); }\n    if (name === 'lastName') { this.setState({ lastName: value }); }\n    if (name === 'email') { this.setState({ email: value }); }\n    if (name === 'address') { this.setState({ address: value }); }\n    if (name === 'passwordNew') { this.setState({ password: value }); }\n    if (name === 'passwordNewRepeat') { this.setState({ passwordNewRepeat: value }); }\n    if (name === 'phone') { this.setState({ phoneNumber: formatPhoneNumber(value) }); }\n  }\n\n  updatePhone = () => this.setState({ phoneNumber: '+375' });\n\n  render() {\n    const {\n      firstName, lastName, email, phoneNumber, address, password,\n      ClassPasswordNewInput, ClassPasswordNewSymbol, passwordNewRepeat,\n      ClassPasswordRepeatInput, ClassPasswordRepeatSymbol, errorLength,\n    } = this.state;\n    const {\n      onEnter, onLogin, history, onEnterEmail,\n    } = this.props;\n\n    function handleButtonClick() {\n      if ((firstName && lastName && email && passwordNewRepeat && phoneNumber && address)\n       && (password === passwordNewRepeat) && (password.length >= 9)) {\n        processResultRegistration(firstName, lastName, email, history, password, phoneNumber,\n          address, postUsers, setClassErrorById, onEnter, onLogin,\n          executeFunctionsIfNoErrorsLoginRegistration);\n      } else {\n        setErrorNotNullGroupsRegistration(firstName, lastName,\n          email, errorLength, phoneNumber, address, password,\n          ClassPasswordNewInput, ClassPasswordNewSymbol,\n          passwordNewRepeat, ClassPasswordRepeatInput, ClassPasswordRepeatSymbol);\n      }\n    }\n    return (\n      <>\n        <ConnectedHeader linkItem={<button type=\"button\" className=\"buttonBack\">Главная</button>} link=\"/main-page\" disabled={false} />\n        <div className=\"registration-wrap\">\n          <h2> Регистрация </h2>\n          <form className=\"registration\">\n            {inputRegistrationArray.map((input) => (\n              <div className={input.name} key={input.name}>\n                <p className={input.classNameOfString} key={input.classNameOfString}>\n                  {input.nameOfString}\n                </p>\n                <InputWitchCkeckingNotNull\n                  key={input.className}\n                  initialValue={setInitialValue(input.name, firstName, lastName, email,\n                    phoneNumber, address, password, passwordNewRepeat)}\n                  type={input.type}\n                  name={input.name}\n                  classInput={input.className}\n                  classSymbol={input.classNameSymbol}\n                  updateData={this.updateData}\n                  removeErrorNotNull={input.removeErrorNotNull ? removeErrorNotNull : ''}\n                  removeErrorLength={input.removeErrorLength ? removeErrorLength : ''}\n                  classerrorLength={input.classerrorLength ? errorLength : ''}\n                  minLength={input.minLength ? '13' : ''}\n                  maxLength={input.maxLength ? '13' : ''}\n                  placeholder={input.placeholder ? '+375 (__) ___-__-__' : ''}\n                  updatePhone={input.onFocus ? this.updatePhone : ''}\n                  onEnterEmail={input.onEnterEmail ? onEnterEmail : ''}\n                  classNameOfString={input.classNameOfString}\n                  nameOfString={input.nameOfString}\n                />\n                {input.name === 'passwordNew' && <p className={`${errorLength} -disabled`}>Пароль должен быть не менее 9 символов</p>}\n              </div>\n            ))}\n            <p className=\"existingUserString -disabled\" id=\"existingUser\">Пользователь с таким email уже существует</p>\n            <ButtonLogin\n              className=\"registrationButton\"\n              handleButtonClick={handleButtonClick}\n              onLogin=\"\"\n              onEnterEmail=\"\"\n              clientLogin=\"\"\n            >\n              Зарегестрироваться\n            </ButtonLogin>\n          </form>\n        </div>\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default withRouter(Registration);\n"]},"metadata":{},"sourceType":"module"}
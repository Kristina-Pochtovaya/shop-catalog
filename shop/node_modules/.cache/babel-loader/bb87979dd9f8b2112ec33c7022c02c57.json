{"ast":null,"code":"var _jsxFileName = \"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/common/loginForm/components/LoginComponent.jsx\";\nimport React from 'react';\nimport InputWitchCkeckingNotNull from '../../input/components/InputWitchCkeckingNotNullComponent';\nimport removeErrorNotNull from '../../untils/removeErrorNotNull';\nimport processResultLoginForgetPassword from '../../untils/processResultLoginForgetPassword';\nimport ButtonLogin from '../../button/components/ButtonLoginComponent';\nimport setErrorNotNullGroupsLogin from '../utils/setErrorNotNullGroupsLogin';\nimport buttonLoginArray from '../constants/buttonLoginArray';\nimport inputLoginArray from '../constants/inputLoginArray';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateId = value => this.setState({\n      id: value\n    });\n\n    this.setInitialValue = (name, initialValue) => {\n      const {\n        clientLogin,\n        clientPassword\n      } = this.props;\n\n      if (name === 'clientLogin') {\n        const result = clientLogin;\n      }\n    };\n\n    this.handleButtonClick = () => {\n      const {\n        clientLogin,\n        clientPassword\n      } = this.state;\n      const {\n        onLogin,\n        onEnter,\n        history,\n        onAdd,\n        onEnterEmail\n      } = this.props;\n      clientLogin && clientPassword ? processResultLoginForgetPassword(onEnter, onLogin, history, onAdd, onEnterEmail, clientLogin, clientPassword, this.updateId) : setErrorNotNullGroupsLogin(clientLogin, clientPassword);\n    };\n\n    this.link = () => {\n      const {\n        history\n      } = this.props;\n      history.push('/registration');\n    };\n\n    this.updateData = (value, name) => {\n      if (name === 'clientLogin') {\n        this.setState({\n          clientLogin: value\n        });\n      }\n\n      if (name === 'clientPassword') {\n        this.setState({\n          clientPassword: value\n        });\n      }\n    };\n\n    this.state = {\n      id: '',\n      clientLogin: '',\n      clientLoginSymbol: 'errorSymbol',\n      clientPassword: '',\n      clientPasswordSymbol: 'errorSymbolPassword'\n    };\n  }\n\n  render() {\n    const {\n      clientLogin,\n      clientLoginSymbol,\n      clientPassword,\n      clientPasswordSymbol,\n      id\n    } = this.state;\n    const {\n      onLogin,\n      onEnterEmail\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"incorrectLoginOrPassword\",\n        className: \"userNotFoundBlock -disabled\",\n        children: \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F \\u0441 \\u0442\\u0430\\u043A\\u0438\\u043C email \\u043D\\u0435 \\u0441\\u0443\\u0449\\u0435\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442 \\u0438\\u043B\\u0438 \\u043D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), inputLoginArray.map(input => /*#__PURE__*/_jsxDEV(InputWitchCkeckingNotNull, {\n        initialValue: input.name === 'clientLogin' ? clientLogin : clientPassword,\n        type: input.type,\n        name: input.name,\n        classInput: input.className,\n        classSymbol: input.classNameSymbol,\n        updateData: this.updateData,\n        removeErrorNotNull: removeErrorNotNull\n      }, input.className, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)), buttonLoginArray.map(button => /*#__PURE__*/_jsxDEV(ButtonLogin, {\n        className: button.className,\n        handleButtonClick: button.handleButtonClick ? this.handleButtonClick : '',\n        onEnterEmail: button.onEnterEmail ? onEnterEmail : '',\n        onLogin: button.onLogin ? onLogin : '',\n        link: button.link ? this.link : '',\n        clientLogin: button.clientLogin ? clientLogin : '',\n        id: id,\n        children: button.text\n      }, button.className, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/common/loginForm/components/LoginComponent.jsx"],"names":["React","InputWitchCkeckingNotNull","removeErrorNotNull","processResultLoginForgetPassword","ButtonLogin","setErrorNotNullGroupsLogin","buttonLoginArray","inputLoginArray","Login","Component","constructor","props","updateId","value","setState","id","setInitialValue","name","initialValue","clientLogin","clientPassword","result","handleButtonClick","state","onLogin","onEnter","history","onAdd","onEnterEmail","link","push","updateData","clientLoginSymbol","clientPasswordSymbol","render","map","input","type","className","classNameSymbol","button","text"],"mappings":"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","sourcesContent":["import React from 'react';\nimport InputWitchCkeckingNotNull from '../../input/components/InputWitchCkeckingNotNullComponent';\nimport removeErrorNotNull from '../../untils/removeErrorNotNull';\nimport processResultLoginForgetPassword from '../../untils/processResultLoginForgetPassword';\nimport ButtonLogin from '../../button/components/ButtonLoginComponent';\nimport setErrorNotNullGroupsLogin from '../utils/setErrorNotNullGroupsLogin';\nimport buttonLoginArray from '../constants/buttonLoginArray';\nimport inputLoginArray from '../constants/inputLoginArray';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      clientLogin: '',\n      clientLoginSymbol: 'errorSymbol',\n      clientPassword: '',\n      clientPasswordSymbol: 'errorSymbolPassword',\n    };\n  }\n\n  updateId = (value) => this.setState({ id: value });\n\n  setInitialValue = (name, initialValue) => {\n    const { clientLogin, clientPassword } = this.props;\n    if (name === 'clientLogin') { const result = clientLogin; }\n  }\n\n  handleButtonClick = () => {\n    const { clientLogin, clientPassword } = this.state;\n    const {\n      onLogin, onEnter, history, onAdd, onEnterEmail,\n    } = this.props;\n    (clientLogin && clientPassword)\n      ? processResultLoginForgetPassword(\n        onEnter, onLogin, history, onAdd, onEnterEmail, clientLogin, clientPassword, this.updateId,\n      ) : setErrorNotNullGroupsLogin(clientLogin, clientPassword);\n  };\n\n  link = () => {\n    const { history } = this.props;\n    history.push('/registration');\n  };\n\n  updateData = (value, name) => {\n    if (name === 'clientLogin') { this.setState({ clientLogin: value }); }\n    if (name === 'clientPassword') { this.setState({ clientPassword: value }); }\n  }\n\n  render() {\n    const {\n      clientLogin, clientLoginSymbol, clientPassword, clientPasswordSymbol, id,\n    } = this.state;\n    const { onLogin, onEnterEmail } = this.props;\n\n    return (\n      <form className=\"form\">\n        <p id=\"incorrectLoginOrPassword\" className=\"userNotFoundBlock -disabled\">Пользователя с таким email не существует или неверный пароль</p>\n        {inputLoginArray.map((input) => (\n          <InputWitchCkeckingNotNull\n            key={input.className}\n            initialValue={input.name === 'clientLogin' ? clientLogin : clientPassword}\n            type={input.type}\n            name={input.name}\n            classInput={input.className}\n            classSymbol={input.classNameSymbol}\n            updateData={this.updateData}\n            removeErrorNotNull={removeErrorNotNull}\n          />\n        ))}\n        {buttonLoginArray.map((button) => (\n          <ButtonLogin\n            key={button.className}\n            className={button.className}\n            handleButtonClick={button.handleButtonClick ? this.handleButtonClick : ''}\n            onEnterEmail={button.onEnterEmail ? onEnterEmail : ''}\n            onLogin={button.onLogin ? onLogin : ''}\n            link={button.link ? this.link : ''}\n            clientLogin={button.clientLogin ? clientLogin : ''}\n            id={id}\n          >\n            {button.text}\n          </ButtonLogin>\n        ))}\n      </form>\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}
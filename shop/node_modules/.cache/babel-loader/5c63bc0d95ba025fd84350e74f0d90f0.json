{"ast":null,"code":"var _jsxFileName = \"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/personalAccount/components/PhotoComponent.jsx\";\nimport React from 'react';\nimport getUserPhoto from '../api/get/getUserPhotoRequest';\nimport FormAddImagePhoto from '../../../common/forms/components/FormAddImagePhotoComponent';\nimport ImagePhoto from '../../../common/image/components/ImagePhotoComponent';\nimport setPhoto from '../utils/setPhoto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ImageUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateImage = value => this.setState({\n      imagePreviewUrl: value\n    });\n\n    this.handleSubmit = e => this.e.preventDefault();\n\n    this.handleImageChange = e => {\n      const {\n        pages\n      } = this.props;\n      e.preventDefault();\n      const reader = new FileReader();\n      const file = e.target.files[0];\n\n      if (file) {\n        setPhoto(reader, pages, this.updateImage, file);\n      }\n    };\n\n    this.updateData = value => {\n      this.setState({\n        imagePreviewUrl: value\n      });\n    };\n\n    this.state = {\n      imagePreviewUrl: ''\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      pages\n    } = this.props;\n    await getUserPhoto(pages.loginPersonalAccountReducer.clientEmail, this.updateData);\n  }\n\n  render() {\n    const {\n      imagePreviewUrl\n    } = this.state;\n    let $imagePreview = null;\n\n    if (imagePreviewUrl) {\n      $imagePreview = /*#__PURE__*/_jsxDEV(ImagePhoto, {\n        className: \"photoPersonalAccount\",\n        imagePreviewUrl: imagePreviewUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this);\n    } else {\n      $imagePreview = /*#__PURE__*/_jsxDEV(ImagePhoto, {\n        className: \"photoPersonalAccountEmpty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"previewComponent\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errorPhoto -disabled\",\n        id: \"errorPhoto\",\n        children: \"\\u0420\\u0430\\u0437\\u043C\\u0435\\u0440 \\u0444\\u043E\\u0442\\u043E \\u0441\\u043B\\u0438\\u0448\\u043A\\u043E\\u043C \\u0431\\u043E\\u043B\\u044C\\u0448\\u043E\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormAddImagePhoto, {\n        handleSubmit: this.handleSubmit,\n        imagePreview: $imagePreview,\n        handleImageChange: this.handleImageChange,\n        htmlFor: \"avatar\",\n        name: \"avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ImageUpload;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/personalAccount/components/PhotoComponent.jsx"],"names":["React","getUserPhoto","FormAddImagePhoto","ImagePhoto","setPhoto","ImageUpload","Component","constructor","props","updateImage","value","setState","imagePreviewUrl","handleSubmit","e","preventDefault","handleImageChange","pages","reader","FileReader","file","target","files","updateData","state","componentDidMount","loginPersonalAccountReducer","clientEmail","render","$imagePreview"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,iBAAP,MAA8B,6DAA9B;AACA,OAAOC,UAAP,MAAuB,sDAAvB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;AAEA,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAanBC,WAbmB,GAaJC,KAAD,IAAW,KAAKC,QAAL,CAAc;AAAEC,MAAAA,eAAe,EAAEF;AAAnB,KAAd,CAbN;;AAAA,SAenBG,YAfmB,GAeHC,CAAD,IAAO,KAAKA,CAAL,CAAOC,cAAP,EAfH;;AAAA,SAiBnBC,iBAjBmB,GAiBCF,CAAD,IAAO;AACxB,YAAM;AAAEG,QAAAA;AAAF,UAAY,KAAKT,KAAvB;AACAM,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMG,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACA,YAAMC,IAAI,GAAGN,CAAC,CAACO,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;;AACA,UAAIF,IAAJ,EAAU;AACRhB,QAAAA,QAAQ,CAACc,MAAD,EAASD,KAAT,EAAgB,KAAKR,WAArB,EAAkCW,IAAlC,CAAR;AACD;AACF,KAzBkB;;AAAA,SA2BnBG,UA3BmB,GA2BLb,KAAD,IAAW;AAAE,WAAKC,QAAL,CAAc;AAAEC,QAAAA,eAAe,EAAEF;AAAnB,OAAd;AAA4C,KA3BnD;;AAEjB,SAAKc,KAAL,GAAa;AACXZ,MAAAA,eAAe,EAAE;AADN,KAAb;AAGD;;AAEsB,QAAjBa,iBAAiB,GAAG;AACxB,UAAM;AAAER,MAAAA;AAAF,QAAY,KAAKT,KAAvB;AACA,UAAMP,YAAY,CAACgB,KAAK,CAACS,2BAAN,CAAkCC,WAAnC,EAChB,KAAKJ,UADW,CAAlB;AAED;;AAkBDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEhB,MAAAA;AAAF,QAAsB,KAAKY,KAAjC;AACA,QAAIK,aAAa,GAAG,IAApB;;AAEA,QAAIjB,eAAJ,EAAqB;AACnBiB,MAAAA,aAAa,gBACX,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC,sBAAtB;AAA6C,QAAA,eAAe,EAAEjB;AAA9D;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,KAJD,MAIO;AACLiB,MAAAA,aAAa,gBACX,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;;AACD,wBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,sBAAb;AAAoC,QAAA,EAAE,EAAC,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,iBAAD;AACE,QAAA,YAAY,EAAE,KAAKhB,YADrB;AAEE,QAAA,YAAY,EAAEgB,aAFhB;AAGE,QAAA,iBAAiB,EAAE,KAAKb,iBAH1B;AAIE,QAAA,OAAO,EAAC,QAJV;AAKE,QAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAvDuC;;AA0D1C,eAAeX,WAAf","sourcesContent":["import React from 'react';\nimport getUserPhoto from '../api/get/getUserPhotoRequest';\nimport FormAddImagePhoto from '../../../common/forms/components/FormAddImagePhotoComponent';\nimport ImagePhoto from '../../../common/image/components/ImagePhotoComponent';\nimport setPhoto from '../utils/setPhoto';\n\nclass ImageUpload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imagePreviewUrl: '',\n    };\n  }\n\n  async componentDidMount() {\n    const { pages } = this.props;\n    await getUserPhoto(pages.loginPersonalAccountReducer.clientEmail,\n      this.updateData);\n  }\n\n  updateImage = (value) => this.setState({ imagePreviewUrl: value })\n\n  handleSubmit = (e) => this.e.preventDefault();\n\n  handleImageChange= (e) => {\n    const { pages } = this.props;\n    e.preventDefault();\n    const reader = new FileReader();\n    const file = e.target.files[0];\n    if (file) {\n      setPhoto(reader, pages, this.updateImage, file);\n    }\n  }\n\n  updateData = (value) => { this.setState({ imagePreviewUrl: value }); }\n\n  render() {\n    const { imagePreviewUrl } = this.state;\n    let $imagePreview = null;\n\n    if (imagePreviewUrl) {\n      $imagePreview = (\n        <ImagePhoto className=\"photoPersonalAccount\" imagePreviewUrl={imagePreviewUrl} />\n      );\n    } else {\n      $imagePreview = (\n        <ImagePhoto className=\"photoPersonalAccountEmpty\" />\n      );\n    }\n    return (\n      <div className=\"previewComponent\">\n        <p className=\"errorPhoto -disabled\" id=\"errorPhoto\">Размер фото слишком большой</p>\n        <FormAddImagePhoto\n          handleSubmit={this.handleSubmit}\n          imagePreview={$imagePreview}\n          handleImageChange={this.handleImageChange}\n          htmlFor=\"avatar\"\n          name=\"avatar\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default ImageUpload;\n"]},"metadata":{},"sourceType":"module"}
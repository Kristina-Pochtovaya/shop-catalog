{"ast":null,"code":"var _jsxFileName = \"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/personalAccount/components/AuthorizedPersonalAccountRowsComponent.jsx\";\nimport React from 'react';\nimport buttonAuthorizedPageArray from '../constants/buttonAuthorizedPageArray';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthorizedPersonalAccountRows = ({\n  setIsPersonalInformationVisible,\n  history\n}) => {\n  const handleButtonOnClick = className => {\n    if (className === 'orderHistoryRow') {\n      history.push('./orders-history');\n    }\n\n    if (className === 'currentOrderRow') {\n      history.push('./basket');\n    }\n\n    if (className === 'personalDataRow') {\n      setIsPersonalInformationVisible(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-row\",\n    children: buttonAuthorizedPageArray.map(button => button.type === 'row' && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: button.className,\n      type: \"button\",\n      onClick: () => handleButtonOnClick(button.className),\n      children: [button.svg, /*#__PURE__*/_jsxDEV(\"p\", {\n        className: button.classNameString,\n        children: button.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, button.className, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AuthorizedPersonalAccountRows;\nexport default AuthorizedPersonalAccountRows;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthorizedPersonalAccountRows\");","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/personalAccount/components/AuthorizedPersonalAccountRowsComponent.jsx"],"names":["React","buttonAuthorizedPageArray","AuthorizedPersonalAccountRows","setIsPersonalInformationVisible","history","handleButtonOnClick","className","push","map","button","type","svg","classNameString","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,yBAAP,MAAsC,wCAAtC;;;AAEA,MAAMC,6BAA6B,GAAG,CAAC;AAAEC,EAAAA,+BAAF;AAAmCC,EAAAA;AAAnC,CAAD,KAAkD;AACtF,QAAMC,mBAAmB,GAAIC,SAAD,IAAe;AACzC,QAAIA,SAAS,KAAK,iBAAlB,EAAqC;AAAEF,MAAAA,OAAO,CAACG,IAAR,CAAa,kBAAb;AAAmC;;AAC1E,QAAID,SAAS,KAAK,iBAAlB,EAAqC;AAAEF,MAAAA,OAAO,CAACG,IAAR,CAAa,UAAb;AAA2B;;AAClE,QAAID,SAAS,KAAK,iBAAlB,EAAqC;AAAEH,MAAAA,+BAA+B,CAAC,IAAD,CAA/B;AAAwC;AAChF,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACGF,yBAAyB,CAACO,GAA1B,CAA+BC,MAAD,IAC7BA,MAAM,CAACC,IAAP,KAAgB,KAAhB,iBAEF;AAEE,MAAA,SAAS,EAAED,MAAM,CAACH,SAFpB;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,OAAO,EAAE,MAAMD,mBAAmB,CAACI,MAAM,CAACH,SAAR,CAJpC;AAAA,iBAMGG,MAAM,CAACE,GANV,eAOE;AAAG,QAAA,SAAS,EAAEF,MAAM,CAACG,eAArB;AAAA,kBAAuCH,MAAM,CAACI;AAA9C;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA,OACOJ,MAAM,CAACH,SADd;AAAA;AAAA;AAAA;AAAA,YAHC;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAxBD;;KAAMJ,6B;AA0BN,eAAeA,6BAAf","sourcesContent":["import React from 'react';\nimport buttonAuthorizedPageArray from '../constants/buttonAuthorizedPageArray';\n\nconst AuthorizedPersonalAccountRows = ({ setIsPersonalInformationVisible, history }) => {\n  const handleButtonOnClick = (className) => {\n    if (className === 'orderHistoryRow') { history.push('./orders-history'); }\n    if (className === 'currentOrderRow') { history.push('./basket'); }\n    if (className === 'personalDataRow') { setIsPersonalInformationVisible(true); }\n  };\n\n  return (\n    <div className=\"admin-row\">\n      {buttonAuthorizedPageArray.map((button) => (\n        button.type === 'row'\n      && (\n      <button\n        key={button.className}\n        className={button.className}\n        type=\"button\"\n        onClick={() => handleButtonOnClick(button.className)}\n      >\n        {button.svg}\n        <p className={button.classNameString}>{button.text}</p>\n      </button>\n      )))}\n    </div>\n  );\n};\n\nexport default AuthorizedPersonalAccountRows;\n"]},"metadata":{},"sourceType":"module"}
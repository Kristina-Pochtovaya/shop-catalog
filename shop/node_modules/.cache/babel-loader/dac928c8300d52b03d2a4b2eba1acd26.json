{"ast":null,"code":"var _jsxFileName = \"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/editProducts/components/EditProductsPageColumnsComponent.jsx\";\nimport React from 'react';\nimport getProducts from '../api/get/getProducts';\nimport getCategories from '../../editCategory/api/get/getCategories';\nimport PopUpErrorLoading from '../../../common/popup/components/PopUpErrorLoadingComponent';\nimport IsEditActiveColumnsComponent from './IsEditActiveColumnsComponent';\nimport IsEditNotActiveColumnsComponent from './IsEditNotActiveColumnsComponent';\nimport postDeleteProduct from '../api/post/postDeleteProduct';\nimport postProducts from '../api/post/postProducts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass EditProductsPageColumns extends React.Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n\n    this.handleButtonOnSave = async product => {\n      const {\n        isUpdated,\n        productCategory,\n        productName,\n        productPrice,\n        productInStock\n      } = this.state;\n      const {\n        isProductsUpdated,\n        setIsProductsUpdated\n      } = this.props;\n      await postProducts(this.state);\n      this.updateData(true, isUpdated, productCategory, productName, productPrice, productInStock, product, category);\n      this.setState({\n        isUpdated: !isUpdated,\n        isEditActive: false,\n        isEditActiveId: product.id,\n        IsSaveButtonVisible: true,\n        IsEditButtonVisible: false\n      });\n      isProductsUpdated ? setIsProductsUpdated(false) : setIsProductsUpdated(true);\n    };\n\n    this.updateData = (save, isUpdated, productCategory, productName, productPrice, productInStock, product, category) => {\n      this.setState({\n        isUpdated: save ? !isUpdated : isUpdated,\n        isEditActive: !save,\n        IsSaveButtonVisible: !!save,\n        IsEditButtonVisible: !save,\n        productImage: product.image,\n        productCategory: save ? productCategory : category.category,\n        productName: save ? productName : product.description,\n        productPrice: save ? productPrice : product.price,\n        productInStock: save ? productInStock : product.inStock\n      });\n    };\n\n    this.setError = errorMessage => this.setState({\n      ErrorMessageProducts: errorMessage\n    });\n\n    this.setpopupSmthWentWrongActive = value => this.setState({\n      popupSmthWentWrongActive: value\n    });\n\n    this.setEditActive = value => this.setState({\n      isEditActive: value\n    });\n\n    this.updateImage = value => this.setState({\n      productImage: value\n    });\n\n    this.updateProductCategory = (value, array) => {\n      this.setState({\n        productCategory: value,\n        categoriesArray: array\n      });\n    };\n\n    this.updateProductName = value => this.setState({\n      productName: value\n    });\n\n    this.updateProductPrice = value => this.setState({\n      productPrice: value\n    });\n\n    this.updateProductInStock = value => this.setState({\n      productInStock: value\n    });\n\n    this.updateProducts = (value, valueIsLoading) => {\n      if (this._isMounted) {\n        this.setState({\n          productsArray: value,\n          isLoadingProducts: valueIsLoading\n        });\n      }\n    };\n\n    this.updateDataCategories = (value, valueIsLoading) => {\n      if (this._isMounted) {\n        this.setState({\n          categoriesArray: value.categories,\n          isLoadingCategories: valueIsLoading\n        });\n      }\n    };\n\n    this.updateAfterDelete = () => {\n      const {\n        isUpdated\n      } = this.state;\n      this.setState({\n        isUpdated: !isUpdated\n      });\n    };\n\n    this.state = {\n      productsArray: [],\n      isEditActive: false,\n      isEditActiveId: '',\n      isUpdated: false,\n      isLoadingProducts: false,\n      isLoadingCategories: false,\n      ErrorMessageProducts: '',\n      popupSmthWentWrongActive: true,\n      IsSaveButtonVisible: false,\n      IsEditButtonVisible: true,\n      productImage: '',\n      productCategory: '',\n      productName: '',\n      productPrice: '',\n      productInStock: 1,\n      categoriesArray: []\n    };\n  }\n\n  async componentDidMount() {\n    this._isMounted = true;\n    await getProducts(this.updateProducts, this.setError);\n    await getCategories(this.updateDataCategories);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const {\n      isUpdated\n    } = this.state;\n\n    if (prevState.isUpdated !== isUpdated) {\n      await getProducts(this.updateProducts, this.setError);\n      await getCategories(this.updateDataCategories);\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    const {\n      isEditActive,\n      isEditActiveId,\n      ErrorMessageProducts,\n      popupSmthWentWrongActive,\n      productsArray,\n      isLoadingProducts,\n      IsSaveButtonVisible,\n      IsEditButtonVisible,\n      isLoadingCategories,\n      isUpdated,\n      categoriesArray\n    } = this.state;\n    const {\n      isProductsUpdated,\n      setIsProductsUpdated\n    } = this.props;\n\n    if (!isLoadingProducts || !isLoadingCategories) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"-isLoading\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (ErrorMessageProducts) {\n      return /*#__PURE__*/_jsxDEV(PopUpErrorLoading, {\n        popupSmthWentWrongActive: popupSmthWentWrongActive,\n        setpopupSmthWentWrongActive: this.setpopupSmthWentWrongActive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: productsArray.products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"columns\",\n          children: [isEditActive && product.id === isEditActiveId ? /*#__PURE__*/_jsxDEV(IsEditActiveColumnsComponent, {\n            product: product,\n            categoriesArray: categoriesArray,\n            updateImage: this.updateImage,\n            updateProductCategory: this.updateProductCategory,\n            updateProductName: this.updateProductName,\n            updateProductPrice: this.updateProductPrice,\n            updateProductInStock: this.updateProductInStock\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(IsEditNotActiveColumnsComponent, {\n            product: product,\n            categoriesArray: categoriesArray\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnEdit\",\n            children: IsEditButtonVisible && isEditActive && product.id === isEditActiveId ? /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"editProductsButton\",\n              onClick: () => this.handleButtonOnSave(product),\n              children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this) : categoriesArray.map(category => product.categoryId === category.id && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"editProductsButton\",\n              onClick: () => {\n                this.setState({\n                  isEditActive: true,\n                  isEditActiveId: product.id,\n                  productImage: product.image,\n                  productCategory: category.category,\n                  productName: product.description,\n                  productPrice: product.price,\n                  productInStock: product.inStock,\n                  IsEditButtonVisible: true,\n                  IsSaveButtonVisible: false\n                });\n              },\n              children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n            }, product.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnDelete\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"deleteProductsButton\",\n              onClick: () => {\n                postDeleteProduct(product.id, setIsProductsUpdated, isProductsUpdated, this.updateAfterDelete);\n              },\n              children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this))\n    }, void 0, false);\n  }\n\n}\n\nexport default EditProductsPageColumns;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/editProducts/components/EditProductsPageColumnsComponent.jsx"],"names":["React","getProducts","getCategories","PopUpErrorLoading","IsEditActiveColumnsComponent","IsEditNotActiveColumnsComponent","postDeleteProduct","postProducts","EditProductsPageColumns","Component","constructor","props","_isMounted","handleButtonOnSave","product","isUpdated","productCategory","productName","productPrice","productInStock","state","isProductsUpdated","setIsProductsUpdated","updateData","category","setState","isEditActive","isEditActiveId","id","IsSaveButtonVisible","IsEditButtonVisible","save","productImage","image","description","price","inStock","setError","errorMessage","ErrorMessageProducts","setpopupSmthWentWrongActive","value","popupSmthWentWrongActive","setEditActive","updateImage","updateProductCategory","array","categoriesArray","updateProductName","updateProductPrice","updateProductInStock","updateProducts","valueIsLoading","productsArray","isLoadingProducts","updateDataCategories","categories","isLoadingCategories","updateAfterDelete","componentDidMount","componentDidUpdate","prevProps","prevState","componentWillUnmount","render","products","map","categoryId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport getProducts from '../api/get/getProducts';\nimport getCategories from '../../editCategory/api/get/getCategories';\nimport PopUpErrorLoading from '../../../common/popup/components/PopUpErrorLoadingComponent';\nimport IsEditActiveColumnsComponent from './IsEditActiveColumnsComponent';\nimport IsEditNotActiveColumnsComponent from './IsEditNotActiveColumnsComponent';\nimport postDeleteProduct from '../api/post/postDeleteProduct';\nimport postProducts from '../api/post/postProducts';\n\nclass EditProductsPageColumns extends React.Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      productsArray: [],\n      isEditActive: false,\n      isEditActiveId: '',\n      isUpdated: false,\n      isLoadingProducts: false,\n      isLoadingCategories: false,\n      ErrorMessageProducts: '',\n      popupSmthWentWrongActive: true,\n      IsSaveButtonVisible: false,\n      IsEditButtonVisible: true,\n      productImage: '',\n      productCategory: '',\n      productName: '',\n      productPrice: '',\n      productInStock: 1,\n      categoriesArray: [],\n    };\n  }\n\n  async componentDidMount() {\n    this._isMounted = true;\n    await getProducts(this.updateProducts, this.setError);\n    await getCategories(this.updateDataCategories);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const { isUpdated } = this.state;\n    if (prevState.isUpdated !== isUpdated) {\n      await getProducts(this.updateProducts, this.setError);\n      await getCategories(this.updateDataCategories);\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n   handleButtonOnSave = async (product) => {\n     const {\n       isUpdated, productCategory, productName, productPrice, productInStock,\n     } = this.state;\n     const { isProductsUpdated, setIsProductsUpdated } = this.props;\n     await postProducts(this.state);\n     this.updateData(true, isUpdated, productCategory, productName, productPrice, productInStock,\n       product, category);\n     this.setState({\n       isUpdated: !isUpdated,\n       isEditActive: false,\n       isEditActiveId: product.id,\n       IsSaveButtonVisible: true,\n       IsEditButtonVisible: false,\n     });\n     isProductsUpdated ? setIsProductsUpdated(false) : setIsProductsUpdated(true);\n   }\n\n  updateData = (save, isUpdated, productCategory, productName, productPrice, productInStock,\n    product, category) => {\n    this.setState({\n      isUpdated: save ? !isUpdated : isUpdated,\n      isEditActive: !save,\n      IsSaveButtonVisible: !!save,\n      IsEditButtonVisible: !save,\n      productImage: product.image,\n      productCategory: save ? productCategory : category.category,\n      productName: save ? productName : product.description,\n      productPrice: save ? productPrice : product.price,\n      productInStock: save ? productInStock : product.inStock,\n    });\n  }\n\n  setError = (errorMessage) => this.setState({ ErrorMessageProducts: errorMessage });\n\n  setpopupSmthWentWrongActive = (value) => this.setState({ popupSmthWentWrongActive: value });\n\n  setEditActive = (value) => this.setState({ isEditActive: value });\n\n  updateImage = (value) => this.setState({ productImage: value });\n\n  updateProductCategory = (value, array) => {\n    this.setState({ productCategory: value, categoriesArray: array });\n  }\n\n  updateProductName = (value) => this.setState({ productName: value });\n\n  updateProductPrice = (value) => this.setState({ productPrice: value });\n\n  updateProductInStock = (value) => this.setState({ productInStock: value });\n\n  updateProducts = (value, valueIsLoading) => {\n    if (this._isMounted) {\n      this.setState({\n        productsArray: value,\n        isLoadingProducts: valueIsLoading,\n      });\n    }\n  }\n\n  updateDataCategories = (value, valueIsLoading) => {\n    if (this._isMounted) {\n      this.setState({\n        categoriesArray: value.categories,\n        isLoadingCategories: valueIsLoading,\n      });\n    }\n  }\n\n  updateAfterDelete = () => {\n    const { isUpdated } = this.state;\n    this.setState({ isUpdated: !isUpdated });\n  }\n\n  render() {\n    const {\n      isEditActive, isEditActiveId, ErrorMessageProducts, popupSmthWentWrongActive,\n      productsArray, isLoadingProducts, IsSaveButtonVisible, IsEditButtonVisible,\n      isLoadingCategories, isUpdated, categoriesArray,\n    } = this.state;\n    const { isProductsUpdated, setIsProductsUpdated } = this.props;\n    if (!isLoadingProducts || !isLoadingCategories) {\n      return <div className=\"-isLoading\"> </div>;\n    }\n    if (ErrorMessageProducts) {\n      return (\n        <PopUpErrorLoading\n          popupSmthWentWrongActive={popupSmthWentWrongActive}\n          setpopupSmthWentWrongActive={this.setpopupSmthWentWrongActive}\n        />\n      );\n    }\n    return (\n      <>\n        {productsArray.products.map((product) => (\n          <li key={product.id}>\n            <div className=\"columns\">\n              {isEditActive && product.id === isEditActiveId\n                ? (\n                  <IsEditActiveColumnsComponent\n                    product={product}\n                    categoriesArray={categoriesArray}\n                    updateImage={this.updateImage}\n                    updateProductCategory={this.updateProductCategory}\n                    updateProductName={this.updateProductName}\n                    updateProductPrice={this.updateProductPrice}\n                    updateProductInStock={this.updateProductInStock}\n                  />\n                ) : (\n                  <IsEditNotActiveColumnsComponent\n                    product={product}\n                    categoriesArray={categoriesArray}\n                  />\n                )}\n              <div className=\"columnEdit\">\n                {IsEditButtonVisible && isEditActive && product.id === isEditActiveId ? (\n                  <button\n                    type=\"button\"\n                    className=\"editProductsButton\"\n                    onClick={() => this.handleButtonOnSave(product)}\n                  >\n                    Сохранить\n                  </button>\n                ) : (\n                  categoriesArray.map((category) => (\n                    product.categoryId === category.id\n                    && (\n                    <button\n                      key={product.id}\n                      type=\"button\"\n                      className=\"editProductsButton\"\n                      onClick={() => {\n                        this.setState({\n                          isEditActive: true,\n                          isEditActiveId: product.id,\n                          productImage: product.image,\n                          productCategory: category.category,\n                          productName: product.description,\n                          productPrice: product.price,\n                          productInStock: product.inStock,\n                          IsEditButtonVisible: true,\n                          IsSaveButtonVisible: false,\n                        });\n                      }}\n                    >\n                      Изменить\n                    </button>\n                    )))\n                )}\n              </div>\n              <div className=\"columnDelete\">\n                <button\n                  type=\"button\"\n                  className=\"deleteProductsButton\"\n                  onClick={() => {\n                    postDeleteProduct(product.id, setIsProductsUpdated,\n                      isProductsUpdated, this.updateAfterDelete);\n                  }}\n                >\n                  Удалить\n                </button>\n              </div>\n            </div>\n          </li>\n        ))}\n      </>\n    );\n  }\n}\n\nexport default EditProductsPageColumns;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/* const processResultChangePassword = async (\n  clientEmail, passwordNew, passwordNewRepeat, history, setClassIncorrectUser,\n  postChangePasswordRequest,\n) => {\n  const result = await postChangePasswordRequest(clientEmail, passwordNew, passwordNewRepeat);\n  if (result === true) {\n    history.push('/main-page');\n  } if (result === 'incorrectUserOrPassword') {\n    setClassIncorrectUser('notRealUser', 'userNotFoundBlock');\n  }\n};\n\nexport default processResultChangePassword;\n */\nconst processResultChangePassword = async (clientEmail, passwordNew, passwordNewRepeat, history, setClassIncorrectUser, result) => {\n  /*  const result = await postChangePasswordRequest(clientEmail, passwordNew, passwordNewRepeat); */\n  if (result === true) {\n    history.push('/main-page');\n  }\n\n  if (result === 'incorrectUserOrPassword') {\n    setClassIncorrectUser('notRealUser', 'userNotFoundBlock');\n  }\n};\n\nexport default processResultChangePassword;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/changePassword/utils/processResultChangePassword.jsx"],"names":["processResultChangePassword","clientEmail","passwordNew","passwordNewRepeat","history","setClassIncorrectUser","result","push"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,2BAA2B,GAAG,OAClCC,WADkC,EACrBC,WADqB,EACRC,iBADQ,EACWC,OADX,EACoBC,qBADpB,EAElCC,MAFkC,KAG/B;AACH;AACA,MAAIA,MAAM,KAAK,IAAf,EAAqB;AACnBF,IAAAA,OAAO,CAACG,IAAR,CAAa,YAAb;AACD;;AAAC,MAAID,MAAM,KAAK,yBAAf,EAA0C;AAC1CD,IAAAA,qBAAqB,CAAC,aAAD,EAAgB,mBAAhB,CAArB;AACD;AACF,CAVD;;AAYA,eAAeL,2BAAf","sourcesContent":["/* const processResultChangePassword = async (\n  clientEmail, passwordNew, passwordNewRepeat, history, setClassIncorrectUser,\n  postChangePasswordRequest,\n) => {\n  const result = await postChangePasswordRequest(clientEmail, passwordNew, passwordNewRepeat);\n  if (result === true) {\n    history.push('/main-page');\n  } if (result === 'incorrectUserOrPassword') {\n    setClassIncorrectUser('notRealUser', 'userNotFoundBlock');\n  }\n};\n\nexport default processResultChangePassword;\n */\n\nconst processResultChangePassword = async (\n  clientEmail, passwordNew, passwordNewRepeat, history, setClassIncorrectUser,\n  result,\n) => {\n  /*  const result = await postChangePasswordRequest(clientEmail, passwordNew, passwordNewRepeat); */\n  if (result === true) {\n    history.push('/main-page');\n  } if (result === 'incorrectUserOrPassword') {\n    setClassIncorrectUser('notRealUser', 'userNotFoundBlock');\n  }\n};\n\nexport default processResultChangePassword;\n"]},"metadata":{},"sourceType":"module"}
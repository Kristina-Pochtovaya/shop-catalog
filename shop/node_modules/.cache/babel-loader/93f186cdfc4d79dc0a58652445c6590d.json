{"ast":null,"code":"var _jsxFileName = \"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/common/loginForm/components/LoginComponent.jsx\";\nimport React from 'react';\nimport InputWitchCkeckingNotNull from '../../input/components/InputWitchCkeckingNotNullComponent';\nimport removeErrorNotNull from '../../untils/removeErrorNotNull';\nimport processResultLoginForgetPassword from '../../untils/processResultLoginForgetPassword';\nimport ButtonLogin from '../../button/components/ButtonLoginComponent';\nimport setErrorNotNullGroupsLogin from '../../untils/setErrorNotNullGroupsLogin';\nimport buttonLoginArray from '../constants/buttonLoginArray';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateData = (value, name) => {\n      if (name === 'clientLogin') {\n        this.setState({\n          clientLogin: value\n        });\n      }\n\n      if (name === 'clientPassword') {\n        this.setState({\n          clientPassword: value\n        });\n      }\n    };\n\n    this.handleButtonClick = () => {\n      const updateId = value => this.setState({\n        id: value\n      });\n\n      const {\n        clientLogin,\n        clientLoginInput,\n        clientLoginSymbol,\n        clientPassword,\n        clientPasswordInput,\n        clientPasswordSymbol,\n        id\n      } = this.state;\n      const {\n        onLogin,\n        onEnter,\n        history,\n        onAdd,\n        onEnterEmail\n      } = this.props;\n      clientLogin && clientPassword ? processResultLoginForgetPassword(onEnter, onLogin, history, id, onAdd, onEnterEmail, clientLogin, clientPassword, this.updateId) : setErrorNotNullGroupsLogin(clientLogin, clientLoginInput, clientLoginSymbol, clientPassword, clientPasswordInput, clientPasswordSymbol);\n    };\n\n    this.link = () => {\n      const {\n        history\n      } = this.props;\n      history.push('/registration');\n    };\n\n    this.state = {\n      id: '',\n      clientLogin: '',\n      clientLoginInput: 'loginInput',\n      clientLoginSymbol: 'errorSymbol',\n      clientPassword: '',\n      clientPasswordInput: 'passwordInput',\n      clientPasswordSymbol: 'errorSymbolPassword'\n    };\n  }\n\n  render() {\n    const {\n      clientLogin,\n      clientLoginInput,\n      clientLoginSymbol,\n      clientPassword,\n      clientPasswordInput,\n      clientPasswordSymbol\n    } = this.state;\n    const {\n      onLogin,\n      onEnterEmail\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"incorrectLoginOrPassword\",\n        className: \"userNotFoundBlock -disabled\",\n        children: \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F \\u0441 \\u0442\\u0430\\u043A\\u0438\\u043C email \\u043D\\u0435 \\u0441\\u0443\\u0449\\u0435\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442 \\u0438\\u043B\\u0438 \\u043D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loginString -required\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputWitchCkeckingNotNull, {\n          initialValue: clientLogin,\n          type: \"email\",\n          name: \"clientLogin\",\n          classInput: clientLoginInput,\n          classSymbol: clientLoginSymbol,\n          updateData: this.updateData,\n          removeErrorNotNull: removeErrorNotNull\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"passwordString -required\",\n          children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputWitchCkeckingNotNull, {\n          initialValue: clientPassword,\n          type: \"password\",\n          name: \"clientPassword\",\n          classInput: clientPasswordInput,\n          classSymbol: clientPasswordSymbol,\n          updateData: this.updateData,\n          removeErrorNotNull: removeErrorNotNull\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), buttonLoginArray.map(button => /*#__PURE__*/_jsxDEV(ButtonLogin, {\n        className: button.className,\n        handleButtonClick: button.handleButtonClick ? this.handleButtonClick : '',\n        onLogin: button.onLogin ? onLogin : '',\n        onEnterEmail: button.onEnterEmail ? onEnterEmail : '',\n        clientLogin: button.clientLogin ? clientLogin : '',\n        link: button.link ? this.link : '',\n        children: button.text\n      }, button.className, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/common/loginForm/components/LoginComponent.jsx"],"names":["React","InputWitchCkeckingNotNull","removeErrorNotNull","processResultLoginForgetPassword","ButtonLogin","setErrorNotNullGroupsLogin","buttonLoginArray","Login","Component","constructor","props","updateData","value","name","setState","clientLogin","clientPassword","handleButtonClick","updateId","id","clientLoginInput","clientLoginSymbol","clientPasswordInput","clientPasswordSymbol","state","onLogin","onEnter","history","onAdd","onEnterEmail","link","push","render","map","button","className","text"],"mappings":"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","sourcesContent":["import React from 'react';\nimport InputWitchCkeckingNotNull from '../../input/components/InputWitchCkeckingNotNullComponent';\nimport removeErrorNotNull from '../../untils/removeErrorNotNull';\nimport processResultLoginForgetPassword from '../../untils/processResultLoginForgetPassword';\nimport ButtonLogin from '../../button/components/ButtonLoginComponent';\nimport setErrorNotNullGroupsLogin from '../../untils/setErrorNotNullGroupsLogin';\nimport buttonLoginArray from '../constants/buttonLoginArray';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      clientLogin: '',\n      clientLoginInput: 'loginInput',\n      clientLoginSymbol: 'errorSymbol',\n      clientPassword: '',\n      clientPasswordInput: 'passwordInput',\n      clientPasswordSymbol: 'errorSymbolPassword',\n    };\n  }\n\n  updateData = (value, name) => {\n    if (name === 'clientLogin') { this.setState({ clientLogin: value }); }\n    if (name === 'clientPassword') { this.setState({ clientPassword: value }); }\n  }\n\n   handleButtonClick = () => {\n     const updateId = (value) => this.setState({ id: value });\n     const {\n       clientLogin, clientLoginInput, clientLoginSymbol,\n       clientPassword, clientPasswordInput, clientPasswordSymbol, id,\n     } = this.state;\n     const {\n       onLogin, onEnter, history, onAdd, onEnterEmail,\n     } = this.props;\n     clientLogin && clientPassword\n       ? processResultLoginForgetPassword(\n         onEnter, onLogin, history, id, onAdd, onEnterEmail, clientLogin, clientPassword,\n         this.updateId,\n       )\n       : setErrorNotNullGroupsLogin(clientLogin, clientLoginInput, clientLoginSymbol,\n         clientPassword, clientPasswordInput, clientPasswordSymbol);\n   }\n\n  link = () => {\n    const { history } = this.props;\n    history.push('/registration');\n  };\n\n  render() {\n    const {\n      clientLogin, clientLoginInput, clientLoginSymbol,\n      clientPassword, clientPasswordInput, clientPasswordSymbol,\n    } = this.state;\n\n    const { onLogin, onEnterEmail } = this.props;\n    return (\n      <form className=\"form\">\n        <p id=\"incorrectLoginOrPassword\" className=\"userNotFoundBlock -disabled\">Пользователя с таким email не существует или неверный пароль</p>\n        <div className=\"login\">\n          <p className=\"loginString -required\">Email:</p>\n          <InputWitchCkeckingNotNull\n            initialValue={clientLogin}\n            type=\"email\"\n            name=\"clientLogin\"\n            classInput={clientLoginInput}\n            classSymbol={clientLoginSymbol}\n            updateData={this.updateData}\n            removeErrorNotNull={removeErrorNotNull}\n          />\n        </div>\n        <div className=\"password\">\n          <p className=\"passwordString -required\">Пароль:</p>\n          <InputWitchCkeckingNotNull\n            initialValue={clientPassword}\n            type=\"password\"\n            name=\"clientPassword\"\n            classInput={clientPasswordInput}\n            classSymbol={clientPasswordSymbol}\n            updateData={this.updateData}\n            removeErrorNotNull={removeErrorNotNull}\n          />\n        </div>\n        { buttonLoginArray.map((button) => (\n          <ButtonLogin\n            key={button.className}\n            className={button.className}\n            handleButtonClick={button.handleButtonClick ? this.handleButtonClick : ''}\n            onLogin={button.onLogin ? onLogin : ''}\n            onEnterEmail={button.onEnterEmail ? onEnterEmail : ''}\n            clientLogin={button.clientLogin ? clientLogin : ''}\n            link={button.link ? this.link : ''}\n          >\n            {button.text}\n          </ButtonLogin>\n        ))}\n      </form>\n\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}
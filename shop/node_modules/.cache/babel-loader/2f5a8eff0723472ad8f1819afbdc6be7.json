{"ast":null,"code":"var _jsxFileName = \"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/editProducts/components/EditProductsPageColumnsComponent.jsx\";\nimport React from 'react';\nimport getProducts from '../api/get/getProducts';\nimport setImg from '../../../common/untils/setImg';\nimport InputEditProductsCategory from './InputEditProductsCategoryComponent';\nimport InputEditProductsInStock from './InputEditProductsInStockComponent';\nimport InputEditProductsName from './InputEditProductsNameComponent';\nimport InputEditProductsPrice from './InputEditCategoryPriceComponent';\nimport PopUp from '../../../common/popup/components/PopUpComponent';\nimport PopUpSomethingWentWrong from '../../../common/popup/components/PopUpSomethingWentWrongComponent';\nimport EditProductsImage from './EditProductsImageComponent';\nimport postDeleteProduct from '../api/post/postDeleteProduct';\nimport postProductsImage from '../api/post/postProductsImage';\nimport postProductsCategory from '../api/post/postProductsCategory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass EditProductsPageColumns extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      productsArray: [],\n      isEditActive: false,\n      isEditActiveId: '',\n      isUpdated: false,\n      isLoadingProducts: false,\n      ErrorMessageProducts: '',\n      popupSmthWentWrongActive: true,\n      IsSaveButtonVisible: false,\n      IsEditButtonVisible: true,\n      productImage: '',\n      productCategory: '',\n      categoriesArray: []\n    };\n    this.updateProducts = this.updateProducts.bind(this);\n    this.setError = this.setError.bind(this);\n    this.setpopupSmthWentWrongActive = this.setpopupSmthWentWrongActive.bind(this);\n    this.setEditActive = this.setEditActive.bind(this);\n    this.updateImage = this.updateImage.bind(this);\n    this.updateProductCategory = this.updateProductCategory.bind(this);\n  }\n\n  async componentDidMount() {\n    await getProducts(this.updateProducts, this.setError);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const {\n      isEditActive\n    } = this.state;\n\n    if (prevState.isEditActive !== isEditActive) {\n      await getProducts(this.updateProducts, this.setError);\n    }\n  }\n\n  async handleButtonOnClick(e) {\n    const {\n      isEditActiveId,\n      productImage,\n      productCategory,\n      categoriesArray,\n      isUpdated\n    } = this.state;\n    const {\n      isProductsUpdated,\n      setIsProductsUpdated\n    } = this.props;\n    await postProductsImage(isEditActiveId, productImage);\n    await postProductsCategory(isEditActiveId, productCategory, categoriesArray);\n    this.setState({\n      isUpdated: true\n    });\n    isProductsUpdated ? setIsProductsUpdated(false) : setIsProductsUpdated(true);\n    console.log(productCategory, categoriesArray);\n  }\n\n  setError(errorMessage) {\n    this.setState({\n      ErrorMessageProducts: errorMessage\n    });\n  }\n\n  setpopupSmthWentWrongActive(value) {\n    this.setState({\n      popupSmthWentWrongActive: value\n    });\n  }\n\n  setEditActive(value) {\n    this.setState({\n      isEditActive: value\n    });\n  }\n\n  updateImage(value) {\n    this.setState({\n      productImage: value\n    });\n  }\n\n  updateProductCategory(value, array) {\n    this.setState({\n      productCategory: value,\n      categoriesArray: array\n    });\n  }\n\n  updateProducts(value, valueIsLoading) {\n    this.setState({\n      productsArray: value,\n      isLoadingProducts: valueIsLoading\n    });\n  }\n\n  render() {\n    const {\n      isEditActive,\n      isEditActiveId,\n      ErrorMessageProducts,\n      popupSmthWentWrongActive,\n      productsArray,\n      isLoadingProducts,\n      IsSaveButtonVisible,\n      IsEditButtonVisible\n    } = this.state;\n    const {\n      isProductsUpdated,\n      setIsProductsUpdated\n    } = this.props;\n\n    if (!isLoadingProducts) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"-isLoading\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (ErrorMessageProducts) {\n      return /*#__PURE__*/_jsxDEV(PopUp, {\n        active: popupSmthWentWrongActive,\n        setActive: this.setpopupSmthWentWrongActive,\n        children: /*#__PURE__*/_jsxDEV(PopUpSomethingWentWrong, {\n          text: \"\\u041F\\u043E\\u043F\\u0440\\u043E\\u0431\\u0443\\u0439\\u0442\\u0435 \\u0435\\u0449\\u0435 \\u0440\\u0430\\u0437\",\n          setpopupSmthWentWrongActive: this.setpopupSmthWentWrongActive\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: productsArray.products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"columns\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnImage\",\n            children: (isEditActive && product.id) !== isEditActiveId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: product.image ? /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"imageProducts\",\n                src: product.image,\n                alt: product.imgAlt,\n                title: product.imgTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 27\n              }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                src: setImg(product.description),\n                alt: product.imgAlt,\n                title: product.imgTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 27\n              }, this)\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(EditProductsImage, {\n              id: product.id,\n              description: product.description,\n              updateImage: this.updateImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnCategory\",\n            children: isEditActive && product.id === isEditActiveId ? /*#__PURE__*/_jsxDEV(InputEditProductsCategory, {\n              category: product.category,\n              categoryId: product.categoryId,\n              updateProductCategory: this.updateProductCategory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: product.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnName\",\n            children: isEditActive && product.id === isEditActiveId ? /*#__PURE__*/_jsxDEV(InputEditProductsName, {\n              id: product.id,\n              description: product.description,\n              setEditActive: this.setEditActive,\n              setIsProductsUpdated: setIsProductsUpdated,\n              isProductsUpdated: isProductsUpdated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: product.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnPrice\",\n            children: isEditActive && product.id === isEditActiveId ? /*#__PURE__*/_jsxDEV(InputEditProductsPrice, {\n              id: product.id,\n              price: product.price,\n              setEditActive: this.setEditActive,\n              setIsProductsUpdated: setIsProductsUpdated,\n              isProductsUpdated: isProductsUpdated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: product.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnInStock\",\n            children: isEditActive && product.id === isEditActiveId ? /*#__PURE__*/_jsxDEV(InputEditProductsInStock, {\n              id: product.id,\n              inStock: product.inStock,\n              setEditActive: this.setEditActive,\n              setIsProductsUpdated: setIsProductsUpdated,\n              isProductsUpdated: isProductsUpdated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"inStockString\",\n              children: Number(product.inStock) === 1 ? 'да' : 'нет'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnEdit\",\n            children: IsEditButtonVisible && isEditActive && product.id === isEditActiveId ? /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"editProductsButton\",\n              onClick: () => {\n                this.setState({\n                  isEditActive: false,\n                  isEditActiveId: product.id,\n                  IsSaveButtonVisible: true,\n                  IsEditButtonVisible: false\n                });\n                this.handleButtonOnClick();\n              },\n              children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"editProductsButton\",\n              onClick: () => {\n                this.setState({\n                  isEditActive: true,\n                  isEditActiveId: product.id,\n                  IsEditButtonVisible: true,\n                  IsSaveButtonVisible: false\n                });\n                isProductsUpdated ? setIsProductsUpdated(false) : setIsProductsUpdated(true);\n              },\n              children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnDelete\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"deleteProductsButton\",\n              onClick: () => {\n                this.setState({\n                  isEditActive: true,\n                  isEditActiveId: product.id\n                });\n                postDeleteProduct(product.id, setIsProductsUpdated, isProductsUpdated);\n              },\n              children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this))\n    }, void 0, false);\n  }\n\n}\n\nexport default EditProductsPageColumns;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/editProducts/components/EditProductsPageColumnsComponent.jsx"],"names":["React","getProducts","setImg","InputEditProductsCategory","InputEditProductsInStock","InputEditProductsName","InputEditProductsPrice","PopUp","PopUpSomethingWentWrong","EditProductsImage","postDeleteProduct","postProductsImage","postProductsCategory","EditProductsPageColumns","Component","constructor","props","state","productsArray","isEditActive","isEditActiveId","isUpdated","isLoadingProducts","ErrorMessageProducts","popupSmthWentWrongActive","IsSaveButtonVisible","IsEditButtonVisible","productImage","productCategory","categoriesArray","updateProducts","bind","setError","setpopupSmthWentWrongActive","setEditActive","updateImage","updateProductCategory","componentDidMount","componentDidUpdate","prevProps","prevState","handleButtonOnClick","e","isProductsUpdated","setIsProductsUpdated","setState","console","log","errorMessage","value","array","valueIsLoading","render","products","map","product","id","image","imgAlt","imgTitle","description","category","categoryId","price","inStock","Number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,yBAAP,MAAsC,sCAAtC;AACA,OAAOC,wBAAP,MAAqC,qCAArC;AACA,OAAOC,qBAAP,MAAkC,kCAAlC;AACA,OAAOC,sBAAP,MAAmC,mCAAnC;AACA,OAAOC,KAAP,MAAkB,iDAAlB;AACA,OAAOC,uBAAP,MAAoC,mEAApC;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;AACA,OAAOC,oBAAP,MAAiC,kCAAjC;;;;AAEA,MAAMC,uBAAN,SAAsCb,KAAK,CAACc,SAA5C,CAAsD;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,EADJ;AAEXC,MAAAA,YAAY,EAAE,KAFH;AAGXC,MAAAA,cAAc,EAAE,EAHL;AAIXC,MAAAA,SAAS,EAAE,KAJA;AAKXC,MAAAA,iBAAiB,EAAE,KALR;AAMXC,MAAAA,oBAAoB,EAAE,EANX;AAOXC,MAAAA,wBAAwB,EAAE,IAPf;AAQXC,MAAAA,mBAAmB,EAAE,KARV;AASXC,MAAAA,mBAAmB,EAAE,IATV;AAUXC,MAAAA,YAAY,EAAE,EAVH;AAWXC,MAAAA,eAAe,EAAE,EAXN;AAYXC,MAAAA,eAAe,EAAE;AAZN,KAAb;AAcA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKE,2BAAL,GAAmC,KAAKA,2BAAL,CAAiCF,IAAjC,CAAsC,IAAtC,CAAnC;AACA,SAAKG,aAAL,GAAqB,KAAKA,aAAL,CAAmBH,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKI,WAAL,GAAmB,KAAKA,WAAL,CAAiBJ,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKK,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BL,IAA3B,CAAgC,IAAhC,CAA7B;AACD;;AAEsB,QAAjBM,iBAAiB,GAAG;AACxB,UAAMpC,WAAW,CAAC,KAAK6B,cAAN,EAAsB,KAAKE,QAA3B,CAAjB;AACD;;AAEuB,QAAlBM,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAC7C,UAAM;AAAErB,MAAAA;AAAF,QAAmB,KAAKF,KAA9B;;AACA,QAAIuB,SAAS,CAACrB,YAAV,KAA2BA,YAA/B,EAA6C;AAC3C,YAAMlB,WAAW,CAAC,KAAK6B,cAAN,EAAsB,KAAKE,QAA3B,CAAjB;AACD;AACF;;AAEwB,QAAnBS,mBAAmB,CAACC,CAAD,EAAI;AAC3B,UAAM;AACJtB,MAAAA,cADI;AACYO,MAAAA,YADZ;AAC0BC,MAAAA,eAD1B;AAC2CC,MAAAA,eAD3C;AAC4DR,MAAAA;AAD5D,QAEF,KAAKJ,KAFT;AAGA,UAAM;AAAE0B,MAAAA,iBAAF;AAAqBC,MAAAA;AAArB,QAA8C,KAAK5B,KAAzD;AACA,UAAML,iBAAiB,CAACS,cAAD,EAAiBO,YAAjB,CAAvB;AACA,UAAMf,oBAAoB,CAACQ,cAAD,EAAiBQ,eAAjB,EAAkCC,eAAlC,CAA1B;AACA,SAAKgB,QAAL,CAAc;AACZxB,MAAAA,SAAS,EAAE;AADC,KAAd;AAGAsB,IAAAA,iBAAiB,GACbC,oBAAoB,CAAC,KAAD,CADP,GAEbA,oBAAoB,CAAC,IAAD,CAFxB;AAGAE,IAAAA,OAAO,CAACC,GAAR,CAAYnB,eAAZ,EAA6BC,eAA7B;AACD;;AAEDG,EAAAA,QAAQ,CAACgB,YAAD,EAAe;AACrB,SAAKH,QAAL,CAAc;AACZtB,MAAAA,oBAAoB,EAAEyB;AADV,KAAd;AAGD;;AAEDf,EAAAA,2BAA2B,CAACgB,KAAD,EAAQ;AACjC,SAAKJ,QAAL,CAAc;AACZrB,MAAAA,wBAAwB,EAAEyB;AADd,KAAd;AAGD;;AAEDf,EAAAA,aAAa,CAACe,KAAD,EAAQ;AACnB,SAAKJ,QAAL,CAAc;AACZ1B,MAAAA,YAAY,EAAE8B;AADF,KAAd;AAGD;;AAEDd,EAAAA,WAAW,CAACc,KAAD,EAAQ;AACjB,SAAKJ,QAAL,CAAc;AACZlB,MAAAA,YAAY,EAAEsB;AADF,KAAd;AAGD;;AAEDb,EAAAA,qBAAqB,CAACa,KAAD,EAAQC,KAAR,EAAe;AAClC,SAAKL,QAAL,CAAc;AACZjB,MAAAA,eAAe,EAAEqB,KADL;AAEZpB,MAAAA,eAAe,EAAEqB;AAFL,KAAd;AAID;;AAEDpB,EAAAA,cAAc,CAACmB,KAAD,EAAQE,cAAR,EAAwB;AACpC,SAAKN,QAAL,CAAc;AACZ3B,MAAAA,aAAa,EAAE+B,KADH;AAEZ3B,MAAAA,iBAAiB,EAAE6B;AAFP,KAAd;AAID;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AACJjC,MAAAA,YADI;AACUC,MAAAA,cADV;AAC0BG,MAAAA,oBAD1B;AACgDC,MAAAA,wBADhD;AAEJN,MAAAA,aAFI;AAEWI,MAAAA,iBAFX;AAE8BG,MAAAA,mBAF9B;AAEmDC,MAAAA;AAFnD,QAGF,KAAKT,KAHT;AAKA,UAAM;AAAE0B,MAAAA,iBAAF;AAAqBC,MAAAA;AAArB,QAA8C,KAAK5B,KAAzD;;AACA,QAAI,CAACM,iBAAL,EAAwB;AACtB,0BAAO;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,QAAIC,oBAAJ,EAA0B;AACxB,0BACE,QAAC,KAAD;AACE,QAAA,MAAM,EAAEC,wBADV;AAEE,QAAA,SAAS,EAAE,KAAKS,2BAFlB;AAAA,+BAIE,QAAC,uBAAD;AACE,UAAA,IAAI,EAAC,oGADP;AAEE,UAAA,2BAA2B,EAAE,KAAKA;AAFpC;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,cADF;AAWD;;AACD,wBACE;AAAA,gBACGf,aAAa,CAACmC,QAAd,CAAuBC,GAAvB,CAA4BC,OAAD,iBAC1B;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,sBACG,CAACpC,YAAY,IAAIoC,OAAO,CAACC,EAAzB,MAAiCpC,cAAjC,gBAEG;AAAA,wBACGmC,OAAO,CAACE,KAAR,gBAEG;AACE,gBAAA,SAAS,EAAC,eADZ;AAEE,gBAAA,GAAG,EAAEF,OAAO,CAACE,KAFf;AAGE,gBAAA,GAAG,EAAEF,OAAO,CAACG,MAHf;AAIE,gBAAA,KAAK,EAAEH,OAAO,CAACI;AAJjB;AAAA;AAAA;AAAA;AAAA,sBAFH,gBASG;AACE,gBAAA,GAAG,EAAEzD,MAAM,CAACqD,OAAO,CAACK,WAAT,CADb;AAEE,gBAAA,GAAG,EAAEL,OAAO,CAACG,MAFf;AAGE,gBAAA,KAAK,EAAEH,OAAO,CAACI;AAHjB;AAAA;AAAA;AAAA;AAAA;AAVN,6BAFH,gBAoBG,QAAC,iBAAD;AACE,cAAA,EAAE,EAAEJ,OAAO,CAACC,EADd;AAEE,cAAA,WAAW,EAAED,OAAO,CAACK,WAFvB;AAGE,cAAA,WAAW,EAAE,KAAKzB;AAHpB;AAAA;AAAA;AAAA;AAAA;AArBN;AAAA;AAAA;AAAA;AAAA,kBADF,eA6BE;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,sBACGhB,YAAY,IAAIoC,OAAO,CAACC,EAAR,KAAepC,cAA/B,gBAEG,QAAC,yBAAD;AACE,cAAA,QAAQ,EAAEmC,OAAO,CAACM,QADpB;AAEE,cAAA,UAAU,EAAEN,OAAO,CAACO,UAFtB;AAGE,cAAA,qBAAqB,EAAE,KAAK1B;AAH9B;AAAA;AAAA;AAAA;AAAA,oBAFH,gBAQG;AAAA,wBAAImB,OAAO,CAACM;AAAZ;AAAA;AAAA;AAAA;AAAA;AATN;AAAA;AAAA;AAAA;AAAA,kBA7BF,eAyCE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,sBACG1C,YAAY,IAAIoC,OAAO,CAACC,EAAR,KAAepC,cAA/B,gBAEG,QAAC,qBAAD;AACE,cAAA,EAAE,EAAEmC,OAAO,CAACC,EADd;AAEE,cAAA,WAAW,EAAED,OAAO,CAACK,WAFvB;AAGE,cAAA,aAAa,EAAE,KAAK1B,aAHtB;AAIE,cAAA,oBAAoB,EAAEU,oBAJxB;AAKE,cAAA,iBAAiB,EAAED;AALrB;AAAA;AAAA;AAAA;AAAA,oBAFH,gBAUG;AAAA,wBAAIY,OAAO,CAACK;AAAZ;AAAA;AAAA;AAAA;AAAA;AAXN;AAAA;AAAA;AAAA;AAAA,kBAzCF,eAuDE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,sBACGzC,YAAY,IAAIoC,OAAO,CAACC,EAAR,KAAepC,cAA/B,gBAEG,QAAC,sBAAD;AACE,cAAA,EAAE,EAAEmC,OAAO,CAACC,EADd;AAEE,cAAA,KAAK,EAAED,OAAO,CAACQ,KAFjB;AAGE,cAAA,aAAa,EAAE,KAAK7B,aAHtB;AAIE,cAAA,oBAAoB,EAAEU,oBAJxB;AAKE,cAAA,iBAAiB,EAAED;AALrB;AAAA;AAAA;AAAA;AAAA,oBAFH,gBAUG;AAAA,wBAAIY,OAAO,CAACQ;AAAZ;AAAA;AAAA;AAAA;AAAA;AAXN;AAAA;AAAA;AAAA;AAAA,kBAvDF,eAqEE;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,sBACG5C,YAAY,IAAIoC,OAAO,CAACC,EAAR,KAAepC,cAA/B,gBAEG,QAAC,wBAAD;AACE,cAAA,EAAE,EAAEmC,OAAO,CAACC,EADd;AAEE,cAAA,OAAO,EAAED,OAAO,CAACS,OAFnB;AAGE,cAAA,aAAa,EAAE,KAAK9B,aAHtB;AAIE,cAAA,oBAAoB,EAAEU,oBAJxB;AAKE,cAAA,iBAAiB,EAAED;AALrB;AAAA;AAAA;AAAA;AAAA,oBAFH,gBAUG;AAAG,cAAA,SAAS,EAAC,eAAb;AAAA,wBAA8BsB,MAAM,CAACV,OAAO,CAACS,OAAT,CAAN,KAA4B,CAA5B,GAAgC,IAAhC,GAAuC;AAArE;AAAA;AAAA;AAAA;AAAA;AAXN;AAAA;AAAA;AAAA;AAAA,kBArEF,eAmFE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,sBACGtC,mBAAmB,IAAIP,YAAvB,IAAuCoC,OAAO,CAACC,EAAR,KAAepC,cAAtD,gBACC;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,SAAS,EAAC,oBAFZ;AAGE,cAAA,OAAO,EAAE,MAAM;AACb,qBAAKyB,QAAL,CAAc;AACZ1B,kBAAAA,YAAY,EAAE,KADF;AAEZC,kBAAAA,cAAc,EAAEmC,OAAO,CAACC,EAFZ;AAGZ/B,kBAAAA,mBAAmB,EAAE,IAHT;AAIZC,kBAAAA,mBAAmB,EAAE;AAJT,iBAAd;AAMA,qBAAKe,mBAAL;AACD,eAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,gBAkBG;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,SAAS,EAAC,oBAFZ;AAGE,cAAA,OAAO,EAAE,MAAM;AACb,qBAAKI,QAAL,CAAc;AACZ1B,kBAAAA,YAAY,EAAE,IADF;AAEZC,kBAAAA,cAAc,EAAEmC,OAAO,CAACC,EAFZ;AAGZ9B,kBAAAA,mBAAmB,EAAE,IAHT;AAIZD,kBAAAA,mBAAmB,EAAE;AAJT,iBAAd;AAMAkB,gBAAAA,iBAAiB,GACbC,oBAAoB,CAAC,KAAD,CADP,GAEbA,oBAAoB,CAAC,IAAD,CAFxB;AAGD,eAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBN;AAAA;AAAA;AAAA;AAAA,kBAnFF,eA2HE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,mCACE;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,SAAS,EAAC,sBAFZ;AAGE,cAAA,OAAO,EAAE,MAAM;AACb,qBAAKC,QAAL,CAAc;AACZ1B,kBAAAA,YAAY,EAAE,IADF;AAEZC,kBAAAA,cAAc,EAAEmC,OAAO,CAACC;AAFZ,iBAAd;AAIA9C,gBAAAA,iBAAiB,CAAC6C,OAAO,CAACC,EAAT,EAAaZ,oBAAb,EACfD,iBADe,CAAjB;AAED,eAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA3HF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAASY,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA,cADD;AADH,qBADF;AAoJD;;AArQmD;;AAwQtD,eAAe3C,uBAAf","sourcesContent":["import React from 'react';\nimport getProducts from '../api/get/getProducts';\nimport setImg from '../../../common/untils/setImg';\nimport InputEditProductsCategory from './InputEditProductsCategoryComponent';\nimport InputEditProductsInStock from './InputEditProductsInStockComponent';\nimport InputEditProductsName from './InputEditProductsNameComponent';\nimport InputEditProductsPrice from './InputEditCategoryPriceComponent';\nimport PopUp from '../../../common/popup/components/PopUpComponent';\nimport PopUpSomethingWentWrong from '../../../common/popup/components/PopUpSomethingWentWrongComponent';\nimport EditProductsImage from './EditProductsImageComponent';\nimport postDeleteProduct from '../api/post/postDeleteProduct';\nimport postProductsImage from '../api/post/postProductsImage';\nimport postProductsCategory from '../api/post/postProductsCategory';\n\nclass EditProductsPageColumns extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      productsArray: [],\n      isEditActive: false,\n      isEditActiveId: '',\n      isUpdated: false,\n      isLoadingProducts: false,\n      ErrorMessageProducts: '',\n      popupSmthWentWrongActive: true,\n      IsSaveButtonVisible: false,\n      IsEditButtonVisible: true,\n      productImage: '',\n      productCategory: '',\n      categoriesArray: [],\n    };\n    this.updateProducts = this.updateProducts.bind(this);\n    this.setError = this.setError.bind(this);\n    this.setpopupSmthWentWrongActive = this.setpopupSmthWentWrongActive.bind(this);\n    this.setEditActive = this.setEditActive.bind(this);\n    this.updateImage = this.updateImage.bind(this);\n    this.updateProductCategory = this.updateProductCategory.bind(this);\n  }\n\n  async componentDidMount() {\n    await getProducts(this.updateProducts, this.setError);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const { isEditActive } = this.state;\n    if (prevState.isEditActive !== isEditActive) {\n      await getProducts(this.updateProducts, this.setError);\n    }\n  }\n\n  async handleButtonOnClick(e) {\n    const {\n      isEditActiveId, productImage, productCategory, categoriesArray, isUpdated,\n    } = this.state;\n    const { isProductsUpdated, setIsProductsUpdated } = this.props;\n    await postProductsImage(isEditActiveId, productImage);\n    await postProductsCategory(isEditActiveId, productCategory, categoriesArray);\n    this.setState({\n      isUpdated: true,\n    });\n    isProductsUpdated\n      ? setIsProductsUpdated(false)\n      : setIsProductsUpdated(true);\n    console.log(productCategory, categoriesArray);\n  }\n\n  setError(errorMessage) {\n    this.setState({\n      ErrorMessageProducts: errorMessage,\n    });\n  }\n\n  setpopupSmthWentWrongActive(value) {\n    this.setState({\n      popupSmthWentWrongActive: value,\n    });\n  }\n\n  setEditActive(value) {\n    this.setState({\n      isEditActive: value,\n    });\n  }\n\n  updateImage(value) {\n    this.setState({\n      productImage: value,\n    });\n  }\n\n  updateProductCategory(value, array) {\n    this.setState({\n      productCategory: value,\n      categoriesArray: array,\n    });\n  }\n\n  updateProducts(value, valueIsLoading) {\n    this.setState({\n      productsArray: value,\n      isLoadingProducts: valueIsLoading,\n    });\n  }\n\n  render() {\n    const {\n      isEditActive, isEditActiveId, ErrorMessageProducts, popupSmthWentWrongActive,\n      productsArray, isLoadingProducts, IsSaveButtonVisible, IsEditButtonVisible,\n    } = this.state;\n\n    const { isProductsUpdated, setIsProductsUpdated } = this.props;\n    if (!isLoadingProducts) {\n      return <div className=\"-isLoading\"> </div>;\n    }\n    if (ErrorMessageProducts) {\n      return (\n        <PopUp\n          active={popupSmthWentWrongActive}\n          setActive={this.setpopupSmthWentWrongActive}\n        >\n          <PopUpSomethingWentWrong\n            text=\"Попробуйте еще раз\"\n            setpopupSmthWentWrongActive={this.setpopupSmthWentWrongActive}\n          />\n        </PopUp>\n      );\n    }\n    return (\n      <>\n        {productsArray.products.map((product) => (\n          <li key={product.id}>\n            <div className=\"columns\">\n              <div className=\"columnImage\">\n                {(isEditActive && product.id) !== isEditActiveId\n                  ? (\n                    <>\n                      {product.image\n                        ? (\n                          <img\n                            className=\"imageProducts\"\n                            src={product.image}\n                            alt={product.imgAlt}\n                            title={product.imgTitle}\n                          />\n                        ) : (\n                          <img\n                            src={setImg(product.description)}\n                            alt={product.imgAlt}\n                            title={product.imgTitle}\n                          />\n                        )}\n                    </>\n                  ) : (\n                    <EditProductsImage\n                      id={product.id}\n                      description={product.description}\n                      updateImage={this.updateImage}\n                    />\n                  )}\n              </div>\n              <div className=\"columnCategory\">\n                {isEditActive && product.id === isEditActiveId\n                  ? (\n                    <InputEditProductsCategory\n                      category={product.category}\n                      categoryId={product.categoryId}\n                      updateProductCategory={this.updateProductCategory}\n                    />\n                  )\n                  : <p>{product.category}</p>}\n              </div>\n\n              <div className=\"columnName\">\n                {isEditActive && product.id === isEditActiveId\n                  ? (\n                    <InputEditProductsName\n                      id={product.id}\n                      description={product.description}\n                      setEditActive={this.setEditActive}\n                      setIsProductsUpdated={setIsProductsUpdated}\n                      isProductsUpdated={isProductsUpdated}\n                    />\n                  )\n                  : <p>{product.description}</p>}\n              </div>\n\n              <div className=\"columnPrice\">\n                {isEditActive && product.id === isEditActiveId\n                  ? (\n                    <InputEditProductsPrice\n                      id={product.id}\n                      price={product.price}\n                      setEditActive={this.setEditActive}\n                      setIsProductsUpdated={setIsProductsUpdated}\n                      isProductsUpdated={isProductsUpdated}\n                    />\n                  )\n                  : <p>{product.price}</p>}\n              </div>\n\n              <div className=\"columnInStock\">\n                {isEditActive && product.id === isEditActiveId\n                  ? (\n                    <InputEditProductsInStock\n                      id={product.id}\n                      inStock={product.inStock}\n                      setEditActive={this.setEditActive}\n                      setIsProductsUpdated={setIsProductsUpdated}\n                      isProductsUpdated={isProductsUpdated}\n                    />\n                  )\n                  : <p className=\"inStockString\">{Number(product.inStock) === 1 ? 'да' : 'нет'}</p>}\n              </div>\n\n              <div className=\"columnEdit\">\n                {IsEditButtonVisible && isEditActive && product.id === isEditActiveId ? (\n                  <button\n                    type=\"button\"\n                    className=\"editProductsButton\"\n                    onClick={() => {\n                      this.setState({\n                        isEditActive: false,\n                        isEditActiveId: product.id,\n                        IsSaveButtonVisible: true,\n                        IsEditButtonVisible: false,\n                      });\n                      this.handleButtonOnClick();\n                    }}\n                  >\n                    Сохранить\n                  </button>\n                )\n                  : (\n                    <button\n                      type=\"button\"\n                      className=\"editProductsButton\"\n                      onClick={() => {\n                        this.setState({\n                          isEditActive: true,\n                          isEditActiveId: product.id,\n                          IsEditButtonVisible: true,\n                          IsSaveButtonVisible: false,\n                        });\n                        isProductsUpdated\n                          ? setIsProductsUpdated(false)\n                          : setIsProductsUpdated(true);\n                      }}\n                    >\n                      Изменить\n                    </button>\n                  )}\n\n              </div>\n\n              <div className=\"columnDelete\">\n                <button\n                  type=\"button\"\n                  className=\"deleteProductsButton\"\n                  onClick={() => {\n                    this.setState({\n                      isEditActive: true,\n                      isEditActiveId: product.id,\n                    });\n                    postDeleteProduct(product.id, setIsProductsUpdated,\n                      isProductsUpdated);\n                  }}\n                >\n                  Удалить\n                </button>\n              </div>\n            </div>\n          </li>\n        ))}\n      </>\n    );\n  }\n}\n\nexport default EditProductsPageColumns;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/editProducts/components/EditProductsPageColumnsComponent.jsx\";\nimport React from 'react';\nimport getProducts from '../api/get/getProducts';\nimport getCategories from '../../editCategory/api/get/getCategories';\nimport PopUpErrorLoading from '../../../common/popup/components/PopUpErrorLoadingComponent';\nimport IsEditActiveColumnsComponent from './IsEditActiveColumnsComponent';\nimport IsEditNotActiveColumnsComponent from './IsEditNotActiveColumnsComponent';\nimport processHandleButtonOnEdit from '../utils/processHandleButtonOnEdit';\nimport ButtonEditProducts from '../../../common/button/components/ButtonEditProductsComponent';\nimport ButtonDeleteCategoryProducts from '../../../common/button/components/ButtonDeleteCategoryProductsComponent';\nimport updateDataOnClick from '../utils/updateDataOnClick';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass EditProductsPageColumns extends React.Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n    this.setState = this.setState.bind(this);\n\n    this.handleButtonOnClick = async (product, category = false) => {\n      const {\n        isProductsUpdated,\n        setIsProductsUpdated\n      } = this.props;\n\n      if (!category) {\n        processHandleButtonOnEdit(this.setState, this.state, product, updateDataOnClick, isProductsUpdated, setIsProductsUpdated);\n      } else {\n        updateDataOnClick(this.setState, false, this.state, product, category);\n      }\n    };\n\n    this.updateData = (value, name) => {\n      if (name === 'setError') this.setState({\n        ErrorMessageProducts: value\n      });\n      if (name === 'sesetpopupSmthWentWrongActivetError') this.setState({\n        popupSmthWentWrongActive: value\n      });\n      if (name === 'setEditActive') this.setState({\n        isEditActive: value\n      });\n      if (name === 'updateImage') this.setState({\n        productImage: value\n      });\n      if (name === 'updateProductName') this.setState({\n        productName: value\n      });\n      if (name === 'updateProductPrice') this.setState({\n        productPrice: value\n      });\n      if (name === 'updateProductInStock') this.setState({\n        productInStock: value\n      });\n    };\n\n    this.setError = value => this.setState({\n      ErrorMessageProducts: value\n    });\n\n    this.setpopupSmthWentWrongActive = value => this.setState({\n      popupSmthWentWrongActive: value\n    });\n\n    this.setEditActive = value => this.setState({\n      isEditActive: value\n    });\n\n    this.updateProductCategory = (value, array) => {\n      this.setState({\n        productCategory: value,\n        categoriesArray: array\n      });\n    };\n\n    this.updateAfterDelete = () => {\n      const {\n        isUpdated\n      } = this.state;\n      this.setState({\n        isUpdated: !isUpdated\n      });\n    };\n\n    this.updateProducts = (value, valueIsLoading) => {\n      if (this._isMounted) {\n        this.setState({\n          productsArray: value,\n          isLoadingProducts: valueIsLoading\n        });\n      }\n    };\n\n    this.updateDataCategories = (value, valueIsLoading) => {\n      if (this._isMounted) {\n        this.setState({\n          categoriesArray: value.categories,\n          isLoadingCategories: valueIsLoading\n        });\n      }\n    };\n\n    this.state = {\n      productsArray: [],\n      isEditActive: false,\n      isEditActiveId: '',\n      isUpdated: false,\n      isLoadingProducts: false,\n      isLoadingCategories: false,\n      ErrorMessageProducts: '',\n      popupSmthWentWrongActive: true,\n      IsSaveButtonVisible: false,\n      IsEditButtonVisible: true,\n      productImage: '',\n      productCategory: '',\n      productName: '',\n      productPrice: '',\n      productInStock: 1,\n      categoriesArray: []\n    };\n  }\n\n  async componentDidMount() {\n    this._isMounted = true;\n    await getProducts(this.updateProducts, this.setError);\n    await getCategories(this.updateDataCategories);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const {\n      isUpdated\n    } = this.state;\n\n    if (prevState.isUpdated !== isUpdated) {\n      await getProducts(this.updateProducts, this.setError);\n      await getCategories(this.updateDataCategories);\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    const {\n      isEditActive,\n      isEditActiveId,\n      ErrorMessageProducts,\n      popupSmthWentWrongActive,\n      productsArray,\n      isLoadingProducts,\n      IsEditButtonVisible,\n      isLoadingCategories,\n      categoriesArray\n    } = this.state;\n    const {\n      isProductsUpdated,\n      setIsProductsUpdated\n    } = this.props;\n\n    if (!isLoadingProducts || !isLoadingCategories) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"-isLoading\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (ErrorMessageProducts) {\n      return /*#__PURE__*/_jsxDEV(PopUpErrorLoading, {\n        popupSmthWentWrongActive: popupSmthWentWrongActive,\n        setpopupSmthWentWrongActive: this.setpopupSmthWentWrongActive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: productsArray.products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"columns\",\n          children: [isEditActive && product.id === isEditActiveId ? /*#__PURE__*/_jsxDEV(IsEditActiveColumnsComponent, {\n            product: product,\n            categoriesArray: categoriesArray,\n            updateProductCategory: this.updateProductCategory,\n            updateData: this.updateData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(IsEditNotActiveColumnsComponent, {\n            product: product,\n            categoriesArray: categoriesArray\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 19\n          }, this), categoriesArray.map(category => product.categoryId === category.id && /*#__PURE__*/_jsxDEV(ButtonEditProducts, {\n            category: category,\n            product: product,\n            handleButtonOnClick: this.handleButtonOnClick,\n            IsEditButtonVisible: IsEditButtonVisible,\n            isEditActive: isEditActive,\n            isEditActiveId: isEditActiveId\n          }, product.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnDelete\",\n            children: /*#__PURE__*/_jsxDEV(ButtonDeleteCategoryProducts, {\n              item: product,\n              category: false,\n              updateAfterDelete: this.updateAfterDelete,\n              setIsProductsUpdated: setIsProductsUpdated,\n              isProductsUpdated: isProductsUpdated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this))\n    }, void 0, false);\n  }\n\n}\n\nexport default EditProductsPageColumns;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/editProducts/components/EditProductsPageColumnsComponent.jsx"],"names":["React","getProducts","getCategories","PopUpErrorLoading","IsEditActiveColumnsComponent","IsEditNotActiveColumnsComponent","processHandleButtonOnEdit","ButtonEditProducts","ButtonDeleteCategoryProducts","updateDataOnClick","EditProductsPageColumns","Component","constructor","props","_isMounted","setState","bind","handleButtonOnClick","product","category","isProductsUpdated","setIsProductsUpdated","state","updateData","value","name","ErrorMessageProducts","popupSmthWentWrongActive","isEditActive","productImage","productName","productPrice","productInStock","setError","setpopupSmthWentWrongActive","setEditActive","updateProductCategory","array","productCategory","categoriesArray","updateAfterDelete","isUpdated","updateProducts","valueIsLoading","productsArray","isLoadingProducts","updateDataCategories","categories","isLoadingCategories","isEditActiveId","IsSaveButtonVisible","IsEditButtonVisible","componentDidMount","componentDidUpdate","prevProps","prevState","componentWillUnmount","render","products","map","id","categoryId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport getProducts from '../api/get/getProducts';\nimport getCategories from '../../editCategory/api/get/getCategories';\nimport PopUpErrorLoading from '../../../common/popup/components/PopUpErrorLoadingComponent';\nimport IsEditActiveColumnsComponent from './IsEditActiveColumnsComponent';\nimport IsEditNotActiveColumnsComponent from './IsEditNotActiveColumnsComponent';\nimport processHandleButtonOnEdit from '../utils/processHandleButtonOnEdit';\nimport ButtonEditProducts from '../../../common/button/components/ButtonEditProductsComponent';\nimport ButtonDeleteCategoryProducts from '../../../common/button/components/ButtonDeleteCategoryProductsComponent';\nimport updateDataOnClick from '../utils/updateDataOnClick';\n\nclass EditProductsPageColumns extends React.Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      productsArray: [],\n      isEditActive: false,\n      isEditActiveId: '',\n      isUpdated: false,\n      isLoadingProducts: false,\n      isLoadingCategories: false,\n      ErrorMessageProducts: '',\n      popupSmthWentWrongActive: true,\n      IsSaveButtonVisible: false,\n      IsEditButtonVisible: true,\n      productImage: '',\n      productCategory: '',\n      productName: '',\n      productPrice: '',\n      productInStock: 1,\n      categoriesArray: [],\n    };\n  }\n\n  async componentDidMount() {\n    this._isMounted = true;\n    await getProducts(this.updateProducts, this.setError);\n    await getCategories(this.updateDataCategories);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const { isUpdated } = this.state;\n    if (prevState.isUpdated !== isUpdated) {\n      await getProducts(this.updateProducts, this.setError);\n      await getCategories(this.updateDataCategories);\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n setState = this.setState.bind(this)\n\n   handleButtonOnClick = async (product, category = false) => {\n     const { isProductsUpdated, setIsProductsUpdated } = this.props;\n     if (!category) {\n       processHandleButtonOnEdit(this.setState, this.state, product, updateDataOnClick,\n         isProductsUpdated, setIsProductsUpdated);\n     } else {\n       updateDataOnClick(this.setState, false, this.state, product, category);\n     }\n   }\n\n  updateData=(value, name) => {\n    if (name === 'setError') this.setState({ ErrorMessageProducts: value });\n    if (name === 'sesetpopupSmthWentWrongActivetError') this.setState({ popupSmthWentWrongActive: value });\n    if (name === 'setEditActive') this.setState({ isEditActive: value });\n    if (name === 'updateImage') this.setState({ productImage: value });\n    if (name === 'updateProductName') this.setState({ productName: value });\n    if (name === 'updateProductPrice') this.setState({ productPrice: value });\n    if (name === 'updateProductInStock') this.setState({ productInStock: value });\n  }\n\n  setError = (value) => this.setState({ ErrorMessageProducts: value });\n\n  setpopupSmthWentWrongActive = (value) => this.setState({ popupSmthWentWrongActive: value });\n\n  setEditActive = (value) => this.setState({ isEditActive: value });\n\n  updateProductCategory = (value, array) => {\n    this.setState({ productCategory: value, categoriesArray: array });\n  }\n\n  updateAfterDelete = () => {\n    const { isUpdated } = this.state;\n    this.setState({ isUpdated: !isUpdated });\n  }\n\n  updateProducts = (value, valueIsLoading) => {\n    if (this._isMounted) {\n      this.setState({\n        productsArray: value,\n        isLoadingProducts: valueIsLoading,\n      });\n    }\n  }\n\n  updateDataCategories = (value, valueIsLoading) => {\n    if (this._isMounted) {\n      this.setState({\n        categoriesArray: value.categories,\n        isLoadingCategories: valueIsLoading,\n      });\n    }\n  }\n\n  render() {\n    const {\n      isEditActive, isEditActiveId, ErrorMessageProducts, popupSmthWentWrongActive, productsArray,\n      isLoadingProducts, IsEditButtonVisible, isLoadingCategories, categoriesArray,\n    } = this.state;\n    const { isProductsUpdated, setIsProductsUpdated } = this.props;\n    if (!isLoadingProducts || !isLoadingCategories) {\n      return <div className=\"-isLoading\"> </div>;\n    }\n    if (ErrorMessageProducts) {\n      return (\n        <PopUpErrorLoading\n          popupSmthWentWrongActive={popupSmthWentWrongActive}\n          setpopupSmthWentWrongActive={this.setpopupSmthWentWrongActive}\n        />\n      );\n    }\n    return (\n      <>\n        {productsArray.products.map((product) => (\n          <li key={product.id}>\n            <div className=\"columns\">\n              {isEditActive && product.id === isEditActiveId\n                ? (\n                  <IsEditActiveColumnsComponent\n                    product={product}\n                    categoriesArray={categoriesArray}\n                    updateProductCategory={this.updateProductCategory}\n                    updateData={this.updateData}\n                  />\n                ) : (\n                  <IsEditNotActiveColumnsComponent\n                    product={product}\n                    categoriesArray={categoriesArray}\n                  />\n                )}\n              { categoriesArray.map((category) => (\n                product.categoryId === category.id && (\n                <ButtonEditProducts\n                  key={product.id}\n                  category={category}\n                  product={product}\n                  handleButtonOnClick={this.handleButtonOnClick}\n                  IsEditButtonVisible={IsEditButtonVisible}\n                  isEditActive={isEditActive}\n                  isEditActiveId={isEditActiveId}\n                />\n                )))}\n              <div className=\"columnDelete\">\n                <ButtonDeleteCategoryProducts\n                  item={product}\n                  category={false}\n                  updateAfterDelete={this.updateAfterDelete}\n                  setIsProductsUpdated={setIsProductsUpdated}\n                  isProductsUpdated={isProductsUpdated}\n                />\n              </div>\n            </div>\n          </li>\n        ))}\n      </>\n    );\n  }\n}\n\nexport default EditProductsPageColumns;\n"]},"metadata":{},"sourceType":"module"}
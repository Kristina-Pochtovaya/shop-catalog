{"ast":null,"code":"var _jsxFileName = \"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/personalAccount/components/PhotoComponent.jsx\";\nimport React from 'react';\nimport personalAccount from '../../../assets/personal-account/personal-account.jpg';\nimport postUserPhoto from '../api/post/postUserPhotoRequest';\nimport getUserPhoto from '../api/get/getUserPhotoRequest';\nimport setClassErrorById from '../../../common/untils/setClassErrorById';\nimport FormAddImagePhoto from '../../../common/forms/components/FormAddImagePhotoComponent';\nimport ImagePhoto from '../../../common/image/components/ImagePhotoComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ImageUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => this.e.preventDefault();\n\n    this.handleImageChange = e => {\n      const {\n        pages\n      } = this.props;\n      e.preventDefault();\n      const reader = new FileReader();\n      const file = e.target.files[0];\n\n      if (file) {\n        reader.onloadend = async () => {\n          this.setState({\n            imagePreviewUrl: reader.result\n          });\n          await postUserPhoto(pages.loginPersonalAccountReducer.clientEmail, reader.result, setClassErrorById);\n        };\n\n        reader.readAsDataURL(file);\n      }\n    };\n\n    this.updateData = value => {\n      this.setState({\n        imagePreviewUrl: value\n      });\n    };\n\n    this.state = {\n      imagePreviewUrl: ''\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      pages\n    } = this.props;\n    await getUserPhoto(pages.loginPersonalAccountReducer.clientEmail, this.updateData);\n  }\n\n  render() {\n    const {\n      imagePreviewUrl\n    } = this.state;\n    let $imagePreview = null;\n\n    if (imagePreviewUrl) {\n      $imagePreview = /*#__PURE__*/_jsxDEV(ImagePhoto, {\n        className: \"photoPersonalAccount\",\n        imagePreviewUrl: imagePreviewUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this);\n    } else {\n      $imagePreview = /*#__PURE__*/_jsxDEV(ImagePhoto, {\n        className: \"photoPersonalAccountEmpty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"previewComponent\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errorPhoto -disabled\",\n        id: \"errorPhoto\",\n        children: \"\\u0420\\u0430\\u0437\\u043C\\u0435\\u0440 \\u0444\\u043E\\u0442\\u043E \\u0441\\u043B\\u0438\\u0448\\u043A\\u043E\\u043C \\u0431\\u043E\\u043B\\u044C\\u0448\\u043E\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormAddImagePhoto, {\n        handleSubmit: this.handleSubmit,\n        imagePreview: $imagePreview,\n        handleImageChange: this.handleImageChange,\n        htmlFor: \"avatar\",\n        name: \"avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ImageUpload;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/personalAccount/components/PhotoComponent.jsx"],"names":["React","personalAccount","postUserPhoto","getUserPhoto","setClassErrorById","FormAddImagePhoto","ImagePhoto","ImageUpload","Component","constructor","props","handleSubmit","e","preventDefault","handleImageChange","pages","reader","FileReader","file","target","files","onloadend","setState","imagePreviewUrl","result","loginPersonalAccountReducer","clientEmail","readAsDataURL","updateData","value","state","componentDidMount","render","$imagePreview"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,uDAA5B;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,iBAAP,MAA8B,0CAA9B;AACA,OAAOC,iBAAP,MAA8B,6DAA9B;AACA,OAAOC,UAAP,MAAuB,sDAAvB;;;AAEA,MAAMC,WAAN,SAA0BP,KAAK,CAACQ,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAanBC,YAbmB,GAaHC,CAAD,IAAO,KAAKA,CAAL,CAAOC,cAAP,EAbH;;AAAA,SAenBC,iBAfmB,GAeCF,CAAD,IAAO;AACxB,YAAM;AAAEG,QAAAA;AAAF,UAAY,KAAKL,KAAvB;AACAE,MAAAA,CAAC,CAACC,cAAF;AAEA,YAAMG,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACA,YAAMC,IAAI,GAAGN,CAAC,CAACO,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;;AAEA,UAAIF,IAAJ,EAAU;AACRF,QAAAA,MAAM,CAACK,SAAP,GAAmB,YAAY;AAC7B,eAAKC,QAAL,CAAc;AACZC,YAAAA,eAAe,EAAEP,MAAM,CAACQ;AADZ,WAAd;AAGA,gBAAMtB,aAAa,CACjBa,KAAK,CAACU,2BAAN,CAAkCC,WADjB,EAEjBV,MAAM,CAACQ,MAFU,EAEFpB,iBAFE,CAAnB;AAID,SARD;;AAUAY,QAAAA,MAAM,CAACW,aAAP,CAAqBT,IAArB;AACD;AACF,KAnCkB;;AAAA,SAqCnBU,UArCmB,GAqCLC,KAAD,IAAW;AAAE,WAAKP,QAAL,CAAc;AAAEC,QAAAA,eAAe,EAAEM;AAAnB,OAAd;AAA4C,KArCnD;;AAEjB,SAAKC,KAAL,GAAa;AACXP,MAAAA,eAAe,EAAE;AADN,KAAb;AAGD;;AAEsB,QAAjBQ,iBAAiB,GAAG;AACxB,UAAM;AAAEhB,MAAAA;AAAF,QAAY,KAAKL,KAAvB;AACA,UAAMP,YAAY,CAACY,KAAK,CAACU,2BAAN,CAAkCC,WAAnC,EAChB,KAAKE,UADW,CAAlB;AAED;;AA4BDI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA;AAAF,QAAsB,KAAKO,KAAjC;AACA,QAAIG,aAAa,GAAG,IAApB;;AAEA,QAAIV,eAAJ,EAAqB;AACnBU,MAAAA,aAAa,gBACX,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC,sBAAtB;AAA6C,QAAA,eAAe,EAAEV;AAA9D;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,KAJD,MAIO;AACLU,MAAAA,aAAa,gBACX,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;;AACD,wBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,sBAAb;AAAoC,QAAA,EAAE,EAAC,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,iBAAD;AACE,QAAA,YAAY,EAAE,KAAKtB,YADrB;AAEE,QAAA,YAAY,EAAEsB,aAFhB;AAGE,QAAA,iBAAiB,EAAE,KAAKnB,iBAH1B;AAIE,QAAA,OAAO,EAAC,QAJV;AAKE,QAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAjEuC;;AAoE1C,eAAeP,WAAf","sourcesContent":["import React from 'react';\nimport personalAccount from '../../../assets/personal-account/personal-account.jpg';\nimport postUserPhoto from '../api/post/postUserPhotoRequest';\nimport getUserPhoto from '../api/get/getUserPhotoRequest';\nimport setClassErrorById from '../../../common/untils/setClassErrorById';\nimport FormAddImagePhoto from '../../../common/forms/components/FormAddImagePhotoComponent';\nimport ImagePhoto from '../../../common/image/components/ImagePhotoComponent';\n\nclass ImageUpload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imagePreviewUrl: '',\n    };\n  }\n\n  async componentDidMount() {\n    const { pages } = this.props;\n    await getUserPhoto(pages.loginPersonalAccountReducer.clientEmail,\n      this.updateData);\n  }\n\n  handleSubmit = (e) => this.e.preventDefault();\n\n  handleImageChange= (e) => {\n    const { pages } = this.props;\n    e.preventDefault();\n\n    const reader = new FileReader();\n    const file = e.target.files[0];\n\n    if (file) {\n      reader.onloadend = async () => {\n        this.setState({\n          imagePreviewUrl: reader.result,\n        });\n        await postUserPhoto(\n          pages.loginPersonalAccountReducer.clientEmail,\n          reader.result, setClassErrorById,\n        );\n      };\n\n      reader.readAsDataURL(file);\n    }\n  }\n\n  updateData = (value) => { this.setState({ imagePreviewUrl: value }); }\n\n  render() {\n    const { imagePreviewUrl } = this.state;\n    let $imagePreview = null;\n\n    if (imagePreviewUrl) {\n      $imagePreview = (\n        <ImagePhoto className=\"photoPersonalAccount\" imagePreviewUrl={imagePreviewUrl} />\n      );\n    } else {\n      $imagePreview = (\n        <ImagePhoto className=\"photoPersonalAccountEmpty\" />\n      );\n    }\n    return (\n      <div className=\"previewComponent\">\n        <p className=\"errorPhoto -disabled\" id=\"errorPhoto\">Размер фото слишком большой</p>\n        <FormAddImagePhoto\n          handleSubmit={this.handleSubmit}\n          imagePreview={$imagePreview}\n          handleImageChange={this.handleImageChange}\n          htmlFor=\"avatar\"\n          name=\"avatar\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default ImageUpload;\n"]},"metadata":{},"sourceType":"module"}
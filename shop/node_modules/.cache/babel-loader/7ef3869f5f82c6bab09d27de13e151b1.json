{"ast":null,"code":"import{connect}from'react-redux';import{ADDCLIENTINFORMATION}from'../../../redux/actions/catalogItemsActions';import PopUpBasketOrder from'../components/PopUpBasketOrderComponent';var ConnectedPopUpBasketOrder=connect(function(state){return{items:state};},function(dispatch){return{onAddClientInformation:function onAddClientInformation(clientName,clientPhone,clientAddress,clientMessage){return dispatch({type:ADDCLIENTINFORMATION.type,payload:{clientName:clientName,clientPhone:clientPhone,clientAddress:clientAddress,clientMessage:clientMessage}});}};})(PopUpBasketOrder);var ConnectedPopUpBasketOrderToUsers=connect(function(state){return{pages:state};})(ConnectedPopUpBasketOrder);export default ConnectedPopUpBasketOrderToUsers;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/basket/containers/ConnectedPopUpBasketOrderComponent.jsx"],"names":["connect","ADDCLIENTINFORMATION","PopUpBasketOrder","ConnectedPopUpBasketOrder","state","items","dispatch","onAddClientInformation","clientName","clientPhone","clientAddress","clientMessage","type","payload","ConnectedPopUpBasketOrderToUsers","pages"],"mappings":"AAAA,OAASA,OAAT,KAAwB,aAAxB,CACA,OACEC,oBADF,KAEO,4CAFP,CAGA,MAAOC,CAAAA,gBAAP,KAA6B,yCAA7B,CAEA,GAAMC,CAAAA,yBAAyB,CAAGH,OAAO,CACvC,SAACI,KAAD,QAAY,CACVC,KAAK,CAAED,KADG,CAAZ,EADuC,CAIvC,SAACE,QAAD,QAAe,CACbC,sBAAsB,CAAE,gCAACC,UAAD,CAAaC,WAAb,CAA0BC,aAA1B,CAAyCC,aAAzC,QAA2DL,CAAAA,QAAQ,CAAC,CAC1FM,IAAI,CAAEX,oBAAoB,CAACW,IAD+D,CAE1FC,OAAO,CAAE,CACPL,UAAU,CAAVA,UADO,CACKC,WAAW,CAAXA,WADL,CACkBC,aAAa,CAAbA,aADlB,CACiCC,aAAa,CAAbA,aADjC,CAFiF,CAAD,CAAnE,EADX,CAAf,EAJuC,CAAP,CAYhCT,gBAZgC,CAAlC,CAcA,GAAMY,CAAAA,gCAAgC,CAAGd,OAAO,CAC9C,SAACI,KAAD,QAAY,CACVW,KAAK,CAAEX,KADG,CAAZ,EAD8C,CAAP,CAIvCD,yBAJuC,CAAzC,CAMA,cAAeW,CAAAA,gCAAf","sourcesContent":["import { connect } from 'react-redux';\nimport {\n  ADDCLIENTINFORMATION,\n} from '../../../redux/actions/catalogItemsActions';\nimport PopUpBasketOrder from '../components/PopUpBasketOrderComponent';\n\nconst ConnectedPopUpBasketOrder = connect(\n  (state) => ({\n    items: state,\n  }),\n  (dispatch) => ({\n    onAddClientInformation: (clientName, clientPhone, clientAddress, clientMessage) => dispatch({\n      type: ADDCLIENTINFORMATION.type,\n      payload: {\n        clientName, clientPhone, clientAddress, clientMessage,\n      },\n    }),\n  }),\n)(PopUpBasketOrder);\n\nconst ConnectedPopUpBasketOrderToUsers = connect(\n  (state) => ({\n    pages: state,\n  }),\n)(ConnectedPopUpBasketOrder);\n\nexport default ConnectedPopUpBasketOrderToUsers;\n"]},"metadata":{},"sourceType":"module"}
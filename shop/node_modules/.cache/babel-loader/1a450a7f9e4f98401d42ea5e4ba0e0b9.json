{"ast":null,"code":"import axios from 'axios';\nimport serverUrl from '../../../../common/constants/urls';\nimport transliterate from '../../../../common/untils/transliterate';\nconst newProduct = '/add-product';\n\nasync function postNewProduct(productName, image, categoryName, productPrice, productInStock, categoriesArray) {\n  const errorImage = document.getElementById('errorNewImage');\n  const imgAlt = transliterate(productName);\n  const imgTitle = imgAlt;\n  const newCategory = categoryName === 'Электротовары и свет' ? categoriesArray.categories[0].category : categoryName;\n  let categoryId = categoriesArray.categories.filter(category => category.category === newCategory).map(category => category.id).join('');\n  categoryId = Number(categoryId);\n  let price = '';\n\n  if (productPrice.slice(-1) === '.') {\n    price = productPrice.slice(0, -6);\n  }\n\n  const inStock = productInStock === 'да' ? Boolean(true) : Boolean(false);\n  const payload = {\n    data: {\n      categoryId,\n      category: newCategory,\n      description: productName,\n      imgAlt,\n      imgTitle,\n      image,\n      price,\n      counter: 1,\n      inStock\n    }\n  };\n  console.log(categoryId, newCategory, productName, imgAlt, imgTitle, image, price, counter, inStock);\n\n  try {\n    const response = await axios.post(`${serverUrl}${newProduct}`, {\n      payload,\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    const result = response.data;\n    errorImage.setAttribute('class', 'errorNewImage -disabled');\n    return result;\n  } catch (error) {\n    errorImage.setAttribute('class', 'errorNewImage');\n    return null;\n  }\n}\n\nexport default postNewProduct;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/editProducts/api/post/postNewProduct.jsx"],"names":["axios","serverUrl","transliterate","newProduct","postNewProduct","productName","image","categoryName","productPrice","productInStock","categoriesArray","errorImage","document","getElementById","imgAlt","imgTitle","newCategory","categories","category","categoryId","filter","map","id","join","Number","price","slice","inStock","Boolean","payload","data","description","counter","console","log","response","post","headers","result","setAttribute","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,aAAP,MAA0B,yCAA1B;AAEA,MAAMC,UAAU,GAAG,cAAnB;;AAEA,eAAeC,cAAf,CACEC,WADF,EACeC,KADf,EACsBC,YADtB,EACoCC,YADpC,EACkDC,cADlD,EACkEC,eADlE,EAEE;AACA,QAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAnB;AACA,QAAMC,MAAM,GAAGZ,aAAa,CAACG,WAAD,CAA5B;AACA,QAAMU,QAAQ,GAAGD,MAAjB;AAEA,QAAME,WAAW,GAAGT,YAAY,KAAK,sBAAjB,GAA0CG,eAAe,CAACO,UAAhB,CAA2B,CAA3B,EAA8BC,QAAxE,GAAmFX,YAAvG;AAEA,MAAIY,UAAU,GAAGT,eAAe,CAACO,UAAhB,CACdG,MADc,CACNF,QAAD,IAAcA,QAAQ,CAACA,QAAT,KAAsBF,WAD7B,EAEdK,GAFc,CAETH,QAAD,IAAcA,QAAQ,CAACI,EAFb,EAEiBC,IAFjB,CAEsB,EAFtB,CAAjB;AAIAJ,EAAAA,UAAU,GAAGK,MAAM,CAACL,UAAD,CAAnB;AAEA,MAAIM,KAAK,GAAG,EAAZ;;AAEA,MAAIjB,YAAY,CAACkB,KAAb,CAAmB,CAAC,CAApB,MAA2B,GAA/B,EAAoC;AAClCD,IAAAA,KAAK,GAAGjB,YAAY,CAACkB,KAAb,CAAmB,CAAnB,EAAsB,CAAC,CAAvB,CAAR;AACD;;AAED,QAAMC,OAAO,GAAGlB,cAAc,KAAK,IAAnB,GAA0BmB,OAAO,CAAC,IAAD,CAAjC,GAA0CA,OAAO,CAAC,KAAD,CAAjE;AAEA,QAAMC,OAAO,GAAG;AACdC,IAAAA,IAAI,EAAE;AACJX,MAAAA,UADI;AAEJD,MAAAA,QAAQ,EAAEF,WAFN;AAGJe,MAAAA,WAAW,EAAE1B,WAHT;AAIJS,MAAAA,MAJI;AAKJC,MAAAA,QALI;AAMJT,MAAAA,KANI;AAOJmB,MAAAA,KAPI;AAQJO,MAAAA,OAAO,EAAE,CARL;AASJL,MAAAA;AATI;AADQ,GAAhB;AAaAM,EAAAA,OAAO,CAACC,GAAR,CAAYf,UAAZ,EAAwBH,WAAxB,EAAqCX,WAArC,EAAkDS,MAAlD,EAA0DC,QAA1D,EACET,KADF,EACSmB,KADT,EACgBO,OADhB,EACyBL,OADzB;;AAEA,MAAI;AACF,UAAMQ,QAAQ,GAAG,MAAMnC,KAAK,CAACoC,IAAN,CAAY,GAAEnC,SAAU,GAAEE,UAAW,EAArC,EAAwC;AAC7D0B,MAAAA,OAD6D;AAE7DQ,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFoD,KAAxC,CAAvB;AAMA,UAAMC,MAAM,GAAGH,QAAQ,CAACL,IAAxB;AACAnB,IAAAA,UAAU,CAAC4B,YAAX,CAAwB,OAAxB,EAAiC,yBAAjC;AACA,WAAOD,MAAP;AACD,GAVD,CAUE,OAAOE,KAAP,EAAc;AACd7B,IAAAA,UAAU,CAAC4B,YAAX,CAAwB,OAAxB,EAAiC,eAAjC;AACA,WAAO,IAAP;AACD;AACF;;AAED,eAAenC,cAAf","sourcesContent":["import axios from 'axios';\nimport serverUrl from '../../../../common/constants/urls';\nimport transliterate from '../../../../common/untils/transliterate';\n\nconst newProduct = '/add-product';\n\nasync function postNewProduct(\n  productName, image, categoryName, productPrice, productInStock, categoriesArray,\n) {\n  const errorImage = document.getElementById('errorNewImage');\n  const imgAlt = transliterate(productName);\n  const imgTitle = imgAlt;\n\n  const newCategory = categoryName === 'Электротовары и свет' ? categoriesArray.categories[0].category : categoryName;\n\n  let categoryId = categoriesArray.categories\n    .filter((category) => category.category === newCategory)\n    .map((category) => category.id).join('');\n\n  categoryId = Number(categoryId);\n\n  let price = '';\n\n  if (productPrice.slice(-1) === '.') {\n    price = productPrice.slice(0, -6);\n  }\n\n  const inStock = productInStock === 'да' ? Boolean(true) : Boolean(false);\n\n  const payload = {\n    data: {\n      categoryId,\n      category: newCategory,\n      description: productName,\n      imgAlt,\n      imgTitle,\n      image,\n      price,\n      counter: 1,\n      inStock,\n    },\n  };\n  console.log(categoryId, newCategory, productName, imgAlt, imgTitle,\n    image, price, counter, inStock);\n  try {\n    const response = await axios.post(`${serverUrl}${newProduct}`, {\n      payload,\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    const result = response.data;\n    errorImage.setAttribute('class', 'errorNewImage -disabled');\n    return result;\n  } catch (error) {\n    errorImage.setAttribute('class', 'errorNewImage');\n    return null;\n  }\n}\n\nexport default postNewProduct;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/common/loginForm/components/LoginComponent.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport InputWitchCkeckingNotNull from '../../input/components/InputWitchCkeckingNotNullComponent';\nimport removeErrorNotNull from '../../untils/removeErrorNotNull';\nimport processResultLoginForgetPassword from '../../untils/processResultLoginForgetPassword';\nimport ButtonLogin from '../../button/components/ButtonLoginComponent';\nimport setErrorNotNullGroupsLogin from '../../untils/setErrorNotNullGroupsLogin';\nimport buttonLoginArray from '../constants/buttonLoginArray';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateData = (value, name) => {\n      if (name === 'clientLogin') {\n        this.setState({\n          clientLogin: value\n        });\n      }\n\n      if (name === 'clientPassword') {\n        this.setState({\n          clientPassword: value\n        });\n      }\n    };\n\n    this.state = {\n      id: '',\n      clientLogin: '',\n      clientLoginInput: 'loginInput',\n      clientLoginSymbol: 'errorSymbol',\n      clientPassword: '',\n      clientPasswordInput: 'passwordInput',\n      clientPasswordSymbol: 'errorSymbolPassword'\n    };\n  }\n\n  render() {\n    const updateId = value => this.setState({\n      id: value\n    });\n\n    const {\n      clientLogin,\n      clientLoginInput,\n      clientLoginSymbol,\n      clientPassword,\n      clientPasswordInput,\n      clientPasswordSymbol,\n      id\n    } = this.state;\n    const {\n      onLogin,\n      onEnter,\n      history,\n      onAdd,\n      onEnterEmail\n    } = this.props;\n\n    function handleButtonClick() {\n      clientLogin && clientPassword ? processResultLoginForgetPassword(onEnter, onLogin, history, id, onAdd, onEnterEmail, clientLogin, clientPassword, updateId) : setErrorNotNullGroupsLogin(clientLogin, clientLoginInput, clientLoginSymbol, clientPassword, clientPasswordInput, clientPasswordSymbol);\n    }\n\n    const link = () => {\n      history.push('/registration');\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"incorrectLoginOrPassword\",\n        className: \"userNotFoundBlock -disabled\",\n        children: \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F \\u0441 \\u0442\\u0430\\u043A\\u0438\\u043C email \\u043D\\u0435 \\u0441\\u0443\\u0449\\u0435\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442 \\u0438\\u043B\\u0438 \\u043D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loginString -required\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputWitchCkeckingNotNull, {\n          initialValue: clientLogin,\n          type: \"email\",\n          name: \"clientLogin\",\n          classInput: clientLoginInput,\n          classSymbol: clientLoginSymbol,\n          updateData: this.updateData,\n          removeErrorNotNull: removeErrorNotNull\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"passwordString -required\",\n          children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputWitchCkeckingNotNull, {\n          initialValue: clientPassword,\n          type: \"password\",\n          name: \"clientPassword\",\n          classInput: clientPasswordInput,\n          classSymbol: clientPasswordSymbol,\n          updateData: this.updateData,\n          removeErrorNotNull: removeErrorNotNull\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), buttonLoginArray.map(button => /*#__PURE__*/_jsxDEV(ButtonLogin, {\n        className: button.className,\n        handleButtonClick: button.handleButtonClick ? this.handleButtonClick : '',\n        onLogin: button.onLogin ? onLogin : '',\n        onEnterEmail: button.onEnterEmail ? onEnter : '',\n        link: button.link ? this.link : '',\n        clientLogin: button.clientLogin ? onEnter : '',\n        children: button.text\n      }, button.className, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/common/loginForm/components/LoginComponent.jsx"],"names":["React","Link","InputWitchCkeckingNotNull","removeErrorNotNull","processResultLoginForgetPassword","ButtonLogin","setErrorNotNullGroupsLogin","buttonLoginArray","Login","Component","constructor","props","updateData","value","name","setState","clientLogin","clientPassword","state","id","clientLoginInput","clientLoginSymbol","clientPasswordInput","clientPasswordSymbol","render","updateId","onLogin","onEnter","history","onAdd","onEnterEmail","handleButtonClick","link","push","map","button","className","text"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport InputWitchCkeckingNotNull from '../../input/components/InputWitchCkeckingNotNullComponent';\nimport removeErrorNotNull from '../../untils/removeErrorNotNull';\nimport processResultLoginForgetPassword from '../../untils/processResultLoginForgetPassword';\nimport ButtonLogin from '../../button/components/ButtonLoginComponent';\nimport setErrorNotNullGroupsLogin from '../../untils/setErrorNotNullGroupsLogin';\nimport buttonLoginArray from '../constants/buttonLoginArray';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      clientLogin: '',\n      clientLoginInput: 'loginInput',\n      clientLoginSymbol: 'errorSymbol',\n      clientPassword: '',\n      clientPasswordInput: 'passwordInput',\n      clientPasswordSymbol: 'errorSymbolPassword',\n    };\n  }\n\n  updateData = (value, name) => {\n    if (name === 'clientLogin') { this.setState({ clientLogin: value }); }\n    if (name === 'clientPassword') { this.setState({ clientPassword: value }); }\n  }\n\n  render() {\n    const updateId = (value) => this.setState({ id: value });\n    const {\n      clientLogin, clientLoginInput, clientLoginSymbol,\n      clientPassword, clientPasswordInput, clientPasswordSymbol, id,\n    } = this.state;\n\n    const {\n      onLogin, onEnter, history, onAdd, onEnterEmail,\n    } = this.props;\n    function handleButtonClick() {\n      clientLogin && clientPassword\n        ? processResultLoginForgetPassword(\n          onEnter, onLogin, history, id, onAdd, onEnterEmail, clientLogin, clientPassword,\n          updateId,\n        )\n        : setErrorNotNullGroupsLogin(clientLogin, clientLoginInput, clientLoginSymbol,\n          clientPassword, clientPasswordInput, clientPasswordSymbol);\n    }\n\n    const link = () => {\n      history.push('/registration');\n    };\n    return (\n      <form className=\"form\">\n        <p id=\"incorrectLoginOrPassword\" className=\"userNotFoundBlock -disabled\">Пользователя с таким email не существует или неверный пароль</p>\n        <div className=\"login\">\n          <p className=\"loginString -required\">Email:</p>\n          <InputWitchCkeckingNotNull\n            initialValue={clientLogin}\n            type=\"email\"\n            name=\"clientLogin\"\n            classInput={clientLoginInput}\n            classSymbol={clientLoginSymbol}\n            updateData={this.updateData}\n            removeErrorNotNull={removeErrorNotNull}\n          />\n        </div>\n        <div className=\"password\">\n          <p className=\"passwordString -required\">Пароль:</p>\n          <InputWitchCkeckingNotNull\n            initialValue={clientPassword}\n            type=\"password\"\n            name=\"clientPassword\"\n            classInput={clientPasswordInput}\n            classSymbol={clientPasswordSymbol}\n            updateData={this.updateData}\n            removeErrorNotNull={removeErrorNotNull}\n          />\n        </div>\n        {\n          buttonLoginArray.map((button) => (\n            <ButtonLogin\n              key={button.className}\n              className={button.className}\n              handleButtonClick={button.handleButtonClick ? this.handleButtonClick : ''}\n              onLogin={button.onLogin ? onLogin : ''}\n              onEnterEmail={button.onEnterEmail ? onEnter : ''}\n              link={button.link ? this.link : ''}\n              clientLogin={button.clientLogin ? onEnter : ''}\n            >\n              {button.text}\n            </ButtonLogin>\n          ))\n}\n      </form>\n\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}
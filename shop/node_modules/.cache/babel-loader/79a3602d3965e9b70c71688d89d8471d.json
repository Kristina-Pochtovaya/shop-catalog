{"ast":null,"code":"var _jsxFileName = \"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/personalAccount/components/PersonaIformationComponent.jsx\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport setErrorNotNull from '../../../common/untils/setErrorNotNull';\nimport InputWitchCkeckingNotNull from '../../../common/input/components/InputWitchCkeckingNotNullComponent';\nimport formatPhoneNumber from '../../../common/untils/formatPhoneNumber';\n/* import postChangePasswordRequest from '../api/post/postChangePasswordRequest';\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PersonaIformation extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      pages\n    } = this.props;\n    this.state = {\n      firstName: '',\n      firstNameInput: 'firstNameInput',\n      firstNameSymbol: 'firstNameSymbol',\n      lastName: '',\n      lastNameInput: 'lastNameInput',\n      lastNameSymbol: 'lastNameSymbol',\n      email: '',\n      emailInput: 'emailInput',\n      emailSymbol: 'emailSymbol',\n      phoneNumber: '+375(__)___-__-__',\n      address: '',\n      passwordNew: '',\n      passwordNewInput: 'passwordNewInput',\n      passwordNewSymbol: 'errorSymbolPasswordNew',\n      passwordNewRepeat: '',\n      passwordRepeatInput: 'passwordNewRepeatInput',\n      passwordRepeatSymbol: 'errorSymbolPasswordNewRepeat'\n    };\n    this.updateData = this.updateData.bind(this);\n  }\n\n  updateData(value, name) {\n    if (name === 'clientEmail') {\n      this.setState({\n        email: value\n      });\n    }\n\n    if (name === 'passwordNew') {\n      this.setState({\n        passwordNew: value\n      });\n    }\n\n    if (name === 'passwordNewRepeat') {\n      this.setState({\n        passwordNewRepeat: value\n      });\n    }\n  }\n\n  render() {\n    const {\n      firstName,\n      firstNameInput,\n      firstNameSymbol,\n      lastName,\n      lastNameInput,\n      lastNameSymbol,\n      email,\n      emailInput,\n      emailSymbol,\n      phoneNumber,\n      address,\n      passwordNew,\n      passwordNewInput,\n      passwordNewSymbol,\n      passwordNewRepeat,\n      passwordRepeatInput,\n      passwordRepeatSymbol\n    } = this.state;\n    const {\n      history\n    } = this.props;\n\n    async function handleButtonClick() {\n      const userNotFound = document.getElementById('notRealUser');\n      const result = '';\n      /* const result =\n       await postChangePasswordRequest(clientEmail, passwordNew, passwordNewRepeat); */\n\n      if (result === true) {\n        history.push('/main-page');\n      }\n\n      if (result === 'incorrectUserOrPassword') {\n        userNotFound.setAttribute('class', 'userNotFoundBlock');\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"personalInformation-wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"personalInformation\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"firstName\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"firstNameString -required\",\n            children: \"\\u0418\\u043C\\u044F:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputWitchCkeckingNotNull, {\n            initialValue: firstName,\n            type: \"text\",\n            name: \"firstName\",\n            classInput: firstNameInput,\n            classSymbol: firstNameSymbol,\n            updateData: this.updateData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lastName\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"lastNameString -required\",\n            children: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputWitchCkeckingNotNull, {\n            initialValue: lastName,\n            type: \"text\",\n            name: \"lastName\",\n            classInput: lastNameInput,\n            classSymbol: lastNameSymbol,\n            updateData: this.updateData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"emailString -required\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputWitchCkeckingNotNull, {\n            initialValue: email,\n            type: \"email\",\n            name: \"email\",\n            classInput: emailInput,\n            classSymbol: emailSymbol,\n            updateData: this.updateData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"phone\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"phoneString -required\",\n            children: \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"phoneInput\",\n            name: \"PHONE\",\n            type: \"tel\",\n            minLength: \"13\",\n            maxLength: \"13\",\n            placeholder: \"+375 (__) ___-__-__\",\n            value: phoneNumber,\n            onFocus: () => this.setState({\n              phoneNumber: '+375'\n            }),\n            onChange: event => {\n              this.setState({\n                phoneNumber: formatPhoneNumber(event.target.value)\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"passwordNew\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"passwordNewString -required\",\n            children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputWitchCkeckingNotNull, {\n            initialValue: passwordNew,\n            type: \"password\",\n            name: \"passwordNew\",\n            classInput: passwordNewInput,\n            classSymbol: passwordNewSymbol,\n            updateData: this.updateData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"passwordNewRepeat\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"passwordNewRepeatString -required\",\n            children: \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputWitchCkeckingNotNull, {\n            initialValue: passwordNewRepeat,\n            type: \"password\",\n            name: \"passwordNewRepeat\",\n            classInput: passwordRepeatInput,\n            classSymbol: passwordRepeatSymbol,\n            updateData: this.updateData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), firstName && lastName && email && passwordNew && passwordNewRepeat && passwordNew === passwordNewRepeat ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"changePasswordButton\",\n          onClick: () => handleButtonClick(),\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 5\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"changePasswordButton\",\n          onClick: () => {\n            if (!firstName) {\n              setErrorNotNull(firstNameInput, firstNameSymbol);\n            }\n\n            if (!lastName) {\n              setErrorNotNull(lastNameInput, lastNameSymbol);\n            }\n\n            if (!email) {\n              setErrorNotNull(emailInput, emailSymbol);\n            }\n\n            if (!passwordNew) {\n              setErrorNotNull(passwordNewInput, passwordNewSymbol);\n            }\n\n            if (passwordNew !== passwordNewRepeat) {\n              setErrorNotNull(passwordRepeatInput, passwordRepeatSymbol);\n            }\n          },\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PersonaIformation;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/personalAccount/components/PersonaIformationComponent.jsx"],"names":["React","withRouter","connect","setErrorNotNull","InputWitchCkeckingNotNull","formatPhoneNumber","PersonaIformation","Component","constructor","props","pages","state","firstName","firstNameInput","firstNameSymbol","lastName","lastNameInput","lastNameSymbol","email","emailInput","emailSymbol","phoneNumber","address","passwordNew","passwordNewInput","passwordNewSymbol","passwordNewRepeat","passwordRepeatInput","passwordRepeatSymbol","updateData","bind","value","name","setState","render","history","handleButtonClick","userNotFound","document","getElementById","result","push","setAttribute","event","target"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport setErrorNotNull from '../../../common/untils/setErrorNotNull';\nimport InputWitchCkeckingNotNull from '../../../common/input/components/InputWitchCkeckingNotNullComponent';\nimport formatPhoneNumber from '../../../common/untils/formatPhoneNumber';\n/* import postChangePasswordRequest from '../api/post/postChangePasswordRequest';\n */\nclass PersonaIformation extends React.Component {\n  constructor(props) {\n    super(props);\n    const { pages } = this.props;\n    this.state = {\n      firstName: '',\n      firstNameInput: 'firstNameInput',\n      firstNameSymbol: 'firstNameSymbol',\n      lastName: '',\n      lastNameInput: 'lastNameInput',\n      lastNameSymbol: 'lastNameSymbol',\n      email: '',\n      emailInput: 'emailInput',\n      emailSymbol: 'emailSymbol',\n      phoneNumber: '+375(__)___-__-__',\n      address: '',\n      passwordNew: '',\n      passwordNewInput: 'passwordNewInput',\n      passwordNewSymbol: 'errorSymbolPasswordNew',\n      passwordNewRepeat: '',\n      passwordRepeatInput: 'passwordNewRepeatInput',\n      passwordRepeatSymbol: 'errorSymbolPasswordNewRepeat',\n    };\n    this.updateData = this.updateData.bind(this);\n  }\n\n  updateData(value, name) {\n    if (name === 'clientEmail') { this.setState({ email: value }); }\n    if (name === 'passwordNew') { this.setState({ passwordNew: value }); }\n    if (name === 'passwordNewRepeat') { this.setState({ passwordNewRepeat: value }); }\n  }\n\n  render() {\n    const {\n      firstName, firstNameInput, firstNameSymbol,\n      lastName, lastNameInput, lastNameSymbol,\n      email, emailInput, emailSymbol,\n      phoneNumber,address,\n      passwordNew, passwordNewInput, passwordNewSymbol,\n      passwordNewRepeat, passwordRepeatInput, passwordRepeatSymbol,\n    } = this.state;\n    const { history } = this.props;\n    async function handleButtonClick() {\n      const userNotFound = document.getElementById('notRealUser');\n      const result = '';\n      /* const result =\n       await postChangePasswordRequest(clientEmail, passwordNew, passwordNewRepeat); */\n      if (result === true) {\n        history.push('/main-page');\n      } if (result === 'incorrectUserOrPassword') {\n        userNotFound.setAttribute('class', 'userNotFoundBlock');\n      }\n    }\n    return (\n      <div className=\"personalInformation-wrap\">\n        <form className=\"personalInformation\">\n          <div className=\"firstName\">\n            <p className=\"firstNameString -required\">Имя:</p>\n            <InputWitchCkeckingNotNull\n              initialValue={firstName}\n              type=\"text\"\n              name=\"firstName\"\n              classInput={firstNameInput}\n              classSymbol={firstNameSymbol}\n              updateData={this.updateData}\n            />\n          </div>\n          <div className=\"lastName\">\n            <p className=\"lastNameString -required\">Фамилия:</p>\n            <InputWitchCkeckingNotNull\n              initialValue={lastName}\n              type=\"text\"\n              name=\"lastName\"\n              classInput={lastNameInput}\n              classSymbol={lastNameSymbol}\n              updateData={this.updateData}\n            />\n          </div>\n          <div className=\"email\">\n            <p className=\"emailString -required\">Email:</p>\n            <InputWitchCkeckingNotNull\n              initialValue={email}\n              type=\"email\"\n              name=\"email\"\n              classInput={emailInput}\n              classSymbol={emailSymbol}\n              updateData={this.updateData}\n            />\n          </div>\n          <div className=\"phone\">\n            <p className=\"phoneString -required\">Телефон:</p>\n            <input\n              className=\"phoneInput\"\n              name=\"PHONE\"\n              type=\"tel\"\n              minLength=\"13\"\n              maxLength=\"13\"\n              placeholder=\"+375 (__) ___-__-__\"\n              value={phoneNumber}\n              onFocus={() => this.setState({ phoneNumber: '+375' })}\n              onChange={(event) => {\n                this.setState({\n                  phoneNumber: formatPhoneNumber(event.target.value),\n                });\n              }}\n            />\n          </div>\n          <div className=\"passwordNew\">\n            <p className=\"passwordNewString -required\">Пароль:</p>\n            <InputWitchCkeckingNotNull\n              initialValue={passwordNew}\n              type=\"password\"\n              name=\"passwordNew\"\n              classInput={passwordNewInput}\n              classSymbol={passwordNewSymbol}\n              updateData={this.updateData}\n            />\n          </div>\n          <div className=\"passwordNewRepeat\">\n            <p className=\"passwordNewRepeatString -required\">Повторите пароль:</p>\n            <InputWitchCkeckingNotNull\n              initialValue={passwordNewRepeat}\n              type=\"password\"\n              name=\"passwordNewRepeat\"\n              classInput={passwordRepeatInput}\n              classSymbol={passwordRepeatSymbol}\n              updateData={this.updateData}\n            />\n          </div>\n          {(firstName && lastName && email && passwordNew && passwordNewRepeat)\n  && (passwordNew === passwordNewRepeat) ? (\n    <button\n      type=\"button\"\n      className=\"changePasswordButton\"\n      onClick={() => handleButtonClick()}\n    >\n      Сохранить\n    </button>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"changePasswordButton\"\n                onClick={() => {\n                  if (!firstName) {\n                    setErrorNotNull(firstNameInput, firstNameSymbol);\n                  } if (!lastName) {\n                    setErrorNotNull(lastNameInput, lastNameSymbol);\n                  } if (!email) {\n                    setErrorNotNull(emailInput, emailSymbol);\n                  } if (!passwordNew) {\n                    setErrorNotNull(passwordNewInput, passwordNewSymbol);\n                  } if (passwordNew !== passwordNewRepeat) {\n                    setErrorNotNull(passwordRepeatInput, passwordRepeatSymbol);\n                  }\n                }}\n              >\n                Сохранить\n              </button>\n            )}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default PersonaIformation;\n"]},"metadata":{},"sourceType":"module"}
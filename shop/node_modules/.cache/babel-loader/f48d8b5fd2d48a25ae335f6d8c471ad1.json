{"ast":null,"code":"// eslint-disable-next-line no-unused-vars\nimport React from 'react';\n\nconst formatterNumb = function (numb) {\n  date = parseInt(date);\n\n  if (indexOf(numb) == 1 || indexOf(numb) == 2 || indexOf(numb) == 3) {\n    return `+(${numb})`;\n  }\n\n  if (indexOf(numb) == 2) {\n    return `+(${numb})`;\n  }\n};\n\nfunction formatPhoneNumber(stringPhone) {\n  stringPhone.addEventListener('input', function (event) {\n    let number = '';\n\n    for (const string of this.value) {\n      if ('0123456789'.includes(string)) {\n        number += string;\n      }\n    }\n\n    number = parseInt(number);\n\n    if (number < minValue) {\n      number = minValue;\n    }\n\n    if (number > maxValue) {\n      number = maxValue;\n    }\n\n    number = formatterNumb(number);\n    this.value = number;\n  });\n}\n\nexport default formatPhoneNumber;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/src/common/untils/formatPhoneNumber.jsx"],"names":["React","formatterNumb","numb","date","parseInt","indexOf","formatPhoneNumber","stringPhone","addEventListener","event","number","string","value","includes","minValue","maxValue"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAa,GAAG,UAAUC,IAAV,EAAgB;AACpCC,EAAAA,IAAI,GAAGC,QAAQ,CAACD,IAAD,CAAf;;AAEA,MAAIE,OAAO,CAACH,IAAD,CAAP,IAAiB,CAAjB,IAAsBG,OAAO,CAACH,IAAD,CAAP,IAAiB,CAAvC,IAA4CG,OAAO,CAACH,IAAD,CAAP,IAAiB,CAAjE,EAAoE;AAClE,WAAQ,KAAIA,IAAK,GAAjB;AACD;;AAED,MAAIG,OAAO,CAACH,IAAD,CAAP,IAAiB,CAArB,EAAwB;AACtB,WAAQ,KAAIA,IAAK,GAAjB;AACD;AACF,CAVD;;AAYA,SAASI,iBAAT,CAA2BC,WAA3B,EAAwC;AACtCA,EAAAA,WAAW,CAACC,gBAAZ,CAA6B,OAA7B,EAAsC,UAAUC,KAAV,EAAiB;AACrD,QAAIC,MAAM,GAAG,EAAb;;AACA,SAAK,MAAMC,MAAX,IAAqB,KAAKC,KAA1B,EAAiC;AAC/B,UAAI,aAAaC,QAAb,CAAsBF,MAAtB,CAAJ,EAAmC;AACjCD,QAAAA,MAAM,IAAIC,MAAV;AACD;AACF;;AAEDD,IAAAA,MAAM,GAAGN,QAAQ,CAACM,MAAD,CAAjB;;AAEA,QAAIA,MAAM,GAAGI,QAAb,EAAuB;AACrBJ,MAAAA,MAAM,GAAGI,QAAT;AACD;;AAED,QAAIJ,MAAM,GAAGK,QAAb,EAAuB;AACrBL,MAAAA,MAAM,GAAGK,QAAT;AACD;;AAEDL,IAAAA,MAAM,GAAGT,aAAa,CAACS,MAAD,CAAtB;AAEA,SAAKE,KAAL,GAAaF,MAAb;AACD,GArBD;AAsBD;;AAED,eAAeJ,iBAAf","sourcesContent":["// eslint-disable-next-line no-unused-vars\nimport React from 'react';\n\nconst formatterNumb = function (numb) {\n  date = parseInt(date);\n\n  if (indexOf(numb) == 1 || indexOf(numb) == 2 || indexOf(numb) == 3) {\n    return `+(${numb})`;\n  }\n\n  if (indexOf(numb) == 2) {\n    return `+(${numb})`;\n  }\n};\n\nfunction formatPhoneNumber(stringPhone) {\n  stringPhone.addEventListener('input', function (event) {\n    let number = '';\n    for (const string of this.value) {\n      if ('0123456789'.includes(string)) {\n        number += string;\n      }\n    }\n\n    number = parseInt(number);\n\n    if (number < minValue) {\n      number = minValue;\n    }\n\n    if (number > maxValue) {\n      number = maxValue;\n    }\n\n    number = formatterNumb(number);\n\n    this.value = number;\n  });\n}\n\nexport default formatPhoneNumber;\n"]},"metadata":{},"sourceType":"module"}
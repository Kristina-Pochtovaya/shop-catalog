{"ast":null,"code":"import _regeneratorRuntime from\"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import postRequest from'./postRequest';var url='/';var postUploadAction=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(image){var fd,config,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:fd=new FormData();fd.append('image',image);config={header:{'Content-Type':'multipart/form-data'}};_context.prev=3;_context.next=6;return postRequest(url,fd,config);case 6:res=_context.sent;console.log(res.data);_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](3);console.log(_context.t0.message);case 13:case\"end\":return _context.stop();}}},_callee,null,[[3,10]]);}));return function postUploadAction(_x){return _ref.apply(this,arguments);};}();export default postUploadAction;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/common/api/post/postUploadAction.jsx"],"names":["postRequest","url","postUploadAction","image","fd","FormData","append","config","header","res","console","log","data","message"],"mappings":"iZAAA,MAAOA,CAAAA,WAAP,KAAwB,eAAxB,CAEA,GAAMC,CAAAA,GAAG,CAAG,GAAZ,CAEA,GAAMC,CAAAA,gBAAgB,0FAAG,iBAAOC,KAAP,oIACjBC,EADiB,CACZ,GAAIC,CAAAA,QAAJ,EADY,CAEvBD,EAAE,CAACE,MAAH,CAAU,OAAV,CAAmBH,KAAnB,EACMI,MAHiB,CAGR,CACbC,MAAM,CAAE,CACN,eAAgB,qBADV,CADK,CAHQ,uCASHR,CAAAA,WAAW,CAACC,GAAD,CAAMG,EAAN,CAAUG,MAAV,CATR,QASfE,GATe,eAUrBC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,EAVqB,iFAYrBF,OAAO,CAACC,GAAR,CAAY,YAAIE,OAAhB,EAZqB,qEAAH,kBAAhBX,CAAAA,gBAAgB,4CAAtB,CAgBA,cAAeA,CAAAA,gBAAf","sourcesContent":["import postRequest from './postRequest';\n\nconst url = '/';\n\nconst postUploadAction = async (image) => {\n  const fd = new FormData();\n  fd.append('image', image);\n  const config = {\n    header: {\n      'Content-Type': 'multipart/form-data',\n    },\n  };\n  try {\n    const res = await postRequest(url, fd, config);\n    console.log(res.data);\n  } catch (err) {\n    console.log(err.message);\n  }\n};\n\nexport default postUploadAction;\n"]},"metadata":{},"sourceType":"module"}
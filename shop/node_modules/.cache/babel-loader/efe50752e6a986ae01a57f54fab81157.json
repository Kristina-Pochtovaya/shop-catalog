{"ast":null,"code":"import React from'react';import AddCategoryProductImage from'../../editCategory/components/AddCategoryProductImage';import handleButtonClick from'../utils/handleButtonClick';import setClassErrorById from'../../../common/untils/setClassErrorById';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FormAddProduct=function FormAddProduct(_ref){var updateData=_ref.updateData,updateImage=_ref.updateImage,state=_ref.state,history=_ref.history,isProductsUpdated=_ref.isProductsUpdated,setIsProductsUpdated=_ref.setIsProductsUpdated;var handleSubmit=function handleSubmit(e){return e.preventDefault();};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:function onSubmit(e){return handleSubmit(e);},id:\"upload-container\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"productCategoriesString\",children:\"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\"}),/*#__PURE__*/_jsx(\"select\",{className:\"productsCategories\",value:state.categoryName,onChange:function onChange(e){return updateData('categoryName',e);},children:state.categoriesArray.categories.map(function(category){return/*#__PURE__*/_jsx(\"option\",{value:category.category,children:category.category},category.id);})}),/*#__PURE__*/_jsx(\"p\",{className:\"productNameString\",children:\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"productNameInput\",value:state.productName,onChange:function onChange(e){return updateData('productName',e);}}),/*#__PURE__*/_jsx(\"p\",{className:\"productPriceString\",children:\"\\u0426\\u0435\\u043D\\u0430\"}),/*#__PURE__*/_jsx(\"p\",{id:\"errorPrice\",className:\"errorPrice -disabled\",children:\"\\u0426\\u0435\\u043D\\u0430 \\u0434\\u043E\\u043B\\u0436\\u043D\\u0430 \\u0441\\u043E\\u0434\\u0435\\u0440\\u0436\\u0430\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0446\\u0438\\u0444\\u0440\\u044B\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"productPriceInput\",value:state.productPrice,onChange:function onChange(e){return updateData('productPrice',e);},onBlur:function onBlur(e){return updateData('onBlur',e);}}),/*#__PURE__*/_jsx(\"p\",{className:\"productInStockString\",children:\"\\u0412 \\u043D\\u0430\\u043B\\u0438\\u0447\\u0438\\u0438\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"imageColors\",onChange:function onChange(e){return updateData('productInStock',e);},children:[/*#__PURE__*/_jsx(\"option\",{value:true,defaultValue:true,children:\"\\u0434\\u0430\"}),/*#__PURE__*/_jsx(\"option\",{value:false,children:\"\\u043D\\u0435\\u0442\"})]}),/*#__PURE__*/_jsx(AddCategoryProductImage,{updateImage:updateImage}),/*#__PURE__*/_jsx(\"button\",{className:\"addNewCategoryButton\",type:\"button\",onClick:function onClick(){return state.isPriceCorrect?handleButtonClick(state,history,isProductsUpdated,setIsProductsUpdated):setClassErrorById('errorPrice','errorPrice');},children:\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"})]});};export default FormAddProduct;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/editProducts/components/FormAddProductComponent.jsx"],"names":["React","AddCategoryProductImage","handleButtonClick","setClassErrorById","FormAddProduct","updateData","updateImage","state","history","isProductsUpdated","setIsProductsUpdated","handleSubmit","e","preventDefault","categoryName","categoriesArray","categories","map","category","id","productName","productPrice","isPriceCorrect"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,uBAAP,KAAoC,uDAApC,CACA,MAAOC,CAAAA,iBAAP,KAA8B,4BAA9B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,0CAA9B,C,wFAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAEjB,IADJC,CAAAA,UACI,MADJA,UACI,CADQC,WACR,MADQA,WACR,CADqBC,KACrB,MADqBA,KACrB,CAD4BC,OAC5B,MAD4BA,OAC5B,CADqCC,iBACrC,MADqCA,iBACrC,CADwDC,oBACxD,MADwDA,oBACxD,CACJ,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,cAAF,EAAP,EAArB,CACA,mBACE,cAAM,QAAQ,CAAE,kBAACD,CAAD,QAAOD,CAAAA,YAAY,CAACC,CAAD,CAAnB,EAAhB,CAAwC,EAAE,CAAC,kBAA3C,wBACE,UAAG,SAAS,CAAC,yBAAb,oEADF,cAEE,eACE,SAAS,CAAC,oBADZ,CAEE,KAAK,CAAEL,KAAK,CAACO,YAFf,CAGE,QAAQ,CAAE,kBAACF,CAAD,QAAOP,CAAAA,UAAU,CAAC,cAAD,CAAiBO,CAAjB,CAAjB,EAHZ,UAKGL,KAAK,CAACQ,eAAN,CAAsBC,UAAtB,CAAiCC,GAAjC,CAAqC,SAACC,QAAD,qBACpC,eAEE,KAAK,CAAEA,QAAQ,CAACA,QAFlB,UAIGA,QAAQ,CAACA,QAJZ,EACOA,QAAQ,CAACC,EADhB,CADoC,EAArC,CALH,EAFF,cAgBE,UAAG,SAAS,CAAC,mBAAb,8DAhBF,cAiBE,cACE,IAAI,CAAC,MADP,CAEE,SAAS,CAAC,kBAFZ,CAGE,KAAK,CAAEZ,KAAK,CAACa,WAHf,CAIE,QAAQ,CAAE,kBAACR,CAAD,QAAOP,CAAAA,UAAU,CAAC,aAAD,CAAgBO,CAAhB,CAAjB,EAJZ,EAjBF,cAuBE,UAAG,SAAS,CAAC,oBAAb,sCAvBF,cAwBE,UAAG,EAAE,CAAC,YAAN,CAAmB,SAAS,CAAC,sBAA7B,sMAxBF,cAyBE,cACE,IAAI,CAAC,MADP,CAEE,SAAS,CAAC,mBAFZ,CAGE,KAAK,CAAEL,KAAK,CAACc,YAHf,CAIE,QAAQ,CAAE,kBAACT,CAAD,QAAOP,CAAAA,UAAU,CAAC,cAAD,CAAiBO,CAAjB,CAAjB,EAJZ,CAKE,MAAM,CAAE,gBAACA,CAAD,QAAOP,CAAAA,UAAU,CAAC,QAAD,CAAWO,CAAX,CAAjB,EALV,EAzBF,cAgCE,UAAG,SAAS,CAAC,sBAAb,+DAhCF,cAiCE,gBACE,SAAS,CAAC,aADZ,CAEE,QAAQ,CAAE,kBAACA,CAAD,QAAOP,CAAAA,UAAU,CAAC,gBAAD,CAAmBO,CAAnB,CAAjB,EAFZ,wBAIE,eAAQ,KAAK,KAAb,CAAc,YAAY,KAA1B,0BAJF,cAKE,eAAQ,KAAK,CAAE,KAAf,gCALF,GAjCF,cAwCE,KAAC,uBAAD,EAAyB,WAAW,CAAEN,WAAtC,EAxCF,cAyCE,eACE,SAAS,CAAC,sBADZ,CAEE,IAAI,CAAC,QAFP,CAGE,OAAO,CAAE,yBAAOC,CAAAA,KAAK,CAACe,cAAN,CACZpB,iBAAiB,CAACK,KAAD,CAAQC,OAAR,CAAiBC,iBAAjB,CAAoCC,oBAApC,CADL,CAEZP,iBAAiB,CAAC,YAAD,CAAe,YAAf,CAFZ,EAHX,8DAzCF,GADF,CAqDD,CAzDD,CA2DA,cAAeC,CAAAA,cAAf","sourcesContent":["import React from 'react';\nimport AddCategoryProductImage from '../../editCategory/components/AddCategoryProductImage';\nimport handleButtonClick from '../utils/handleButtonClick';\nimport setClassErrorById from '../../../common/untils/setClassErrorById';\n\nconst FormAddProduct = ({\n  updateData, updateImage, state, history, isProductsUpdated, setIsProductsUpdated,\n}) => {\n  const handleSubmit = (e) => e.preventDefault();\n  return (\n    <form onSubmit={(e) => handleSubmit(e)} id=\"upload-container\">\n      <p className=\"productCategoriesString\">Категория</p>\n      <select\n        className=\"productsCategories\"\n        value={state.categoryName}\n        onChange={(e) => updateData('categoryName', e)}\n      >\n        {state.categoriesArray.categories.map((category) => (\n          <option\n            key={category.id}\n            value={category.category}\n          >\n            {category.category}\n          </option>\n        ))}\n      </select>\n      <p className=\"productNameString\">Название</p>\n      <input\n        type=\"text\"\n        className=\"productNameInput\"\n        value={state.productName}\n        onChange={(e) => updateData('productName', e)}\n      />\n      <p className=\"productPriceString\">Цена</p>\n      <p id=\"errorPrice\" className=\"errorPrice -disabled\">Цена должна содержать только цифры</p>\n      <input\n        type=\"text\"\n        className=\"productPriceInput\"\n        value={state.productPrice}\n        onChange={(e) => updateData('productPrice', e)}\n        onBlur={(e) => updateData('onBlur', e)}\n      />\n      <p className=\"productInStockString\">В наличии</p>\n      <select\n        className=\"imageColors\"\n        onChange={(e) => updateData('productInStock', e)}\n      >\n        <option value defaultValue>да</option>\n        <option value={false}>нет</option>\n      </select>\n      <AddCategoryProductImage updateImage={updateImage} />\n      <button\n        className=\"addNewCategoryButton\"\n        type=\"button\"\n        onClick={() => (state.isPriceCorrect\n          ? handleButtonClick(state, history, isProductsUpdated, setIsProductsUpdated)\n          : setClassErrorById('errorPrice', 'errorPrice'))}\n      >\n        Добавить\n      </button>\n    </form>\n  );\n};\n\nexport default FormAddProduct;\n"]},"metadata":{},"sourceType":"module"}
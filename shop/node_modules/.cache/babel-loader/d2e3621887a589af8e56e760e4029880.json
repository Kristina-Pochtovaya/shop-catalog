{"ast":null,"code":"import _regeneratorRuntime from\"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import setClassIncorrectUser from'./setClassIncorrectUser';import executeFunctionsIfLoggedSucessfully from'./executeFunctionsIfLoggedSucessfully';import postLoginForgetPassword from'../api/post/postLoginForgetPasswordRequest';var processResultLoginForgetPassword=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(onEnter,onLogin,history,onAdd,onEnterEmail,clientLogin,clientPassword){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return postLoginForgetPassword(clientLogin,clientPassword);case 2:result=_context.sent;if(result==='incorrectUserOrPassword'){setClassIncorrectUser('incorrectLoginOrPassword');}else{executeFunctionsIfLoggedSucessfully(onEnter,onLogin,history,onAdd,onEnterEmail,result,clientLogin);}case 4:case\"end\":return _context.stop();}}},_callee);}));return function processResultLoginForgetPassword(_x,_x2,_x3,_x4,_x5,_x6,_x7){return _ref.apply(this,arguments);};}();export default processResultLoginForgetPassword;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/common/untils/processResultLoginForgetPassword.jsx"],"names":["setClassIncorrectUser","executeFunctionsIfLoggedSucessfully","postLoginForgetPassword","processResultLoginForgetPassword","onEnter","onLogin","history","onAdd","onEnterEmail","clientLogin","clientPassword","result"],"mappings":"iZAAA,MAAOA,CAAAA,qBAAP,KAAkC,yBAAlC,CACA,MAAOC,CAAAA,mCAAP,KAAgD,uCAAhD,CACA,MAAOC,CAAAA,uBAAP,KAAoC,4CAApC,CAEA,GAAMC,CAAAA,gCAAgC,0FAAG,iBACvCC,OADuC,CAC9BC,OAD8B,CACrBC,OADqB,CACZC,KADY,CACLC,YADK,CACSC,WADT,CACsBC,cADtB,mJAGlBR,CAAAA,uBAAuB,CAACO,WAAD,CAAcC,cAAd,CAHL,QAGjCC,MAHiC,eAIvC,GAAIA,MAAM,GAAK,yBAAf,CAA0C,CACxCX,qBAAqB,CAAC,0BAAD,CAArB,CACD,CAFD,IAEO,CACLC,mCAAmC,CACjCG,OADiC,CACxBC,OADwB,CACfC,OADe,CACNC,KADM,CACCC,YADD,CACeG,MADf,CACuBF,WADvB,CAAnC,CAGD,CAVsC,sDAAH,kBAAhCN,CAAAA,gCAAgC,oEAAtC,CAaA,cAAeA,CAAAA,gCAAf","sourcesContent":["import setClassIncorrectUser from './setClassIncorrectUser';\nimport executeFunctionsIfLoggedSucessfully from './executeFunctionsIfLoggedSucessfully';\nimport postLoginForgetPassword from '../api/post/postLoginForgetPasswordRequest';\n\nconst processResultLoginForgetPassword = async (\n  onEnter, onLogin, history, onAdd, onEnterEmail, clientLogin, clientPassword,\n) => {\n  const result = await postLoginForgetPassword(clientLogin, clientPassword);\n  if (result === 'incorrectUserOrPassword') {\n    setClassIncorrectUser('incorrectLoginOrPassword');\n  } else {\n    executeFunctionsIfLoggedSucessfully(\n      onEnter, onLogin, history, onAdd, onEnterEmail, result, clientLogin,\n    );\n  }\n};\n\nexport default processResultLoginForgetPassword;\n"]},"metadata":{},"sourceType":"module"}
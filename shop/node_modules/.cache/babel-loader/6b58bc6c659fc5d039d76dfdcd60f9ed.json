{"ast":null,"code":"import { ADD, DELETE, INCREASE, DECREASE } from '../actions/catalogItemsActions';\nconst initialState = [];\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case ADD.type:\n      {\n        const index = state.findIndex(item => item.id === action.payload.item.id);\n\n        if (index === -1) {\n          return [...state, action.payload.item];\n        }\n\n        return state;\n      }\n\n    case INCREASE.type:\n      {\n        const index = state.findIndex(item => item.id === action.payload.itemId);\n        return [...state.slice(0, index), { ...state[index],\n          counter: action.payload.counter + 1\n        }, ...state.slice(index + 1)];\n      }\n\n    case DECREASE.type:\n      {\n        if (action.payload.counter > 1) {\n          const index = state.findIndex(item => item.id === action.payload.itemId);\n          return [...state.slice(0, index), { ...state[index],\n            counter: action.payload.counter - 1\n          }, ...state.slice(index + 1)];\n        }\n\n        return state;\n      }\n\n    case DELETE.type:\n      {\n        return [...state.filter(item => item.id !== action.payload.itemId)];\n      }\n\n    case DELETEALL.type:\n      {\n        return [...state.filter(item => item.id !== action.payload.itemId)];\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/src/redux/reducers/catalogItemsReducer.jsx"],"names":["ADD","DELETE","INCREASE","DECREASE","initialState","state","action","type","index","findIndex","item","id","payload","itemId","slice","counter","filter","DELETEALL"],"mappings":"AAAA,SACEA,GADF,EACOC,MADP,EACeC,QADf,EACyBC,QADzB,QAEO,gCAFP;AAIA,MAAMC,YAAY,GAAG,EAArB;AAEA,gBAAe,CAACC,KAAK,GAAGD,YAAT,EAAuBE,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,GAAG,CAACO,IAAT;AAAe;AACb,cAAMC,KAAK,GAAGH,KAAK,CAACI,SAAN,CAAiBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAP,CAAeF,IAAf,CAAoBC,EAA1D,CAAd;;AACA,YAAIH,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,iBAAO,CAAC,GAAGH,KAAJ,EAAWC,MAAM,CAACM,OAAP,CAAeF,IAA1B,CAAP;AACD;;AAAC,eAAOL,KAAP;AACH;;AAED,SAAKH,QAAQ,CAACK,IAAd;AAAoB;AAClB,cAAMC,KAAK,GAAGH,KAAK,CAACI,SAAN,CAAiBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAP,CAAeC,MAArD,CAAd;AACA,eAAO,CACL,GAAGR,KAAK,CAACS,KAAN,CAAY,CAAZ,EAAeN,KAAf,CADE,EAEL,EAAE,GAAGH,KAAK,CAACG,KAAD,CAAV;AAAmBO,UAAAA,OAAO,EAAET,MAAM,CAACM,OAAP,CAAeG,OAAf,GAAyB;AAArD,SAFK,EAGL,GAAGV,KAAK,CAACS,KAAN,CAAYN,KAAK,GAAG,CAApB,CAHE,CAAP;AAKD;;AAED,SAAKL,QAAQ,CAACI,IAAd;AAAoB;AAClB,YAAID,MAAM,CAACM,OAAP,CAAeG,OAAf,GAAyB,CAA7B,EAAgC;AAC9B,gBAAMP,KAAK,GAAGH,KAAK,CAACI,SAAN,CAAiBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAP,CAAeC,MAArD,CAAd;AACA,iBAAO,CACL,GAAGR,KAAK,CAACS,KAAN,CAAY,CAAZ,EAAeN,KAAf,CADE,EAEL,EAAE,GAAGH,KAAK,CAACG,KAAD,CAAV;AAAmBO,YAAAA,OAAO,EAAET,MAAM,CAACM,OAAP,CAAeG,OAAf,GAAyB;AAArD,WAFK,EAGL,GAAGV,KAAK,CAACS,KAAN,CAAYN,KAAK,GAAG,CAApB,CAHE,CAAP;AAKD;;AAAC,eAAOH,KAAP;AACH;;AAED,SAAKJ,MAAM,CAACM,IAAZ;AAAkB;AAChB,eAAO,CACL,GAAGF,KAAK,CAACW,MAAN,CAAcN,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAP,CAAeC,MAAlD,CADE,CAAP;AAGD;;AAED,SAAKI,SAAS,CAACV,IAAf;AAAqB;AACnB,eAAO,CACL,GAAGF,KAAK,CAACW,MAAN,CAAcN,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAP,CAAeC,MAAlD,CADE,CAAP;AAGD;;AAED;AACE,aAAOR,KAAP;AAzCJ;AA2CD,CA5CD","sourcesContent":["import {\n  ADD, DELETE, INCREASE, DECREASE,\n} from '../actions/catalogItemsActions';\n\nconst initialState = [];\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADD.type: {\n      const index = state.findIndex((item) => item.id === action.payload.item.id);\n      if (index === -1) {\n        return [...state, action.payload.item];\n      } return state;\n    }\n\n    case INCREASE.type: {\n      const index = state.findIndex((item) => item.id === action.payload.itemId);\n      return [\n        ...state.slice(0, index),\n        { ...state[index], counter: action.payload.counter + 1 },\n        ...state.slice(index + 1),\n      ];\n    }\n\n    case DECREASE.type: {\n      if (action.payload.counter > 1) {\n        const index = state.findIndex((item) => item.id === action.payload.itemId);\n        return [\n          ...state.slice(0, index),\n          { ...state[index], counter: action.payload.counter - 1 },\n          ...state.slice(index + 1),\n        ];\n      } return state;\n    }\n\n    case DELETE.type: {\n      return [\n        ...state.filter((item) => item.id !== action.payload.itemId),\n      ];\n    }\n\n    case DELETEALL.type: {\n      return [\n        ...state.filter((item) => item.id !== action.payload.itemId),\n      ];\n    }\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/editCategory/components/EditCategoryPageColumnsComponent.jsx\";\nimport React from 'react';\nimport getCategories from '../api/get/getCategories';\nimport NameColumnEditCategory from './NameColumnEditCategoryComponent';\nimport PopUpErrorEditCategory from './PopUpErrorEditCategoryComponent';\nimport ImageColumnEditCategory from './ImageColumnEditCategoryComponent';\nimport postCategory from '../api/post/postCategory';\nimport ButtonEditCategory from '../../../common/button/components/ButtonEditCategoryComponent';\nimport ButtonDeleteCategory from '../../../common/button/components/ButtonDeleteCategoryComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass EditCategoryPageColumns extends React.Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n\n    this.handleButtonOnSave = async category => {\n      const {\n        isEditActiveId,\n        isUpdated,\n        categoryImage,\n        categoryName\n      } = this.state;\n      await postCategory(isEditActiveId, categoryName, categoryImage);\n      this.setState({\n        isUpdated: !isUpdated,\n        isEditActive: false,\n        isEditActiveId: category.id,\n        IsEditButtonVisible: false\n      });\n    };\n\n    this.handleButtonOnEdit = category => {\n      const {\n        isUpdated\n      } = this.state;\n      this.setState({\n        isEditActive: true,\n        isEditActiveId: category.id,\n        IsEditButtonVisible: true,\n        categoryImage: category.image,\n        categoryName: category.category\n      });\n    };\n\n    this.setpopupSmthWentWrongActive = value => {\n      this.setState({\n        popupSmthWentWrongActive: value\n      });\n    };\n\n    this.updateData = (value, valueisLoading) => {\n      if (this._isMounted) {\n        this.setState({\n          categoriesArray: value,\n          isLoading: valueisLoading\n        });\n      }\n    };\n\n    this.updateIsUpdate = isUpdated => this.setState({\n      isUpdated: !isUpdated\n    });\n\n    this.updateCategoryImage = value => this.setState({\n      categoryImage: value\n    });\n\n    this.updateCategoryName = value => this.setState({\n      categoryName: value\n    });\n\n    this.updateAfterDelete = () => {\n      const {\n        isUpdated\n      } = this.state;\n      this.setState({\n        isUpdated: !isUpdated\n      });\n    };\n\n    this.state = {\n      categoriesArray: [],\n      isEditActive: false,\n      isEditActiveId: '',\n      isLoading: false,\n      ErrorMessage: '',\n      popupSmthWentWrongActive: true,\n      IsEditButtonVisible: true,\n      isUpdated: false,\n      categoryImage: '',\n      categoryName: ''\n    };\n  }\n\n  async componentDidMount() {\n    this._isMounted = true;\n    await getCategories(this.updateData, this.setError);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const {\n      isUpdated\n    } = this.state;\n    console.log(isUpdated, prevState.isUpdated);\n    await getCategories(this.updateData, this.setError);\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    const {\n      isUpdated\n    } = this.state;\n    const {\n      categoriesArray,\n      isEditActive,\n      isEditActiveId,\n      isLoading,\n      ErrorMessage,\n      popupSmthWentWrongActive,\n      IsEditButtonVisible\n    } = this.state;\n\n    if (!isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"-isLoading\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (ErrorMessage) {\n      return /*#__PURE__*/_jsxDEV(PopUpErrorEditCategory, {\n        popupSmthWentWrongActive: popupSmthWentWrongActive,\n        setpopupSmthWentWrongActive: this.setpopupSmthWentWrongActive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: categoriesArray.categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"columns\",\n          children: [/*#__PURE__*/_jsxDEV(ImageColumnEditCategory, {\n            isEditActive: isEditActive,\n            id: category.id,\n            image: category.image,\n            imgAlt: category.imgAlt,\n            isEditActiveId: isEditActiveId,\n            updateCategoryImage: this.updateCategoryImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(NameColumnEditCategory, {\n            isEditActive: isEditActive,\n            category: category,\n            isEditActiveId: isEditActiveId,\n            updateCategoryName: this.updateCategoryName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnEdit\",\n            children: /*#__PURE__*/_jsxDEV(ButtonEditCategory, {\n              className: \"editCategoryButton\",\n              category: category,\n              handleButtonOnDelete: \"\",\n              handleButtonOnSave: this.handleButtonOnSave,\n              handleButtonOnEdit: this.handleButtonOnEdit,\n              updateIsUpdate: this.updateIsUpdate,\n              isUpdated: isUpdated,\n              IsEditButtonVisible: IsEditButtonVisible,\n              isEditActive: isEditActive,\n              isEditActiveId: isEditActiveId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnDelete\",\n            children: /*#__PURE__*/_jsxDEV(ButtonDeleteCategory, {\n              category: category,\n              updateAfterDelete: this.updateAfterDelete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, category.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this))\n    }, void 0, false);\n  }\n\n}\n\nexport default EditCategoryPageColumns;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/editCategory/components/EditCategoryPageColumnsComponent.jsx"],"names":["React","getCategories","NameColumnEditCategory","PopUpErrorEditCategory","ImageColumnEditCategory","postCategory","ButtonEditCategory","ButtonDeleteCategory","EditCategoryPageColumns","Component","constructor","props","_isMounted","handleButtonOnSave","category","isEditActiveId","isUpdated","categoryImage","categoryName","state","setState","isEditActive","id","IsEditButtonVisible","handleButtonOnEdit","image","setpopupSmthWentWrongActive","value","popupSmthWentWrongActive","updateData","valueisLoading","categoriesArray","isLoading","updateIsUpdate","updateCategoryImage","updateCategoryName","updateAfterDelete","ErrorMessage","componentDidMount","setError","componentDidUpdate","prevProps","prevState","console","log","componentWillUnmount","render","categories","map","imgAlt"],"mappings":"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","sourcesContent":["import React from 'react';\nimport getCategories from '../api/get/getCategories';\nimport NameColumnEditCategory from './NameColumnEditCategoryComponent';\nimport PopUpErrorEditCategory from './PopUpErrorEditCategoryComponent';\nimport ImageColumnEditCategory from './ImageColumnEditCategoryComponent';\nimport postCategory from '../api/post/postCategory';\nimport ButtonEditCategory from '../../../common/button/components/ButtonEditCategoryComponent';\nimport ButtonDeleteCategory from '../../../common/button/components/ButtonDeleteCategoryComponent';\n\nclass EditCategoryPageColumns extends React.Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      categoriesArray: [],\n      isEditActive: false,\n      isEditActiveId: '',\n      isLoading: false,\n      ErrorMessage: '',\n      popupSmthWentWrongActive: true,\n      IsEditButtonVisible: true,\n      isUpdated: false,\n      categoryImage: '',\n      categoryName: '',\n    };\n  }\n\n  async componentDidMount() {\n    this._isMounted = true;\n    await getCategories(this.updateData, this.setError);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const { isUpdated } = this.state;\n    console.log(isUpdated, prevState.isUpdated);\n\n    await getCategories(this.updateData, this.setError);\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n   handleButtonOnSave = async (category) => {\n     const {\n       isEditActiveId, isUpdated, categoryImage, categoryName,\n     } = this.state;\n     await postCategory(isEditActiveId, categoryName, categoryImage);\n     this.setState({\n       isUpdated: !isUpdated,\n       isEditActive: false,\n       isEditActiveId: category.id,\n       IsEditButtonVisible: false,\n     });\n   }\n\n   handleButtonOnEdit = (category) => {\n     const { isUpdated } = this.state;\n     this.setState({\n       isEditActive: true,\n       isEditActiveId: category.id,\n       IsEditButtonVisible: true,\n       categoryImage: category.image,\n       categoryName: category.category,\n     });\n   };\n\n  setpopupSmthWentWrongActive = (value) => { this.setState({ popupSmthWentWrongActive: value }); }\n\n  updateData = (value, valueisLoading) => {\n    if (this._isMounted) {\n      this.setState({ categoriesArray: value, isLoading: valueisLoading });\n    }\n  }\n\n  updateIsUpdate = (isUpdated) => this.setState({ isUpdated: !isUpdated });\n\n  updateCategoryImage = (value) => this.setState({ categoryImage: value })\n\n  updateCategoryName = (value) => this.setState({ categoryName: value })\n\n  updateAfterDelete = () => {\n    const { isUpdated } = this.state;\n    this.setState({ isUpdated: !isUpdated });\n  }\n\n  render() {\n    const { isUpdated } = this.state;\n    const {\n      categoriesArray, isEditActive, isEditActiveId, isLoading,\n      ErrorMessage, popupSmthWentWrongActive, IsEditButtonVisible,\n    } = this.state;\n\n    if (!isLoading) {\n      return <div className=\"-isLoading\"> </div>;\n    }\n    if (ErrorMessage) {\n      return (\n        <PopUpErrorEditCategory\n          popupSmthWentWrongActive={popupSmthWentWrongActive}\n          setpopupSmthWentWrongActive={this.setpopupSmthWentWrongActive}\n        />\n      );\n    }\n    return (\n      <>\n        {categoriesArray.categories.map((category) => (\n          <li key={category.id}>\n            <div className=\"columns\">\n              <ImageColumnEditCategory\n                isEditActive={isEditActive}\n                id={category.id}\n                image={category.image}\n                imgAlt={category.imgAlt}\n                isEditActiveId={isEditActiveId}\n                updateCategoryImage={this.updateCategoryImage}\n              />\n              <NameColumnEditCategory\n                isEditActive={isEditActive}\n                category={category}\n                isEditActiveId={isEditActiveId}\n                updateCategoryName={this.updateCategoryName}\n              />\n              <div className=\"columnEdit\">\n                <ButtonEditCategory\n                  className=\"editCategoryButton\"\n                  category={category}\n                  handleButtonOnDelete=\"\"\n                  handleButtonOnSave={this.handleButtonOnSave}\n                  handleButtonOnEdit={this.handleButtonOnEdit}\n                  updateIsUpdate={this.updateIsUpdate}\n                  isUpdated={isUpdated}\n                  IsEditButtonVisible={IsEditButtonVisible}\n                  isEditActive={isEditActive}\n                  isEditActiveId={isEditActiveId}\n                />\n              </div>\n              <div className=\"columnDelete\">\n                <ButtonDeleteCategory\n                  category={category}\n                  updateAfterDelete={this.updateAfterDelete}\n                />\n              </div>\n            </div>\n          </li>\n        ))}\n      </>\n    );\n  }\n}\n\nexport default EditCategoryPageColumns;\n"]},"metadata":{},"sourceType":"module"}
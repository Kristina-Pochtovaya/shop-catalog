{"ast":null,"code":"var _jsxFileName = \"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/basket/components/PopUpsWrapperComponent.jsx\";\nimport React from 'react';\nimport { shallow, configure } from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\nimport Basket from './BasketComponent';\nimport addRemoveScroll from '../../../common/utils/addRemoveScroll';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\njest.mock('../../../common/utils/addRemoveScroll');\nconfigure({\n  adapter: new Adapter()\n});\ndescribe('rendering Basket components', () => {\n  let component;\n  let setState;\n  let init;\n  beforeEach(() => {\n    setState = jest.fn();\n    const useStateSpy = jest.spyOn(React, 'useState');\n    init = false;\n    useStateSpy.mockImplementation(() => [init, setState]);\n    setState.mockReturnValue(true);\n    component = shallow( /*#__PURE__*/_jsxDEV(Basket, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 25\n    }, this));\n  });\n  afterEach(() => {\n    jest.clearAllMocks();\n  });\n  it('should call setState and addRemoveScroll functions after clicking on teh button .buttonOrderBuy', () => {\n    expect(addRemoveScroll).toHaveBeenCalledTimes(0);\n    expect(setState).toHaveBeenCalledTimes(0);\n    component.find('.buttonOrderBuy').simulate('click');\n    expect(addRemoveScroll).toHaveBeenCalledTimes(1);\n    expect(setState).toHaveBeenCalledTimes(1);\n  });\n  it('should not render WithRouterPopupBasket by default', () => {\n    expect(component.find('.popupBasket')).toHaveLength(0);\n    init = true;\n    component = shallow( /*#__PURE__*/_jsxDEV(Basket, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }, this));\n    expect(component.find('.popupBasket')).toHaveLength(1);\n  });\n});","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/basket/components/PopUpsWrapperComponent.jsx"],"names":["React","shallow","configure","Adapter","Basket","addRemoveScroll","jest","mock","adapter","describe","component","setState","init","beforeEach","fn","useStateSpy","spyOn","mockImplementation","mockReturnValue","afterEach","clearAllMocks","it","expect","toHaveBeenCalledTimes","find","simulate","toHaveLength"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,QAAnC;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,eAAP,MAA4B,uCAA5B;;AAEAC,IAAI,CAACC,IAAL,CAAU,uCAAV;AAEAL,SAAS,CAAC;AAAEM,EAAAA,OAAO,EAAE,IAAIL,OAAJ;AAAX,CAAD,CAAT;AACAM,QAAQ,CAAC,6BAAD,EAAgC,MAAM;AAC5C,MAAIC,SAAJ;AACA,MAAIC,QAAJ;AACA,MAAIC,IAAJ;AACAC,EAAAA,UAAU,CAAC,MAAM;AACfF,IAAAA,QAAQ,GAAGL,IAAI,CAACQ,EAAL,EAAX;AACA,UAAMC,WAAW,GAAGT,IAAI,CAACU,KAAL,CAAWhB,KAAX,EAAkB,UAAlB,CAApB;AACAY,IAAAA,IAAI,GAAG,KAAP;AACAG,IAAAA,WAAW,CAACE,kBAAZ,CAA+B,MAAM,CAACL,IAAD,EAAOD,QAAP,CAArC;AACAA,IAAAA,QAAQ,CAACO,eAAT,CAAyB,IAAzB;AACAR,IAAAA,SAAS,GAAGT,OAAO,eAAC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAD,CAAnB;AACD,GAPS,CAAV;AASAkB,EAAAA,SAAS,CAAC,MAAM;AACdb,IAAAA,IAAI,CAACc,aAAL;AACD,GAFQ,CAAT;AAIAC,EAAAA,EAAE,CAAC,iGAAD,EAAoG,MAAM;AAC1GC,IAAAA,MAAM,CAACjB,eAAD,CAAN,CAAwBkB,qBAAxB,CAA8C,CAA9C;AACAD,IAAAA,MAAM,CAACX,QAAD,CAAN,CAAiBY,qBAAjB,CAAuC,CAAvC;AACAb,IAAAA,SAAS,CAACc,IAAV,CAAe,iBAAf,EAAkCC,QAAlC,CAA2C,OAA3C;AACAH,IAAAA,MAAM,CAACjB,eAAD,CAAN,CAAwBkB,qBAAxB,CAA8C,CAA9C;AACAD,IAAAA,MAAM,CAACX,QAAD,CAAN,CAAiBY,qBAAjB,CAAuC,CAAvC;AACD,GANC,CAAF;AAQAF,EAAAA,EAAE,CAAC,oDAAD,EAAuD,MAAM;AAC7DC,IAAAA,MAAM,CAACZ,SAAS,CAACc,IAAV,CAAe,cAAf,CAAD,CAAN,CAAuCE,YAAvC,CAAoD,CAApD;AACAd,IAAAA,IAAI,GAAG,IAAP;AACAF,IAAAA,SAAS,GAAGT,OAAO,eAAC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAD,CAAnB;AACAqB,IAAAA,MAAM,CAACZ,SAAS,CAACc,IAAV,CAAe,cAAf,CAAD,CAAN,CAAuCE,YAAvC,CAAoD,CAApD;AACD,GALC,CAAF;AAMD,CA/BO,CAAR","sourcesContent":["import React from 'react';\nimport { shallow, configure } from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\nimport Basket from './BasketComponent';\nimport addRemoveScroll from '../../../common/utils/addRemoveScroll';\n\njest.mock('../../../common/utils/addRemoveScroll');\n\nconfigure({ adapter: new Adapter() });\ndescribe('rendering Basket components', () => {\n  let component;\n  let setState;\n  let init;\n  beforeEach(() => {\n    setState = jest.fn();\n    const useStateSpy = jest.spyOn(React, 'useState');\n    init = false;\n    useStateSpy.mockImplementation(() => [init, setState]);\n    setState.mockReturnValue(true);\n    component = shallow(<Basket />);\n  });\n\n  afterEach(() => {\n    jest.clearAllMocks();\n  });\n\n  it('should call setState and addRemoveScroll functions after clicking on teh button .buttonOrderBuy', () => {\n    expect(addRemoveScroll).toHaveBeenCalledTimes(0);\n    expect(setState).toHaveBeenCalledTimes(0);\n    component.find('.buttonOrderBuy').simulate('click');\n    expect(addRemoveScroll).toHaveBeenCalledTimes(1);\n    expect(setState).toHaveBeenCalledTimes(1);\n  });\n\n  it('should not render WithRouterPopupBasket by default', () => {\n    expect(component.find('.popupBasket')).toHaveLength(0);\n    init = true;\n    component = shallow(<Basket />);\n    expect(component.find('.popupBasket')).toHaveLength(1);\n  });\n});\n"]},"metadata":{},"sourceType":"module"}
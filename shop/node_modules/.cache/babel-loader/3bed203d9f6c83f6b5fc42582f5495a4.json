{"ast":null,"code":"var _jsxFileName = \"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/personalAccount/components/PhotoComponent.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport personalAccount from '../../../assets/personal-account/personal-account.jpg';\nimport { ADDPHOTO } from '../../../redux/actions/loginPersonalAccountActions';\nimport postUserPhoto from '../api/post/postUserPhotoRequest';\nimport getUserPhoto from '../api/get/getUserPhotoRequest';\nimport setClassErrorById from '../../../common/untils/setClassErrorById';\nimport FormAddImagePhoto from '../../../common/forms/components/FormAddImagePhotoComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ImageUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateData = value => {\n      this.setState({\n        imagePreviewUrl: value\n      });\n    };\n\n    this.state = {\n      imagePreviewUrl: ''\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      pages\n    } = this.props;\n    await getUserPhoto(pages.loginPersonalAccountReducer.clientEmail, this.updateData);\n  }\n\n  handleSubmit(e) {\n    this.e.preventDefault();\n  }\n\n  handleImageChange(e) {\n    const {\n      pages\n    } = this.props;\n    e.preventDefault();\n    const reader = new FileReader();\n    const file = e.target.files[0];\n\n    if (file) {\n      reader.onloadend = async () => {\n        this.setState({\n          imagePreviewUrl: reader.result\n        });\n        await postUserPhoto(pages.loginPersonalAccountReducer.clientEmail, reader.result, setClassErrorById);\n      };\n\n      reader.readAsDataURL(file);\n    }\n  }\n\n  render() {\n    const {\n      imagePreviewUrl\n    } = this.state;\n    let $imagePreview = null;\n\n    if (imagePreviewUrl) {\n      $imagePreview = /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imagePreviewUrl,\n        className: \"photoPersonalAccount\",\n        title: \"photoPersonalAccount\",\n        alt: \"photoPersonalAccount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this);\n    } else {\n      $imagePreview = /*#__PURE__*/_jsxDEV(\"img\", {\n        src: personalAccount,\n        title: \"photoPersonalAccount\",\n        alt: \"photoPersonalAccount\",\n        className: \"photoPersonalAccount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"previewComponent\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errorPhoto -disabled\",\n        id: \"errorPhoto\",\n        children: \"\\u0420\\u0430\\u0437\\u043C\\u0435\\u0440 \\u0444\\u043E\\u0442\\u043E \\u0441\\u043B\\u0438\\u0448\\u043A\\u043E\\u043C \\u0431\\u043E\\u043B\\u044C\\u0448\\u043E\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormAddImagePhoto, {\n        handleSubmit: this.handleSubmit,\n        imagePreview: $imagePreview,\n        handleImageChange: this.handleImageChange,\n        htmlFor: \"avatar\",\n        name: \"avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst ConnectedImageUpload = connect(state => ({\n  pages: state\n}), dispatch => ({\n  onAddPhoto: photo => dispatch({\n    type: ADDPHOTO.type,\n    payload: {\n      photo\n    }\n  })\n}))(ImageUpload);\nexport default ConnectedImageUpload;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/personalAccount/components/PhotoComponent.jsx"],"names":["React","connect","personalAccount","ADDPHOTO","postUserPhoto","getUserPhoto","setClassErrorById","FormAddImagePhoto","ImageUpload","Component","constructor","props","updateData","value","setState","imagePreviewUrl","state","componentDidMount","pages","loginPersonalAccountReducer","clientEmail","handleSubmit","e","preventDefault","handleImageChange","reader","FileReader","file","target","files","onloadend","result","readAsDataURL","render","$imagePreview","ConnectedImageUpload","dispatch","onAddPhoto","photo","type","payload"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport personalAccount from '../../../assets/personal-account/personal-account.jpg';\nimport { ADDPHOTO } from '../../../redux/actions/loginPersonalAccountActions';\nimport postUserPhoto from '../api/post/postUserPhotoRequest';\nimport getUserPhoto from '../api/get/getUserPhotoRequest';\nimport setClassErrorById from '../../../common/untils/setClassErrorById';\nimport FormAddImagePhoto from '../../../common/forms/components/FormAddImagePhotoComponent';\n\nclass ImageUpload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imagePreviewUrl: '',\n    };\n  }\n\n  async componentDidMount() {\n    const { pages } = this.props;\n    await getUserPhoto(pages.loginPersonalAccountReducer.clientEmail,\n      this.updateData);\n  }\n\n  handleSubmit(e) {\n    this.e.preventDefault();\n  }\n\n  handleImageChange(e) {\n    const { pages } = this.props;\n    e.preventDefault();\n\n    const reader = new FileReader();\n    const file = e.target.files[0];\n\n    if (file) {\n      reader.onloadend = async () => {\n        this.setState({\n          imagePreviewUrl: reader.result,\n        });\n        await postUserPhoto(\n          pages.loginPersonalAccountReducer.clientEmail,\n          reader.result, setClassErrorById,\n        );\n      };\n\n      reader.readAsDataURL(file);\n    }\n  }\n\n  updateData = (value) => { this.setState({ imagePreviewUrl: value }); }\n\n  render() {\n    const { imagePreviewUrl } = this.state;\n    let $imagePreview = null;\n\n    if (imagePreviewUrl) {\n      $imagePreview = (\n        <img\n          src={imagePreviewUrl}\n          className=\"photoPersonalAccount\"\n          title=\"photoPersonalAccount\"\n          alt=\"photoPersonalAccount\"\n        />\n      );\n    } else {\n      $imagePreview = (\n        <img\n          src={personalAccount}\n          title=\"photoPersonalAccount\"\n          alt=\"photoPersonalAccount\"\n          className=\"photoPersonalAccount\"\n        />\n      );\n    }\n    return (\n      <div className=\"previewComponent\">\n        <p className=\"errorPhoto -disabled\" id=\"errorPhoto\">Размер фото слишком большой</p>\n        <FormAddImagePhoto\n          handleSubmit={this.handleSubmit}\n          imagePreview={$imagePreview}\n          handleImageChange={this.handleImageChange}\n          htmlFor=\"avatar\"\n          name=\"avatar\"\n        />\n      </div>\n    );\n  }\n}\n\nconst ConnectedImageUpload = connect(\n  (state) => ({\n    pages: state,\n  }),\n  (dispatch) => ({\n    onAddPhoto: (photo) => dispatch({\n      type: ADDPHOTO.type,\n      payload: { photo },\n    }),\n  }),\n)(ImageUpload);\n\nexport default ConnectedImageUpload;\n"]},"metadata":{},"sourceType":"module"}
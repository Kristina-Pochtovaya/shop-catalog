{"ast":null,"code":"var _jsxFileName = \"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/basket/components/PopUpBasketOrderComponent.jsx\";\nimport React from 'react';\nimport addRemoveScroll from '../../../common/utils/addRemoveScroll';\nimport formatPhoneNumber from '../../../common/utils/formatPhoneNumber';\nimport InputWitchCkeckingNotNull from '../../../common/components/input/components/InputWitchCkeckingNotNullComponent';\nimport removeErrorNotNull from '../../../common/utils/removeErrorNotNull';\nimport BackSymbol from '../../../common/components/icons/components/BackSymbol';\nimport handleButtonClick from '../utils/handleButtonClick';\nimport setErrorNotNullGroupsPopUpBasket from '../utils/setErrorNotNullGroupsPopUpBasket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass PopUpBasketOrder extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateData = (value, name) => {\n      if (name === 'clientName') {\n        this.setState({\n          clientName: value\n        });\n      }\n\n      if (name === 'clientAddress') {\n        this.setState({\n          clientAddress: value\n        });\n      }\n\n      if (name === 'phone') {\n        this.setState({\n          clientPhone: formatPhoneNumber(value)\n        });\n      }\n    };\n\n    this.updatePhone = () => this.setState({\n      clientPhone: '+375'\n    });\n\n    const {\n      pages\n    } = this.props;\n    this.state = {\n      clientName: '' || pages.loginPersonalAccountReducer.firstName,\n      clientPhone: pages.loginPersonalAccountReducer.phone ? pages.loginPersonalAccountReducer.phone : '+375(__)___-__-__',\n      clientAddress: '' || pages.loginPersonalAccountReducer.address,\n      clientMessage: ''\n    };\n  }\n\n  render() {\n    const {\n      onAddClientInformation,\n      items,\n      setPopupOrderActive,\n      setpopupSmthWentWrongActive,\n      setPopupThanksActive,\n      pages\n    } = this.props;\n    const {\n      clientName,\n      clientPhone,\n      clientAddress,\n      clientMessage\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popupOrder-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u041A\\u0443\\u043F\\u0438\\u0442\\u044C \\u0432 1 \\u043A\\u043B\\u0438\\u043A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => {\n            setPopupOrderActive(false);\n            addRemoveScroll();\n          },\n          role: \"presentation\",\n          children: /*#__PURE__*/_jsxDEV(BackSymbol, {\n            className: \"backSymbol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"nameString -required\",\n              children: \"\\u0418\\u043C\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputWitchCkeckingNotNull, {\n              initialValue: clientName,\n              type: \"text\",\n              name: \"clientName\",\n              classInput: \"nameInput\",\n              classSymbol: \"nameSymbol\",\n              updateData: this.updateData,\n              removeErrorNotNull: removeErrorNotNull\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"phone\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"phoneString -required\",\n              children: \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputWitchCkeckingNotNull, {\n              initialValue: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"` $\", clientPhone, \"`\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this),\n              type: \"tel\",\n              name: \"phone\",\n              classInput: \"phoneInput\",\n              classSymbol: \"phoneSymbol\",\n              updateData: this.updateData,\n              removeErrorNotNull: removeErrorNotNull,\n              removeErrorLength: false,\n              classerrorLength: \"\",\n              onEnterEmail: \"\",\n              minLength: \"13\",\n              maxLength: \"13\",\n              placeholder: \"+375 (__) ___-__-__\",\n              updatePhone: this.updatePhone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"address\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"addressString -required\",\n              children: \"\\u0410\\u0434\\u0440\\u0435\\u0441:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputWitchCkeckingNotNull, {\n              initialValue: clientAddress,\n              type: \"text\",\n              name: \"clientAddress\",\n              classInput: \"addressInput\",\n              classSymbol: \"addressSymbol\",\n              updateData: this.updateData,\n              removeErrorNotNull: removeErrorNotNull\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"messageString\",\n              children: \"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"messageInput\",\n              name: \"MESSAGE\",\n              value: clientMessage,\n              onChange: event => this.setState({\n                clientMessage: event.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"buttonOrder\",\n            onClick: () => clientName && clientPhone.length >= 13 && !clientPhone.includes('_') && clientAddress ? handleButtonClick(setPopupOrderActive, onAddClientInformation, setpopupSmthWentWrongActive, setPopupThanksActive, clientName, clientPhone, clientAddress, clientMessage, pages, items) : setErrorNotNullGroupsPopUpBasket(clientName, clientPhone, clientAddress),\n            children: \"\\u041A\\u0443\\u043F\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default PopUpBasketOrder;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/basket/components/PopUpBasketOrderComponent.jsx"],"names":["React","addRemoveScroll","formatPhoneNumber","InputWitchCkeckingNotNull","removeErrorNotNull","BackSymbol","handleButtonClick","setErrorNotNullGroupsPopUpBasket","PopUpBasketOrder","Component","constructor","props","updateData","value","name","setState","clientName","clientAddress","clientPhone","updatePhone","pages","state","loginPersonalAccountReducer","firstName","phone","address","clientMessage","render","onAddClientInformation","items","setPopupOrderActive","setpopupSmthWentWrongActive","setPopupThanksActive","event","target","length","includes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport addRemoveScroll from '../../../common/utils/addRemoveScroll';\nimport formatPhoneNumber from '../../../common/utils/formatPhoneNumber';\nimport InputWitchCkeckingNotNull from '../../../common/components/input/components/InputWitchCkeckingNotNullComponent';\nimport removeErrorNotNull from '../../../common/utils/removeErrorNotNull';\nimport BackSymbol from '../../../common/components/icons/components/BackSymbol';\nimport handleButtonClick from '../utils/handleButtonClick';\nimport setErrorNotNullGroupsPopUpBasket from '../utils/setErrorNotNullGroupsPopUpBasket';\n\nclass PopUpBasketOrder extends React.Component {\n  constructor(props) {\n    super(props);\n    const { pages } = this.props;\n    this.state = {\n      clientName: '' || pages.loginPersonalAccountReducer.firstName,\n      clientPhone: pages.loginPersonalAccountReducer.phone ? pages.loginPersonalAccountReducer.phone : '+375(__)___-__-__',\n      clientAddress: '' || pages.loginPersonalAccountReducer.address,\n      clientMessage: '',\n    };\n  }\n\n  updateData = (value, name) => {\n    if (name === 'clientName') { this.setState({ clientName: value }); }\n    if (name === 'clientAddress') { this.setState({ clientAddress: value }); }\n    if (name === 'phone') { this.setState({ clientPhone: formatPhoneNumber(value) }); }\n  }\n\n  updatePhone = () => this.setState({ clientPhone: '+375' });\n\n  render() {\n    const {\n      onAddClientInformation, items, setPopupOrderActive, setpopupSmthWentWrongActive,\n      setPopupThanksActive, pages,\n    } = this.props;\n    const {\n      clientName, clientPhone, clientAddress, clientMessage,\n    } = this.state;\n\n    return (\n      <>\n        <div className=\"popupOrder-box\">\n          <h2>Купить в 1 клик</h2>\n          <div\n            onClick={() => {\n              setPopupOrderActive(false);\n              addRemoveScroll();\n            }}\n            role=\"presentation\"\n          >\n            <BackSymbol className=\"backSymbol\" />\n          </div>\n          <form className=\"form\">\n            <div className=\"name\">\n              <p className=\"nameString -required\">Имя</p>\n              <InputWitchCkeckingNotNull\n                initialValue={clientName}\n                type=\"text\"\n                name=\"clientName\"\n                classInput=\"nameInput\"\n                classSymbol=\"nameSymbol\"\n                updateData={this.updateData}\n                removeErrorNotNull={removeErrorNotNull}\n              />\n            </div>\n            <div className=\"phone\">\n              <p className=\"phoneString -required\">Телефон:</p>\n              <InputWitchCkeckingNotNull\n                initialValue={(\n                  <p>\n                    ` $\n                    {clientPhone}\n                    `\n                  </p>\n                )}\n                type=\"tel\"\n                name=\"phone\"\n                classInput=\"phoneInput\"\n                classSymbol=\"phoneSymbol\"\n                updateData={this.updateData}\n                removeErrorNotNull={removeErrorNotNull}\n                removeErrorLength={false}\n                classerrorLength=\"\"\n                onEnterEmail=\"\"\n                minLength=\"13\"\n                maxLength=\"13\"\n                placeholder=\"+375 (__) ___-__-__\"\n                updatePhone={this.updatePhone}\n              />\n            </div>\n            <div className=\"address\">\n              <p className=\"addressString -required\">Адрес:</p>\n              <InputWitchCkeckingNotNull\n                initialValue={clientAddress}\n                type=\"text\"\n                name=\"clientAddress\"\n                classInput=\"addressInput\"\n                classSymbol=\"addressSymbol\"\n                updateData={this.updateData}\n                removeErrorNotNull={removeErrorNotNull}\n              />\n            </div>\n            <div className=\"message\">\n              <p className=\"messageString\">Сообщение</p>\n              <textarea\n                className=\"messageInput\"\n                name=\"MESSAGE\"\n                value={clientMessage}\n                onChange={(event) => this.setState({\n                  clientMessage: event.target.value,\n                })}\n              />\n            </div>\n            <button\n              type=\"submit\"\n              className=\"buttonOrder\"\n              onClick={() => ((clientName && (clientPhone.length >= 13 && !(clientPhone.includes('_'))) && clientAddress)\n                ? handleButtonClick(setPopupOrderActive, onAddClientInformation,\n                  setpopupSmthWentWrongActive, setPopupThanksActive, clientName, clientPhone,\n                  clientAddress, clientMessage, pages, items)\n                : setErrorNotNullGroupsPopUpBasket(\n                  clientName, clientPhone, clientAddress,\n                ))}\n            >\n              Купить\n            </button>\n\n          </form>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default PopUpBasketOrder;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"const handleButtonClickRegistration = (firstName, lastName, email, history, password, phoneNumber, address, postUsers, setClassIncorrectUser, onEnter, onLogin, executeFunctionsIfNoErrorsLoginRegistration, passwordNewRepeat, processResultRegistration, setErrorNotNullGroupsRegistration, ClassFirstNameInput, ClassFirstNameSymbol, ClassEmailInput, ClassLastNameInput, ClassLastNameSymbol, ClassEmailSymbol, errorLength, clientPhoneInput, clientPhoneSymbol, clientAddresSymbol, clientAddresInput, ClassPasswordNewInput, ClassPasswordNewSymbol, ClassPasswordRepeatInput, ClassPasswordRepeatSymbol, setErrorNotNull, setErrorIncorrectLength) => {\n  if (firstName && lastName && email && passwordNewRepeat && phoneNumber && address && password === passwordNewRepeat && password.length >= 9) {\n    processResultRegistration(firstName, lastName, email, history, password, phoneNumber, address, postUsers, setClassIncorrectUser, onEnter, onLogin, executeFunctionsIfNoErrorsLoginRegistration);\n  } else {\n    setErrorNotNullGroupsRegistration(firstName, ClassFirstNameInput, ClassFirstNameSymbol, lastName, ClassLastNameInput, ClassLastNameSymbol, email, ClassEmailInput, ClassEmailSymbol, errorLength, phoneNumber, clientPhoneInput, clientPhoneSymbol, address, clientAddresInput, clientAddresSymbol, password, ClassPasswordNewInput, ClassPasswordNewSymbol, passwordNewRepeat, ClassPasswordRepeatInput, ClassPasswordRepeatSymbol, setErrorNotNull, setErrorIncorrectLength);\n  }\n};\n\nexport default handleButtonClickRegistration;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/registration/utils/handleButtonClickRegistration.jsx"],"names":["handleButtonClickRegistration","firstName","lastName","email","history","password","phoneNumber","address","postUsers","setClassIncorrectUser","onEnter","onLogin","executeFunctionsIfNoErrorsLoginRegistration","passwordNewRepeat","processResultRegistration","setErrorNotNullGroupsRegistration","ClassFirstNameInput","ClassFirstNameSymbol","ClassEmailInput","ClassLastNameInput","ClassLastNameSymbol","ClassEmailSymbol","errorLength","clientPhoneInput","clientPhoneSymbol","clientAddresSymbol","clientAddresInput","ClassPasswordNewInput","ClassPasswordNewSymbol","ClassPasswordRepeatInput","ClassPasswordRepeatSymbol","setErrorNotNull","setErrorIncorrectLength","length"],"mappings":"AAAA,MAAMA,6BAA6B,GAAG,CACpCC,SADoC,EACzBC,QADyB,EACfC,KADe,EACRC,OADQ,EACCC,QADD,EACWC,WADX,EACwBC,OADxB,EACiCC,SADjC,EAEpCC,qBAFoC,EAEbC,OAFa,EAEJC,OAFI,EAEKC,2CAFL,EAGpCC,iBAHoC,EAGjBC,yBAHiB,EAGUC,iCAHV,EAIpCC,mBAJoC,EAIfC,oBAJe,EAIOC,eAJP,EAIwBC,kBAJxB,EAKpCC,mBALoC,EAKfC,gBALe,EAKGC,WALH,EAKgBC,gBALhB,EAKkCC,iBALlC,EAMpCC,kBANoC,EAMhBC,iBANgB,EAMGC,qBANH,EAM0BC,sBAN1B,EAOpCC,wBAPoC,EAOVC,yBAPU,EAOiBC,eAPjB,EAOkCC,uBAPlC,KAQjC;AACH,MAAK/B,SAAS,IAAIC,QAAb,IAAyBC,KAAzB,IAAkCU,iBAAlC,IAAuDP,WAAvD,IAAsEC,OAAvE,IACAF,QAAQ,KAAKQ,iBADb,IACoCR,QAAQ,CAAC4B,MAAT,IAAmB,CAD3D,EAC+D;AAC7DnB,IAAAA,yBAAyB,CAACb,SAAD,EAAYC,QAAZ,EAAsBC,KAAtB,EAA6BC,OAA7B,EAAsCC,QAAtC,EAAgDC,WAAhD,EACvBC,OADuB,EACdC,SADc,EACHC,qBADG,EACoBC,OADpB,EAC6BC,OAD7B,EAEvBC,2CAFuB,CAAzB;AAGD,GALD,MAKO;AACLG,IAAAA,iCAAiC,CAACd,SAAD,EAAYe,mBAAZ,EAC/BC,oBAD+B,EACTf,QADS,EACCiB,kBADD,EACqBC,mBADrB,EAE/BjB,KAF+B,EAExBe,eAFwB,EAEPG,gBAFO,EAEWC,WAFX,EAEwBhB,WAFxB,EAG/BiB,gBAH+B,EAGbC,iBAHa,EAGMjB,OAHN,EAGemB,iBAHf,EAI/BD,kBAJ+B,EAIXpB,QAJW,EAIDsB,qBAJC,EAIsBC,sBAJtB,EAK/Bf,iBAL+B,EAKZgB,wBALY,EAKcC,yBALd,EAM/BC,eAN+B,EAMdC,uBANc,CAAjC;AAOD;AACF,CAvBD;;AAyBA,eAAehC,6BAAf","sourcesContent":["const handleButtonClickRegistration = (\n  firstName, lastName, email, history, password, phoneNumber, address, postUsers,\n  setClassIncorrectUser, onEnter, onLogin, executeFunctionsIfNoErrorsLoginRegistration,\n  passwordNewRepeat, processResultRegistration, setErrorNotNullGroupsRegistration,\n  ClassFirstNameInput, ClassFirstNameSymbol, ClassEmailInput, ClassLastNameInput,\n  ClassLastNameSymbol, ClassEmailSymbol, errorLength, clientPhoneInput, clientPhoneSymbol,\n  clientAddresSymbol, clientAddresInput, ClassPasswordNewInput, ClassPasswordNewSymbol,\n  ClassPasswordRepeatInput, ClassPasswordRepeatSymbol, setErrorNotNull, setErrorIncorrectLength,\n) => {\n  if ((firstName && lastName && email && passwordNewRepeat && phoneNumber && address)\n  && (password === passwordNewRepeat) && (password.length >= 9)) {\n    processResultRegistration(firstName, lastName, email, history, password, phoneNumber,\n      address, postUsers, setClassIncorrectUser, onEnter, onLogin,\n      executeFunctionsIfNoErrorsLoginRegistration);\n  } else {\n    setErrorNotNullGroupsRegistration(firstName, ClassFirstNameInput,\n      ClassFirstNameSymbol, lastName, ClassLastNameInput, ClassLastNameSymbol,\n      email, ClassEmailInput, ClassEmailSymbol, errorLength, phoneNumber,\n      clientPhoneInput, clientPhoneSymbol, address, clientAddresInput,\n      clientAddresSymbol, password, ClassPasswordNewInput, ClassPasswordNewSymbol,\n      passwordNewRepeat, ClassPasswordRepeatInput, ClassPasswordRepeatSymbol,\n      setErrorNotNull, setErrorIncorrectLength);\n  }\n};\n\nexport default handleButtonClickRegistration;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/common/loginForm/components/LoginComponent.jsx\";\nimport React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { ENTER, LOGIN, AUTOCOMPLETE } from '../../../redux/actions/loginPersonalAccountActions';\nimport setErrorNotNull from '../../untils/setErrorNotNull';\nimport InputWitchCkeckingNotNull from '../../input/components/InputWitchCkeckingNotNullComponent';\nimport postLoginRequest from '../api/post/postLoginRequest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clientLogin: '',\n      clientLoginInput: 'loginInput',\n      clientLoginSymbol: 'errorSymbol',\n      clientPassword: '',\n      clientPasswordInput: 'passwordInput',\n      clientPasswordSymbol: 'errorSymbolPassword'\n    };\n    this.updateData = this.updateData.bind(this);\n  }\n\n  updateData(value, name) {\n    if (name === 'clientLogin') {\n      this.setState({\n        clientLogin: value\n      });\n    }\n\n    if (name === 'clientPassword') {\n      this.setState({\n        clientPassword: value\n      });\n    }\n  }\n\n  render() {\n    const {\n      clientLogin,\n      clientLoginInput,\n      clientLoginSymbol,\n      clientPassword,\n      clientPasswordInput,\n      clientPasswordSymbol\n    } = this.state;\n    const {\n      onLogin,\n      onEnter,\n      history,\n      pages,\n      onAdd\n    } = this.props;\n\n    async function handleButtonClick() {\n      const incorrectLoginOrPassword = document.getElementById('incorrectLoginOrPassword');\n      const result = await postLoginRequest(clientLogin, clientPassword);\n\n      if (result === 'incorrectUserOrPassword') {\n        incorrectLoginOrPassword.setAttribute('class', 'incorrectLoginOrPassword');\n      } else {\n        onEnter(false, true) && onLogin(false, false, false) && history.push('/personal');\n        onAdd(result.email, result.phone, result.address);\n      }\n    }\n\n    console.log(pages.loginPersonalAccountReducer.clientEmail);\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"incorrectLoginOrPassword\",\n        className: \"userNotFoundBlock -disabled\",\n        children: \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F \\u0441 \\u0442\\u0430\\u043A\\u0438\\u043C email \\u043D\\u0435 \\u0441\\u0443\\u0449\\u0435\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442 \\u0438\\u043B\\u0438 \\u043D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loginString -required\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputWitchCkeckingNotNull, {\n          initialValue: clientLogin,\n          type: \"email\",\n          name: \"clientLogin\",\n          classInput: clientLoginInput,\n          classSymbol: clientLoginSymbol,\n          updateData: this.updateData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"passwordString -required\",\n          children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputWitchCkeckingNotNull, {\n          initialValue: clientPassword,\n          type: \"password\",\n          name: \"clientPassword\",\n          classInput: clientPasswordInput,\n          classSymbol: clientPasswordSymbol,\n          updateData: this.updateData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), clientLogin && clientPassword ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"entranceButton\",\n        onClick: () => {\n          handleButtonClick();\n        },\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"entranceButton\",\n        onClick: () => {\n          if (!clientLogin) {\n            setErrorNotNull(clientLoginInput, clientLoginSymbol);\n          }\n\n          if (!clientPassword) {\n            setErrorNotNull(clientPasswordInput, clientPasswordSymbol);\n          }\n        },\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"forgotPasswordButton\",\n        onClick: () => {\n          onLogin(true, false, true);\n        },\n        children: \"\\u0417\\u0430\\u0431\\u044B\\u043B\\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/registration\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"registrationButton\",\n          onClick: () => onLogin(false, false, false),\n          children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst ConnectedLogin = connect(state => ({\n  pages: state\n}), dispatch => ({\n  onEnter: (loginIsVisible, personAccountIsVisible) => dispatch({\n    type: ENTER.type,\n    payload: {\n      loginIsVisible,\n      personAccountIsVisible\n    }\n  }),\n  onLogin: (loginFormIsVisible, loginFormLoginPageIsVisible, loginFormForgetPasswordIsVisible) => dispatch({\n    type: LOGIN.type,\n    payload: {\n      loginFormIsVisible,\n      loginFormLoginPageIsVisible,\n      loginFormForgetPasswordIsVisible\n    }\n  }),\n  onAdd: (email, phone, address) => dispatch({\n    type: AUTOCOMPLETE.type,\n    payload: {\n      email,\n      phone,\n      address\n    }\n  })\n}))(Login);\nexport default _c = withRouter(ConnectedLogin);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/common/loginForm/components/LoginComponent.jsx"],"names":["React","Link","withRouter","connect","ENTER","LOGIN","AUTOCOMPLETE","setErrorNotNull","InputWitchCkeckingNotNull","postLoginRequest","Login","Component","constructor","props","state","clientLogin","clientLoginInput","clientLoginSymbol","clientPassword","clientPasswordInput","clientPasswordSymbol","updateData","bind","value","name","setState","render","onLogin","onEnter","history","pages","onAdd","handleButtonClick","incorrectLoginOrPassword","document","getElementById","result","setAttribute","push","email","phone","address","console","log","loginPersonalAccountReducer","clientEmail","ConnectedLogin","dispatch","loginIsVisible","personAccountIsVisible","type","payload","loginFormIsVisible","loginFormLoginPageIsVisible","loginFormForgetPasswordIsVisible"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { ENTER, LOGIN, AUTOCOMPLETE } from '../../../redux/actions/loginPersonalAccountActions';\nimport setErrorNotNull from '../../untils/setErrorNotNull';\nimport InputWitchCkeckingNotNull from '../../input/components/InputWitchCkeckingNotNullComponent';\nimport postLoginRequest from '../api/post/postLoginRequest';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clientLogin: '',\n      clientLoginInput: 'loginInput',\n      clientLoginSymbol: 'errorSymbol',\n      clientPassword: '',\n      clientPasswordInput: 'passwordInput',\n      clientPasswordSymbol: 'errorSymbolPassword',\n    };\n    this.updateData = this.updateData.bind(this);\n  }\n\n  updateData(value, name) {\n    if (name === 'clientLogin') { this.setState({ clientLogin: value }); }\n    if (name === 'clientPassword') { this.setState({ clientPassword: value }); }\n  }\n\n  render() {\n    const {\n      clientLogin, clientLoginInput, clientLoginSymbol,\n      clientPassword, clientPasswordInput, clientPasswordSymbol,\n    } = this.state;\n    const {\n      onLogin, onEnter, history, pages, onAdd,\n    } = this.props;\n    async function handleButtonClick() {\n      const incorrectLoginOrPassword = document.getElementById('incorrectLoginOrPassword');\n      const result = await postLoginRequest(clientLogin, clientPassword);\n      if (result === 'incorrectUserOrPassword') {\n        incorrectLoginOrPassword.setAttribute('class', 'incorrectLoginOrPassword');\n      } else {\n        onEnter(false, true) && onLogin(false, false, false) && history.push('/personal');\n        onAdd(result.email, result.phone, result.address);\n      }\n    }\n    console.log(pages.loginPersonalAccountReducer.clientEmail);\n\n    return (\n      <form className=\"form\">\n        <p id=\"incorrectLoginOrPassword\" className=\"userNotFoundBlock -disabled\">Пользователя с таким email не существует или неверный пароль</p>\n        <div className=\"login\">\n          <p className=\"loginString -required\">Email:</p>\n          <InputWitchCkeckingNotNull\n            initialValue={clientLogin}\n            type=\"email\"\n            name=\"clientLogin\"\n            classInput={clientLoginInput}\n            classSymbol={clientLoginSymbol}\n            updateData={this.updateData}\n          />\n        </div>\n        <div className=\"password\">\n          <p className=\"passwordString -required\">Пароль:</p>\n          <InputWitchCkeckingNotNull\n            initialValue={clientPassword}\n            type=\"password\"\n            name=\"clientPassword\"\n            classInput={clientPasswordInput}\n            classSymbol={clientPasswordSymbol}\n            updateData={this.updateData}\n          />\n        </div>\n        {clientLogin && clientPassword ? (\n          <button\n            type=\"button\"\n            className=\"entranceButton\"\n            onClick={() => {\n              handleButtonClick();\n            }}\n          >\n            Войти\n          </button>\n        ) : (\n          <button\n            type=\"button\"\n            className=\"entranceButton\"\n            onClick={() => {\n              if (!clientLogin) {\n                setErrorNotNull(clientLoginInput, clientLoginSymbol);\n              }\n              if (!clientPassword) {\n                setErrorNotNull(clientPasswordInput, clientPasswordSymbol);\n              }\n            }}\n          >\n            Войти\n          </button>\n        )}\n        <button\n          type=\"button\"\n          className=\"forgotPasswordButton\"\n          onClick={() => {\n            onLogin(true, false, true);\n          }}\n        >\n          Забыли пароль?\n        </button>\n        <Link to=\"/registration\">\n          <button\n            type=\"button\"\n            className=\"registrationButton\"\n            onClick={() => onLogin(false, false, false)}\n          >\n            Регистрация\n          </button>\n        </Link>\n      </form>\n\n    );\n  }\n}\n\nconst ConnectedLogin = connect(\n  (state) => ({\n    pages: state,\n  }),\n  (dispatch) => ({\n    onEnter: (loginIsVisible, personAccountIsVisible) => dispatch({\n      type: ENTER.type,\n      payload: { loginIsVisible, personAccountIsVisible },\n    }),\n    onLogin: (\n      loginFormIsVisible, loginFormLoginPageIsVisible, loginFormForgetPasswordIsVisible,\n    ) => dispatch({\n      type: LOGIN.type,\n      payload: {\n        loginFormIsVisible, loginFormLoginPageIsVisible, loginFormForgetPasswordIsVisible,\n      },\n    }),\n    onAdd: (\n      email, phone, address,\n    ) => dispatch({\n      type: AUTOCOMPLETE.type,\n      payload: {\n        email, phone, address,\n      },\n    }),\n  }),\n)(Login);\n\nexport default withRouter(ConnectedLogin);\n"]},"metadata":{},"sourceType":"module"}
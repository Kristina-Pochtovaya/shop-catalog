{"ast":null,"code":"import axios from 'axios';\nimport serverUrl from '../../../../common/constants/urls';\nimport transliterate from '../../../../common/untils/transliterate';\nconst newCategory = '/add-product';\n\nasync function postNewProduct(productName, image, categoryName, productPrice, productInStock, categoriesArray) {\n  const errorImage = document.getElementById('errorNewImage');\n  const imgAlt = transliterate(productName);\n  const imgTitle = imgAlt;\n  const categoryId = categoriesArray.filter(category => category.category === categoryName).map(category => category.id);\n  const payload = {\n    data: {\n      categoryId,\n      description: productName,\n      category: categoryName,\n      imgAlt,\n      imgTitle,\n      image,\n      price: productPrice,\n      counter: 1,\n      inStock: productInStock\n    }\n  };\n\n  try {\n    const response = await axios.post(`${serverUrl}${newCategory}`, {\n      payload,\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    const result = response.data;\n    errorImage.setAttribute('class', 'errorNewImage -disabled');\n    return result;\n  } catch (error) {\n    errorImage.setAttribute('class', 'errorNewImage');\n    return null;\n  }\n}\n\nexport default postNewProduct;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/editProducts/api/post/postNewProduct.jsx"],"names":["axios","serverUrl","transliterate","newCategory","postNewProduct","productName","image","categoryName","productPrice","productInStock","categoriesArray","errorImage","document","getElementById","imgAlt","imgTitle","categoryId","filter","category","map","id","payload","data","description","price","counter","inStock","response","post","headers","result","setAttribute","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,aAAP,MAA0B,yCAA1B;AAEA,MAAMC,WAAW,GAAG,cAApB;;AAEA,eAAeC,cAAf,CACEC,WADF,EACeC,KADf,EACsBC,YADtB,EACoCC,YADpC,EACkDC,cADlD,EACkEC,eADlE,EAEE;AACA,QAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAnB;AACA,QAAMC,MAAM,GAAGZ,aAAa,CAACG,WAAD,CAA5B;AACA,QAAMU,QAAQ,GAAGD,MAAjB;AAEA,QAAME,UAAU,GAAGN,eAAe,CAACO,MAAhB,CAAwBC,QAAD,IAAcA,QAAQ,CAACA,QAAT,KAAsBX,YAA3D,EAChBY,GADgB,CACXD,QAAD,IAAcA,QAAQ,CAACE,EADX,CAAnB;AAGA,QAAMC,OAAO,GAAG;AACdC,IAAAA,IAAI,EAAE;AACJN,MAAAA,UADI;AAEJO,MAAAA,WAAW,EAAElB,WAFT;AAGJa,MAAAA,QAAQ,EAAEX,YAHN;AAIJO,MAAAA,MAJI;AAKJC,MAAAA,QALI;AAMJT,MAAAA,KANI;AAOJkB,MAAAA,KAAK,EAAEhB,YAPH;AAQJiB,MAAAA,OAAO,EAAE,CARL;AASJC,MAAAA,OAAO,EAAEjB;AATL;AADQ,GAAhB;;AAcA,MAAI;AACF,UAAMkB,QAAQ,GAAG,MAAM3B,KAAK,CAAC4B,IAAN,CAAY,GAAE3B,SAAU,GAAEE,WAAY,EAAtC,EAAyC;AAC9DkB,MAAAA,OAD8D;AAE9DQ,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFqD,KAAzC,CAAvB;AAMA,UAAMC,MAAM,GAAGH,QAAQ,CAACL,IAAxB;AACAX,IAAAA,UAAU,CAACoB,YAAX,CAAwB,OAAxB,EAAiC,yBAAjC;AACA,WAAOD,MAAP;AACD,GAVD,CAUE,OAAOE,KAAP,EAAc;AACdrB,IAAAA,UAAU,CAACoB,YAAX,CAAwB,OAAxB,EAAiC,eAAjC;AACA,WAAO,IAAP;AACD;AACF;;AAED,eAAe3B,cAAf","sourcesContent":["import axios from 'axios';\nimport serverUrl from '../../../../common/constants/urls';\nimport transliterate from '../../../../common/untils/transliterate';\n\nconst newCategory = '/add-product';\n\nasync function postNewProduct(\n  productName, image, categoryName, productPrice, productInStock, categoriesArray,\n) {\n  const errorImage = document.getElementById('errorNewImage');\n  const imgAlt = transliterate(productName);\n  const imgTitle = imgAlt;\n\n  const categoryId = categoriesArray.filter((category) => category.category === categoryName)\n    .map((category) => category.id);\n\n  const payload = {\n    data: {\n      categoryId,\n      description: productName,\n      category: categoryName,\n      imgAlt,\n      imgTitle,\n      image,\n      price: productPrice,\n      counter: 1,\n      inStock: productInStock,\n    },\n  };\n\n  try {\n    const response = await axios.post(`${serverUrl}${newCategory}`, {\n      payload,\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    const result = response.data;\n    errorImage.setAttribute('class', 'errorNewImage -disabled');\n    return result;\n  } catch (error) {\n    errorImage.setAttribute('class', 'errorNewImage');\n    return null;\n  }\n}\n\nexport default postNewProduct;\n"]},"metadata":{},"sourceType":"module"}
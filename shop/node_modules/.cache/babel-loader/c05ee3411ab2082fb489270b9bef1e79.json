{"ast":null,"code":"import _regeneratorRuntime from\"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import setErrorNotNullEmail from'./setErrorNotNullEmail';import setErrorNotNullPassword from'./setErrorNotNullPassword';import setErrorNotNullPasswordNewRepeat from'./setErrorNotNullPasswordNewRepeat';import setErrorIncorrectLength from'../../../common/untils/setErrorIncorrectLength';var setErrorNotNullGroupsChangePassword=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(clientEmail,passwordNew,passwordNewRepeat,errorLength){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!clientEmail){setErrorNotNullEmail();}if(!passwordNew){setErrorNotNullPassword();}if(passwordNew!==passwordNewRepeat){setErrorNotNullPasswordNewRepeat();}if(passwordNew.length<9){setErrorIncorrectLength(errorLength);}case 4:case\"end\":return _context.stop();}}},_callee);}));return function setErrorNotNullGroupsChangePassword(_x,_x2,_x3,_x4){return _ref.apply(this,arguments);};}();export default setErrorNotNullGroupsChangePassword;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/changePassword/utils/setErrorNotNullGroupsChangePassword.jsx"],"names":["setErrorNotNullEmail","setErrorNotNullPassword","setErrorNotNullPasswordNewRepeat","setErrorIncorrectLength","setErrorNotNullGroupsChangePassword","clientEmail","passwordNew","passwordNewRepeat","errorLength","length"],"mappings":"iZAAA,MAAOA,CAAAA,oBAAP,KAAiC,wBAAjC,CACA,MAAOC,CAAAA,uBAAP,KAAoC,2BAApC,CACA,MAAOC,CAAAA,gCAAP,KAA6C,oCAA7C,CACA,MAAOC,CAAAA,uBAAP,KAAoC,gDAApC,CAEA,GAAMC,CAAAA,mCAAmC,0FAAG,iBAC1CC,WAD0C,CAC7BC,WAD6B,CAChBC,iBADgB,CACGC,WADH,kHAG1C,GAAI,CAACH,WAAL,CAAkB,CAChBL,oBAAoB,GACrB,CAAC,GAAI,CAACM,WAAL,CAAkB,CAClBL,uBAAuB,GACxB,CAAC,GAAIK,WAAW,GAAKC,iBAApB,CAAuC,CACvCL,gCAAgC,GACjC,CACD,GAAII,WAAW,CAACG,MAAZ,CAAqB,CAAzB,CAA4B,CAC1BN,uBAAuB,CAACK,WAAD,CAAvB,CACD,CAZyC,sDAAH,kBAAnCJ,CAAAA,mCAAmC,wDAAzC,CAeA,cAAeA,CAAAA,mCAAf","sourcesContent":["import setErrorNotNullEmail from './setErrorNotNullEmail';\nimport setErrorNotNullPassword from './setErrorNotNullPassword';\nimport setErrorNotNullPasswordNewRepeat from './setErrorNotNullPasswordNewRepeat';\nimport setErrorIncorrectLength from '../../../common/untils/setErrorIncorrectLength';\n\nconst setErrorNotNullGroupsChangePassword = async (\n  clientEmail, passwordNew, passwordNewRepeat, errorLength,\n) => {\n  if (!clientEmail) {\n    setErrorNotNullEmail();\n  } if (!passwordNew) {\n    setErrorNotNullPassword();\n  } if (passwordNew !== passwordNewRepeat) {\n    setErrorNotNullPasswordNewRepeat();\n  }\n  if (passwordNew.length < 9) {\n    setErrorIncorrectLength(errorLength);\n  }\n};\n\nexport default setErrorNotNullGroupsChangePassword;\n"]},"metadata":{},"sourceType":"module"}
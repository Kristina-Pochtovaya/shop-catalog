{"ast":null,"code":"import axios from 'axios';\nimport serverUrl from '../../../../common/constants/urls';\nconst productsEdit = '/products-edit';\n\nasync function postProducts(id, image, category, categoriesArray, description, price, inStock) {\n  const errorImage = document.getElementById('errorImageString');\n  /*   const categoryId = categoriesArray.\n  filter((categoryItem) => categoryItem.category === category)\n    .map((categoryItem) => categoryItem.id);\n  console.log(categoryId, category, 'te');\n  */\n\n  const payload = {\n    data: {\n      id,\n      categoryId: id,\n      category,\n      description,\n      image,\n      price,\n      inStock\n    }\n  };\n\n  try {\n    const response = await axios.post(`${serverUrl}${productsEdit}`, {\n      payload,\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    const result = response.data;\n    errorImage.setAttribute('class', 'errorImageString -disabled');\n    return result;\n  } catch (error) {\n    errorImage.setAttribute('class', 'errorImageString');\n    return null;\n  }\n}\n\nexport default postProducts;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/editProducts/api/post/postProducts.jsx"],"names":["axios","serverUrl","productsEdit","postProducts","id","image","category","categoriesArray","description","price","inStock","errorImage","document","getElementById","payload","data","categoryId","response","post","headers","result","setAttribute","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AAEA,MAAMC,YAAY,GAAG,gBAArB;;AAEA,eAAeC,YAAf,CAA4BC,EAA5B,EAAgCC,KAAhC,EAAuCC,QAAvC,EAAiDC,eAAjD,EAAkEC,WAAlE,EAA+EC,KAA/E,EAAsFC,OAAtF,EAA+F;AAC7F,QAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,CAAnB;AAEA;AACF;AACA;AACA;AACA;;AACE,QAAMC,OAAO,GAAG;AACdC,IAAAA,IAAI,EAAE;AACJX,MAAAA,EADI;AAEJY,MAAAA,UAAU,EAAEZ,EAFR;AAGJE,MAAAA,QAHI;AAIJE,MAAAA,WAJI;AAKJH,MAAAA,KALI;AAMJI,MAAAA,KANI;AAOJC,MAAAA;AAPI;AADQ,GAAhB;;AAWA,MAAI;AACF,UAAMO,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CAAY,GAAEjB,SAAU,GAAEC,YAAa,EAAvC,EAA0C;AAC/DY,MAAAA,OAD+D;AAE/DK,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFsD,KAA1C,CAAvB;AAMA,UAAMC,MAAM,GAAGH,QAAQ,CAACF,IAAxB;AACAJ,IAAAA,UAAU,CAACU,YAAX,CAAwB,OAAxB,EAAiC,4BAAjC;AACA,WAAOD,MAAP;AACD,GAVD,CAUE,OAAOE,KAAP,EAAc;AACdX,IAAAA,UAAU,CAACU,YAAX,CAAwB,OAAxB,EAAiC,kBAAjC;AACA,WAAO,IAAP;AACD;AACF;;AAED,eAAelB,YAAf","sourcesContent":["import axios from 'axios';\nimport serverUrl from '../../../../common/constants/urls';\n\nconst productsEdit = '/products-edit';\n\nasync function postProducts(id, image, category, categoriesArray, description, price, inStock) {\n  const errorImage = document.getElementById('errorImageString');\n\n  /*   const categoryId = categoriesArray.\n  filter((categoryItem) => categoryItem.category === category)\n    .map((categoryItem) => categoryItem.id);\n  console.log(categoryId, category, 'te');\n */\n  const payload = {\n    data: {\n      id,\n      categoryId: id,\n      category,\n      description,\n      image,\n      price,\n      inStock,\n    },\n  };\n  try {\n    const response = await axios.post(`${serverUrl}${productsEdit}`, {\n      payload,\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    const result = response.data;\n    errorImage.setAttribute('class', 'errorImageString -disabled');\n    return result;\n  } catch (error) {\n    errorImage.setAttribute('class', 'errorImageString');\n    return null;\n  }\n}\n\nexport default postProducts;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/editCategory/components/EditCategoryPageColumnsComponent.jsx\";\nimport React from 'react';\nimport getCategories from '../api/get/getCategories';\nimport InputEditCategoryName from './InputEditCategoryNameComponent';\nimport PopUp from '../../../common/popup/components/PopUpComponent';\nimport PopUpSomethingWentWrong from '../../../common/popup/components/PopUpSomethingWentWrongComponent';\nimport EditCategoryImage from './EditCategoryImageComponent';\nimport postDeleteCategory from '../api/post/postDeleteCategory';\nimport postCategory from '../api/post/postCategory';\nimport ImagePhoto from '../../../common/image/components/ImagePhotoComponent';\nimport ButtonEditCategory from '../../../common/button/components/ButtonEditCategoryComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass EditCategoryPageColumns extends React.Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n\n    this.handleButtonOnSave = async category => {\n      const {\n        isEditActiveId,\n        isUpdated,\n        categoryImage,\n        categoryName\n      } = this.state;\n      await postCategory(isEditActiveId, categoryName, categoryImage);\n      this.setState({\n        isUpdated: !isUpdated,\n        isEditActive: false,\n        isEditActiveId: category.id,\n        IsEditButtonVisible: false\n      });\n    };\n\n    this.handleButtonOnEdit = category => {\n      this.setState({\n        isEditActive: true,\n        isEditActiveId: category.id,\n        IsEditButtonVisible: true,\n        categoryImage: category.image,\n        categoryName: category.category\n      });\n    };\n\n    this.handleButtonOnDelete = () => {\n      const {\n        category\n      } = this.props;\n      postDeleteCategory(category.id, this.updateAfterDelete);\n    };\n\n    this.setpopupSmthWentWrongActive = value => {\n      this.setState({\n        popupSmthWentWrongActive: value\n      });\n    };\n\n    this.updateData = (value, valueisLoading) => {\n      if (this._isMounted) {\n        this.setState({\n          categoriesArray: value,\n          isLoading: valueisLoading\n        });\n      }\n    };\n\n    this.updateCategoryImage = value => this.setState({\n      categoryImage: value\n    });\n\n    this.updateCategoryName = value => this.setState({\n      categoryName: value\n    });\n\n    this.updateAfterDelete = () => {\n      const {\n        isUpdated\n      } = this.state;\n      this.setState({\n        isUpdated: !isUpdated\n      });\n    };\n\n    this.state = {\n      categoriesArray: [],\n      isEditActive: false,\n      isEditActiveId: '',\n      isLoading: false,\n      ErrorMessage: '',\n      popupSmthWentWrongActive: true,\n      IsEditButtonVisible: true,\n      isUpdated: false,\n      categoryImage: '',\n      categoryName: ''\n    };\n  }\n\n  async componentDidMount() {\n    this._isMounted = true;\n    await getCategories(this.updateData, this.setError);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const {\n      isUpdated\n    } = this.state;\n\n    if (prevState.isUpdated !== isUpdated) {\n      await getCategories(this.updateData, this.setError);\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    const {\n      categoriesArray,\n      isEditActive,\n      isEditActiveId,\n      isLoading,\n      ErrorMessage,\n      popupSmthWentWrongActive,\n      IsEditButtonVisible\n    } = this.state;\n\n    if (!isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"-isLoading\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (ErrorMessage) {\n      return /*#__PURE__*/_jsxDEV(PopUp, {\n        active: popupSmthWentWrongActive,\n        setActive: this.setpopupSmthWentWrongActive,\n        children: /*#__PURE__*/_jsxDEV(PopUpSomethingWentWrong, {\n          text: \"\\u041F\\u043E\\u043F\\u0440\\u043E\\u0431\\u0443\\u0439\\u0442\\u0435 \\u0435\\u0449\\u0435 \\u0440\\u0430\\u0437\",\n          setpopupSmthWentWrongActive: this.setpopupSmthWentWrongActive\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: categoriesArray.categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"columns\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnImage\",\n            children: (isEditActive && category.id) !== isEditActiveId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: category.image ? /*#__PURE__*/_jsxDEV(ImagePhoto, {\n                className: \"imageCategory\",\n                imagePreviewUrl: category.image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 27\n              }, this) : /*#__PURE__*/_jsxDEV(ImagePhoto, {\n                className: \"setImage\",\n                imagePreviewUrl: category.imgAlt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 27\n              }, this)\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(EditCategoryImage, {\n              id: category.id,\n              updateCategoryImage: this.updateCategoryImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnName\",\n            children: isEditActive && category.id === isEditActiveId ? /*#__PURE__*/_jsxDEV(InputEditCategoryName, {\n              id: category.id,\n              category: category.category,\n              updateCategoryName: this.updateCategoryName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: category.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnEdit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnDelete\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"deleteCategoryButton\",\n              onClick: this.handleButtonOnDelete,\n              children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)\n      }, category.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this))\n    }, void 0, false);\n  }\n\n}\n\nexport default EditCategoryPageColumns;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/editCategory/components/EditCategoryPageColumnsComponent.jsx"],"names":["React","getCategories","InputEditCategoryName","PopUp","PopUpSomethingWentWrong","EditCategoryImage","postDeleteCategory","postCategory","ImagePhoto","ButtonEditCategory","EditCategoryPageColumns","Component","constructor","props","_isMounted","handleButtonOnSave","category","isEditActiveId","isUpdated","categoryImage","categoryName","state","setState","isEditActive","id","IsEditButtonVisible","handleButtonOnEdit","image","handleButtonOnDelete","updateAfterDelete","setpopupSmthWentWrongActive","value","popupSmthWentWrongActive","updateData","valueisLoading","categoriesArray","isLoading","updateCategoryImage","updateCategoryName","ErrorMessage","componentDidMount","setError","componentDidUpdate","prevProps","prevState","componentWillUnmount","render","categories","map","imgAlt"],"mappings":"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","sourcesContent":["import React from 'react';\nimport getCategories from '../api/get/getCategories';\nimport InputEditCategoryName from './InputEditCategoryNameComponent';\nimport PopUp from '../../../common/popup/components/PopUpComponent';\nimport PopUpSomethingWentWrong from '../../../common/popup/components/PopUpSomethingWentWrongComponent';\nimport EditCategoryImage from './EditCategoryImageComponent';\nimport postDeleteCategory from '../api/post/postDeleteCategory';\nimport postCategory from '../api/post/postCategory';\nimport ImagePhoto from '../../../common/image/components/ImagePhotoComponent';\nimport ButtonEditCategory from '../../../common/button/components/ButtonEditCategoryComponent';\n\nclass EditCategoryPageColumns extends React.Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      categoriesArray: [],\n      isEditActive: false,\n      isEditActiveId: '',\n      isLoading: false,\n      ErrorMessage: '',\n      popupSmthWentWrongActive: true,\n      IsEditButtonVisible: true,\n      isUpdated: false,\n      categoryImage: '',\n      categoryName: '',\n    };\n  }\n\n  async componentDidMount() {\n    this._isMounted = true;\n    await getCategories(this.updateData, this.setError);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const { isUpdated } = this.state;\n    if (prevState.isUpdated !== isUpdated) {\n      await getCategories(this.updateData, this.setError);\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n   handleButtonOnSave = async (category) => {\n     const {\n       isEditActiveId, isUpdated, categoryImage, categoryName,\n     } = this.state;\n     await postCategory(isEditActiveId, categoryName, categoryImage);\n     this.setState({\n       isUpdated: !isUpdated,\n       isEditActive: false,\n       isEditActiveId: category.id,\n       IsEditButtonVisible: false,\n     });\n   }\n\n   handleButtonOnEdit = (category) => {\n     this.setState({\n       isEditActive: true,\n       isEditActiveId: category.id,\n       IsEditButtonVisible: true,\n       categoryImage: category.image,\n       categoryName: category.category,\n     });\n   };\n\n   handleButtonOnDelete = () => {\n     const { category } = this.props;\n     postDeleteCategory(category.id, this.updateAfterDelete);\n   }\n\n  setpopupSmthWentWrongActive = (value) => { this.setState({ popupSmthWentWrongActive: value }); }\n\n  updateData = (value, valueisLoading) => {\n    if (this._isMounted) {\n      this.setState({ categoriesArray: value, isLoading: valueisLoading });\n    }\n  }\n\n  updateCategoryImage = (value) => this.setState({ categoryImage: value })\n\n  updateCategoryName = (value) => this.setState({ categoryName: value })\n\n  updateAfterDelete = () => {\n    const { isUpdated } = this.state;\n    this.setState({ isUpdated: !isUpdated });\n  }\n\n  render() {\n    const {\n      categoriesArray, isEditActive, isEditActiveId, isLoading,\n      ErrorMessage, popupSmthWentWrongActive, IsEditButtonVisible,\n    } = this.state;\n\n    if (!isLoading) {\n      return <div className=\"-isLoading\"> </div>;\n    }\n    if (ErrorMessage) {\n      return (\n        <PopUp\n          active={popupSmthWentWrongActive}\n          setActive={this.setpopupSmthWentWrongActive}\n        >\n          <PopUpSomethingWentWrong\n            text=\"Попробуйте еще раз\"\n            setpopupSmthWentWrongActive={this.setpopupSmthWentWrongActive}\n          />\n        </PopUp>\n      );\n    }\n    return (\n      <>\n        {categoriesArray.categories.map((category) => (\n          <li key={category.id}>\n            <div className=\"columns\">\n              <div className=\"columnImage\">\n                {(isEditActive && category.id) !== isEditActiveId\n                  ? (\n                    <>\n                      {category.image\n                        ? <ImagePhoto className=\"imageCategory\" imagePreviewUrl={category.image} />\n                        : <ImagePhoto className=\"setImage\" imagePreviewUrl={category.imgAlt} />}\n                    </>\n                  ) : (\n                    <EditCategoryImage\n                      id={category.id}\n                      updateCategoryImage={this.updateCategoryImage}\n                    />\n                  )}\n              </div>\n              <div className=\"columnName\">\n                {isEditActive && category.id === isEditActiveId\n                  ? (\n                    <InputEditCategoryName\n                      id={category.id}\n                      category={category.category}\n                      updateCategoryName={this.updateCategoryName}\n                    />\n                  )\n                  : <p>{category.category}</p>}\n              </div>\n              <div className=\"columnEdit\">\n                {/*                 {IsEditButtonVisible &&\n                 isEditActive && category.id === isEditActiveId ? (\n                  <ButtonEditCategory\n                    className=\"editCategoryButton\"\n                    text=\"Сохранить\"\n                    category={category}\n                    handleButtonOnSave={this.handleButtonOnSave}\n                  />\n                ) : (\n                  <button\n                    type=\"button\"\n                    className=\"editCategoryButton\"\n                    onClick={() => this.handleButtonOnEdit(category)}\n                  >\n                    Изменить\n                  </button>\n                )} */}\n              </div>\n              <div className=\"columnDelete\">\n                <button\n                  type=\"button\"\n                  className=\"deleteCategoryButton\"\n                  onClick={this.handleButtonOnDelete}\n                >\n                  Удалить\n                </button>\n              </div>\n            </div>\n          </li>\n        ))}\n      </>\n    );\n  }\n}\n\nexport default EditCategoryPageColumns;\n"]},"metadata":{},"sourceType":"module"}
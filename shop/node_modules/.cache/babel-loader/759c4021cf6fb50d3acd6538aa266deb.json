{"ast":null,"code":"var _jsxFileName = \"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/editProducts/components/EditProductsPageColumnsComponent.jsx\";\nimport React from 'react';\nimport getProducts from '../api/get/getProducts';\nimport getCategories from '../../editCategory/api/get/getCategories';\nimport PopUpErrorLoading from '../../../common/popup/components/PopUpErrorLoadingComponent';\nimport InputEditProductsCategory from './InputEditProductsCategoryComponent';\nimport InputEditProductsInStock from './InputEditProductsInStockComponent';\nimport InputEditProductsName from './InputEditProductsNameComponent';\nimport InputEditProductsPrice from './InputEditCategoryPriceComponent';\nimport postDeleteProduct from '../api/post/postDeleteProduct';\nimport postProducts from '../api/post/postProducts';\nimport ImageColumnEditProducts from './ImageColumnEditProductsComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass EditProductsPageColumns extends React.Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n\n    this.handleButtonOnClick = async e => {\n      const {\n        isEditActiveId,\n        productImage,\n        productCategory,\n        categoriesArray,\n        productName,\n        isUpdated,\n        productPrice,\n        productInStock\n      } = this.state;\n      const {\n        isProductsUpdated,\n        setIsProductsUpdated\n      } = this.props;\n      await postProducts(isEditActiveId, productImage, productCategory, categoriesArray, productName, productPrice, productInStock);\n      this.setState({\n        isUpdated: !isUpdated\n      });\n      isProductsUpdated ? setIsProductsUpdated(false) : setIsProductsUpdated(true);\n    };\n\n    this.setError = errorMessage => this.setState({\n      ErrorMessageProducts: errorMessage\n    });\n\n    this.setErrorCategories = errorMessage => this.setState({\n      ErrorMessageCategories: errorMessage\n    });\n\n    this.setpopupSmthWentWrongActive = value => this.setState({\n      popupSmthWentWrongActive: value\n    });\n\n    this.setEditActive = value => this.setState({\n      isEditActive: value\n    });\n\n    this.updateImage = value => this.setState({\n      productImage: value\n    });\n\n    this.updateProductCategory = (value, array) => {\n      this.setState({\n        productCategory: value,\n        categoriesArray: array\n      });\n    };\n\n    this.updateProductName = value => this.setState({\n      productName: value\n    });\n\n    this.updateProductPrice = value => this.setState({\n      productPrice: value\n    });\n\n    this.updateProductInStock = value => this.setState({\n      productInStock: value\n    });\n\n    this.updateProducts = (value, valueIsLoading) => {\n      if (this._isMounted) {\n        this.setState({\n          productsArray: value,\n          isLoadingProducts: valueIsLoading\n        });\n      }\n    };\n\n    this.updateDataCategories = (value, valueIsLoading) => {\n      if (this._isMounted) {\n        this.setState({\n          categoriesArray: value.categories,\n          isLoadingCategories: valueIsLoading\n        });\n      }\n    };\n\n    this.updateAfterDelete = () => {\n      const {\n        isUpdated\n      } = this.state;\n      this.setState({\n        isUpdated: !isUpdated\n      });\n    };\n\n    this.state = {\n      productsArray: [],\n      isEditActive: false,\n      isEditActiveId: '',\n      isUpdated: false,\n      isLoadingProducts: false,\n      isLoadingCategories: false,\n      ErrorMessageProducts: '',\n      ErrorMessageCategories: '',\n      popupSmthWentWrongActive: true,\n      IsSaveButtonVisible: false,\n      IsEditButtonVisible: true,\n      productImage: '',\n      productCategory: '',\n      productName: '',\n      productPrice: '',\n      productInStock: 1,\n      categoriesArray: []\n    };\n  }\n\n  async componentDidMount() {\n    this._isMounted = true;\n    await getProducts(this.updateProducts, this.setError);\n    await getCategories(this.updateDataCategories, this.setErrorCategories);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const {\n      isUpdated\n    } = this.state;\n\n    if (prevState.isUpdated !== isUpdated) {\n      await getProducts(this.updateProducts, this.setError);\n      await getCategories(this.updateDataCategories, this.setErrorCategories);\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    const {\n      isEditActive,\n      isEditActiveId,\n      ErrorMessageProducts,\n      popupSmthWentWrongActive,\n      productsArray,\n      isLoadingProducts,\n      IsSaveButtonVisible,\n      IsEditButtonVisible,\n      isLoadingCategories,\n      ErrorMessageCategories,\n      isUpdated,\n      categoriesArray\n    } = this.state;\n    const {\n      isProductsUpdated,\n      setIsProductsUpdated\n    } = this.props;\n\n    if (!isLoadingProducts || !isLoadingCategories) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"-isLoading\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (ErrorMessageProducts || ErrorMessageCategories) {\n      return /*#__PURE__*/_jsxDEV(PopUpErrorLoading, {\n        popupSmthWentWrongActive: popupSmthWentWrongActive,\n        setpopupSmthWentWrongActive: this.setpopupSmthWentWrongActive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: productsArray.products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"columns\",\n          children: [/*#__PURE__*/_jsxDEV(ImageColumnEditProducts, {\n            isEditActive: isEditActive,\n            product: product,\n            isEditActiveId: isEditActiveId,\n            updateImage: this.updateImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnCategory\",\n            children: isEditActive && product.id === isEditActiveId ? categoriesArray.map(category => product.categoryId === category.id && /*#__PURE__*/_jsxDEV(InputEditProductsCategory, {\n              category: category.category,\n              categoryId: product.categoryId,\n              updateProductCategory: this.updateProductCategory\n            }, product.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 25\n            }, this)) : categoriesArray.map(category => product.categoryId === category.id && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: category.category\n            }, product.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnName\",\n            children: isEditActive && product.id === isEditActiveId ? /*#__PURE__*/_jsxDEV(InputEditProductsName, {\n              description: product.description,\n              updateProductName: this.updateProductName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: product.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnPrice\",\n            children: isEditActive && product.id === isEditActiveId ? /*#__PURE__*/_jsxDEV(InputEditProductsPrice, {\n              price: product.price,\n              updateProductPrice: this.updateProductPrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: product.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnInStock\",\n            children: isEditActive && product.id === isEditActiveId ? /*#__PURE__*/_jsxDEV(InputEditProductsInStock, {\n              inStock: product.inStock,\n              updateProductInStock: this.updateProductInStock\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"inStockString\",\n              children: Number(product.inStock) === 1 ? 'да' : 'нет'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnEdit\",\n            children: IsEditButtonVisible && isEditActive && product.id === isEditActiveId ? /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"editProductsButton\",\n              onClick: () => {\n                this.setState({\n                  isEditActive: false,\n                  isEditActiveId: product.id,\n                  IsSaveButtonVisible: true,\n                  IsEditButtonVisible: false\n                });\n                this.handleButtonOnClick();\n              },\n              children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this) : categoriesArray.map(category => product.categoryId === category.id && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"editProductsButton\",\n              onClick: () => {\n                this.setState({\n                  isEditActive: true,\n                  isEditActiveId: product.id,\n                  productImage: product.image,\n                  productCategory: category.category,\n                  productName: product.description,\n                  productPrice: product.price,\n                  productInStock: product.inStock,\n                  IsEditButtonVisible: true,\n                  IsSaveButtonVisible: false\n                });\n              },\n              children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n            }, product.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnDelete\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"deleteProductsButton\",\n              onClick: () => {\n                postDeleteProduct(product.id, setIsProductsUpdated, isProductsUpdated, this.updateAfterDelete);\n              },\n              children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this))\n    }, void 0, false);\n  }\n\n}\n\nexport default EditProductsPageColumns;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/editProducts/components/EditProductsPageColumnsComponent.jsx"],"names":["React","getProducts","getCategories","PopUpErrorLoading","InputEditProductsCategory","InputEditProductsInStock","InputEditProductsName","InputEditProductsPrice","postDeleteProduct","postProducts","ImageColumnEditProducts","EditProductsPageColumns","Component","constructor","props","_isMounted","handleButtonOnClick","e","isEditActiveId","productImage","productCategory","categoriesArray","productName","isUpdated","productPrice","productInStock","state","isProductsUpdated","setIsProductsUpdated","setState","setError","errorMessage","ErrorMessageProducts","setErrorCategories","ErrorMessageCategories","setpopupSmthWentWrongActive","value","popupSmthWentWrongActive","setEditActive","isEditActive","updateImage","updateProductCategory","array","updateProductName","updateProductPrice","updateProductInStock","updateProducts","valueIsLoading","productsArray","isLoadingProducts","updateDataCategories","categories","isLoadingCategories","updateAfterDelete","IsSaveButtonVisible","IsEditButtonVisible","componentDidMount","componentDidUpdate","prevProps","prevState","componentWillUnmount","render","products","map","product","id","category","categoryId","description","price","inStock","Number","image"],"mappings":"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","sourcesContent":["import React from 'react';\nimport getProducts from '../api/get/getProducts';\nimport getCategories from '../../editCategory/api/get/getCategories';\nimport PopUpErrorLoading from '../../../common/popup/components/PopUpErrorLoadingComponent';\nimport InputEditProductsCategory from './InputEditProductsCategoryComponent';\nimport InputEditProductsInStock from './InputEditProductsInStockComponent';\nimport InputEditProductsName from './InputEditProductsNameComponent';\nimport InputEditProductsPrice from './InputEditCategoryPriceComponent';\nimport postDeleteProduct from '../api/post/postDeleteProduct';\nimport postProducts from '../api/post/postProducts';\nimport ImageColumnEditProducts from './ImageColumnEditProductsComponent';\n\nclass EditProductsPageColumns extends React.Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      productsArray: [],\n      isEditActive: false,\n      isEditActiveId: '',\n      isUpdated: false,\n      isLoadingProducts: false,\n      isLoadingCategories: false,\n      ErrorMessageProducts: '',\n      ErrorMessageCategories: '',\n      popupSmthWentWrongActive: true,\n      IsSaveButtonVisible: false,\n      IsEditButtonVisible: true,\n      productImage: '',\n      productCategory: '',\n      productName: '',\n      productPrice: '',\n      productInStock: 1,\n      categoriesArray: [],\n    };\n  }\n\n  async componentDidMount() {\n    this._isMounted = true;\n    await getProducts(this.updateProducts, this.setError);\n    await getCategories(this.updateDataCategories,\n      this.setErrorCategories);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const { isUpdated } = this.state;\n    if (prevState.isUpdated !== isUpdated) {\n      await getProducts(this.updateProducts, this.setError);\n      await getCategories(this.updateDataCategories,\n        this.setErrorCategories);\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n   handleButtonOnClick = async (e) => {\n     const {\n       isEditActiveId, productImage, productCategory, categoriesArray, productName, isUpdated,\n       productPrice, productInStock,\n     } = this.state;\n     const { isProductsUpdated, setIsProductsUpdated } = this.props;\n     await postProducts(\n       isEditActiveId, productImage, productCategory, categoriesArray, productName, productPrice,\n       productInStock,\n     );\n     this.setState({\n       isUpdated: !isUpdated,\n     });\n     isProductsUpdated ? setIsProductsUpdated(false) : setIsProductsUpdated(true);\n   }\n\n  setError = (errorMessage) => this.setState({ ErrorMessageProducts: errorMessage });\n\n  setErrorCategories = (errorMessage) => this.setState({ ErrorMessageCategories: errorMessage });\n\n  setpopupSmthWentWrongActive = (value) => this.setState({ popupSmthWentWrongActive: value });\n\n  setEditActive = (value) => this.setState({ isEditActive: value });\n\n  updateImage = (value) => this.setState({ productImage: value });\n\n  updateProductCategory = (value, array) => {\n    this.setState({\n      productCategory: value, categoriesArray: array,\n    });\n  }\n\n  updateProductName = (value) => this.setState({ productName: value });\n\n  updateProductPrice = (value) => this.setState({ productPrice: value });\n\n  updateProductInStock = (value) => this.setState({ productInStock: value });\n\n  updateProducts = (value, valueIsLoading) => {\n    if (this._isMounted) {\n      this.setState({\n        productsArray: value,\n        isLoadingProducts: valueIsLoading,\n      });\n    }\n  }\n\n  updateDataCategories = (value, valueIsLoading) => {\n    if (this._isMounted) {\n      this.setState({\n        categoriesArray: value.categories,\n        isLoadingCategories: valueIsLoading,\n      });\n    }\n  }\n\n  updateAfterDelete = () => {\n    const { isUpdated } = this.state;\n    this.setState({ isUpdated: !isUpdated });\n  }\n\n  render() {\n    const {\n      isEditActive, isEditActiveId, ErrorMessageProducts, popupSmthWentWrongActive,\n      productsArray, isLoadingProducts, IsSaveButtonVisible, IsEditButtonVisible,\n      isLoadingCategories, ErrorMessageCategories, isUpdated, categoriesArray,\n    } = this.state;\n    const { isProductsUpdated, setIsProductsUpdated } = this.props;\n    if (!isLoadingProducts || !isLoadingCategories) {\n      return <div className=\"-isLoading\"> </div>;\n    }\n    if (ErrorMessageProducts || ErrorMessageCategories) {\n      return (\n        <PopUpErrorLoading\n          popupSmthWentWrongActive={popupSmthWentWrongActive}\n          setpopupSmthWentWrongActive={this.setpopupSmthWentWrongActive}\n        />\n      );\n    }\n    return (\n      <>\n        {productsArray.products.map((product) => (\n          <li key={product.id}>\n            <div className=\"columns\">\n              <ImageColumnEditProducts\n                isEditActive={isEditActive}\n                product={product}\n                isEditActiveId={isEditActiveId}\n                updateImage={this.updateImage}\n              />\n              <div className=\"columnCategory\">\n                {isEditActive && product.id === isEditActiveId\n                  ? (\n                    categoriesArray.map((category) => (\n                      product.categoryId === category.id\n                      && (\n                        <InputEditProductsCategory\n                          key={product.id}\n                          category={category.category}\n                          categoryId={product.categoryId}\n                          updateProductCategory={this.updateProductCategory}\n                        />\n                      )\n                    ))\n                  ) : categoriesArray.map((category) => (\n                    product.categoryId === category.id && (\n                      <p key={product.id}>\n                        { category.category }\n                      </p>\n                    )\n                  ))}\n              </div>\n              <div className=\"columnName\">\n                {isEditActive && product.id === isEditActiveId\n                  ? (\n                    <InputEditProductsName\n                      description={product.description}\n                      updateProductName={this.updateProductName}\n                    />\n                  ) : <p>{product.description}</p>}\n              </div>\n              <div className=\"columnPrice\">\n                {isEditActive && product.id === isEditActiveId\n                  ? (\n                    <InputEditProductsPrice\n                      price={product.price}\n                      updateProductPrice={this.updateProductPrice}\n                    />\n                  ) : <p>{product.price}</p>}\n              </div>\n              <div className=\"columnInStock\">\n                {isEditActive && product.id === isEditActiveId\n                  ? (\n                    <InputEditProductsInStock\n                      inStock={product.inStock}\n                      updateProductInStock={this.updateProductInStock}\n                    />\n                  )\n                  : <p className=\"inStockString\">{Number(product.inStock) === 1 ? 'да' : 'нет'}</p>}\n              </div>\n              <div className=\"columnEdit\">\n                {IsEditButtonVisible && isEditActive && product.id === isEditActiveId ? (\n                  <button\n                    type=\"button\"\n                    className=\"editProductsButton\"\n                    onClick={() => {\n                      this.setState({\n                        isEditActive: false,\n                        isEditActiveId: product.id,\n                        IsSaveButtonVisible: true,\n                        IsEditButtonVisible: false,\n                      });\n                      this.handleButtonOnClick();\n                    }}\n                  >\n                    Сохранить\n                  </button>\n                ) : (\n                  categoriesArray.map((category) => (\n                    product.categoryId === category.id\n                    && (\n                    <button\n                      key={product.id}\n                      type=\"button\"\n                      className=\"editProductsButton\"\n                      onClick={() => {\n                        this.setState({\n                          isEditActive: true,\n                          isEditActiveId: product.id,\n                          productImage: product.image,\n                          productCategory: category.category,\n                          productName: product.description,\n                          productPrice: product.price,\n                          productInStock: product.inStock,\n                          IsEditButtonVisible: true,\n                          IsSaveButtonVisible: false,\n                        });\n                      }}\n                    >\n                      Изменить\n                    </button>\n                    )))\n                )}\n              </div>\n              <div className=\"columnDelete\">\n                <button\n                  type=\"button\"\n                  className=\"deleteProductsButton\"\n                  onClick={() => {\n                    postDeleteProduct(product.id, setIsProductsUpdated,\n                      isProductsUpdated, this.updateAfterDelete);\n                  }}\n                >\n                  Удалить\n                </button>\n              </div>\n            </div>\n          </li>\n        ))}\n      </>\n    );\n  }\n}\n\nexport default EditProductsPageColumns;\n"]},"metadata":{},"sourceType":"module"}
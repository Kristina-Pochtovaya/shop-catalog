{"ast":null,"code":"var _jsxFileName = \"/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/editProducts/components/EditProductsPageColumnsComponent.jsx\";\nimport React from 'react';\nimport getProducts from '../api/get/getProducts';\nimport getCategories from '../../editCategory/api/get/getCategories';\nimport setImg from '../../../common/untils/setImg';\nimport InputEditProductsCategory from './InputEditProductsCategoryComponent';\nimport InputEditProductsInStock from './InputEditProductsInStockComponent';\nimport InputEditProductsName from './InputEditProductsNameComponent';\nimport InputEditProductsPrice from './InputEditCategoryPriceComponent';\nimport PopUp from '../../../common/popup/components/PopUpComponent';\nimport PopUpSomethingWentWrong from '../../../common/popup/components/PopUpSomethingWentWrongComponent';\nimport EditProductsImage from './EditProductsImageComponent';\nimport postDeleteProduct from '../api/post/postDeleteProduct';\nimport postProducts from '../api/post/postProducts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass EditProductsPageColumns extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setError = errorMessage => this.setState({\n      ErrorMessageProducts: errorMessage\n    });\n\n    this.setErrorCategories = errorMessage => this.setState({\n      ErrorMessageCategories: errorMessage\n    });\n\n    this.setpopupSmthWentWrongActive = value => this.setState({\n      popupSmthWentWrongActive: value\n    });\n\n    this.setEditActive = value => this.setState({\n      isEditActive: value\n    });\n\n    this.updateImage = value => this.setState({\n      productImage: value\n    });\n\n    this.updateProductCategory = (value, array) => this.setState({\n      productCategory: value,\n      categoriesArray: array\n    });\n\n    this.updateProductName = value => this.setState({\n      productName: value\n    });\n\n    this.updateProducts = (value, valueIsLoading) => this.setState({\n      productsArray: value,\n      isLoadingProducts: valueIsLoading\n    });\n\n    this.updateDataCategories = (value, valueIsLoading) => this.setState({\n      categoriesArray: value.categories,\n      isLoadingCategories: valueIsLoading\n    });\n\n    this.state = {\n      productsArray: [],\n      isEditActive: false,\n      isEditActiveId: '',\n      isUpdated: false,\n      isLoadingProducts: false,\n      isLoadingCategories: false,\n      ErrorMessageProducts: '',\n      ErrorMessageCategories: '',\n      popupSmthWentWrongActive: true,\n      IsSaveButtonVisible: false,\n      IsEditButtonVisible: true,\n      productImage: '',\n      productCategory: '',\n      productName: '',\n      productPrice: '',\n      categoriesArray: []\n    };\n  }\n\n  async componentDidMount() {\n    await getProducts(this.updateProducts, this.setError);\n    await getCategories(this.updateDataCategories, this.setErrorCategories);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const {\n      isUpdated\n    } = this.state;\n\n    if (prevState.isUpdated !== isUpdated) {\n      await getProducts(this.updateProducts, this.setError);\n    }\n  }\n\n  async handleButtonOnClick(e) {\n    const {\n      isEditActiveId,\n      productImage,\n      productCategory,\n      categoriesArray,\n      productName,\n      isUpdated\n    } = this.state;\n    const {\n      isProductsUpdated,\n      setIsProductsUpdated\n    } = this.props;\n    await postProducts(isEditActiveId, productImage, productCategory, categoriesArray, productName, productPrice);\n    this.setState({\n      isUpdated: !isUpdated\n    });\n    isProductsUpdated ? setIsProductsUpdated(false) : setIsProductsUpdated(true);\n  }\n\n  render() {\n    const {\n      isEditActive,\n      isEditActiveId,\n      ErrorMessageProducts,\n      popupSmthWentWrongActive,\n      productsArray,\n      isLoadingProducts,\n      IsSaveButtonVisible,\n      IsEditButtonVisible,\n      isLoadingCategories,\n      ErrorMessageCategories,\n      productPrice\n    } = this.state;\n    const {\n      isProductsUpdated,\n      setIsProductsUpdated\n    } = this.props;\n\n    if (!isLoadingProducts || !isLoadingCategories) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"-isLoading\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (ErrorMessageProducts || ErrorMessageCategories) {\n      return /*#__PURE__*/_jsxDEV(PopUp, {\n        active: popupSmthWentWrongActive,\n        setActive: this.setpopupSmthWentWrongActive,\n        children: /*#__PURE__*/_jsxDEV(PopUpSomethingWentWrong, {\n          text: \"\\u041F\\u043E\\u043F\\u0440\\u043E\\u0431\\u0443\\u0439\\u0442\\u0435 \\u0435\\u0449\\u0435 \\u0440\\u0430\\u0437\",\n          setpopupSmthWentWrongActive: this.setpopupSmthWentWrongActive\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: productsArray.products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"columns\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnImage\",\n            children: (isEditActive && product.id) !== isEditActiveId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: product.image ? /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"imageProducts\",\n                src: product.image,\n                alt: product.imgAlt,\n                title: product.imgTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 27\n              }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                src: setImg(product.description),\n                alt: product.imgAlt,\n                title: product.imgTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 27\n              }, this)\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(EditProductsImage, {\n              id: product.id,\n              description: product.description,\n              updateImage: this.updateImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnCategory\",\n            children: isEditActive && product.id === isEditActiveId ? /*#__PURE__*/_jsxDEV(InputEditProductsCategory, {\n              category: product.category,\n              categoryId: product.categoryId,\n              updateProductCategory: this.updateProductCategory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: product.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnName\",\n            children: isEditActive && product.id === isEditActiveId ? /*#__PURE__*/_jsxDEV(InputEditProductsName, {\n              description: product.description,\n              updateProductName: this.updateProductName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: product.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnPrice\",\n            children: isEditActive && product.id === isEditActiveId ? /*#__PURE__*/_jsxDEV(InputEditProductsPrice, {\n              id: product.id,\n              price: product.price,\n              setEditActive: this.setEditActive,\n              setIsProductsUpdated: setIsProductsUpdated,\n              isProductsUpdated: isProductsUpdated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: product.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnInStock\",\n            children: isEditActive && product.id === isEditActiveId ? /*#__PURE__*/_jsxDEV(InputEditProductsInStock, {\n              id: product.id,\n              inStock: product.inStock,\n              setEditActive: this.setEditActive,\n              setIsProductsUpdated: setIsProductsUpdated,\n              isProductsUpdated: isProductsUpdated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"inStockString\",\n              children: Number(product.inStock) === 1 ? 'да' : 'нет'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnEdit\",\n            children: IsEditButtonVisible && isEditActive && product.id === isEditActiveId ? /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"editProductsButton\",\n              onClick: () => {\n                this.setState({\n                  isEditActive: false,\n                  isEditActiveId: product.id,\n                  IsSaveButtonVisible: true,\n                  IsEditButtonVisible: false\n                });\n                this.handleButtonOnClick();\n              },\n              children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"editProductsButton\",\n              onClick: () => {\n                this.setState({\n                  isEditActive: true,\n                  isEditActiveId: product.id,\n                  productImage: product.image,\n                  productCategory: product.category,\n                  productName: product.description,\n                  IsEditButtonVisible: true,\n                  IsSaveButtonVisible: false\n                });\n              },\n              children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"columnDelete\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"deleteProductsButton\",\n              onClick: () => {\n                this.setState({\n                  isEditActive: true,\n                  isEditActiveId: product.id\n                });\n                postDeleteProduct(product.id, setIsProductsUpdated, isProductsUpdated);\n              },\n              children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this))\n    }, void 0, false);\n  }\n\n}\n\nexport default EditProductsPageColumns;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/k.pochtovaya/Documents/React Projects/shop catalog/shop/shop/src/pages/editProducts/components/EditProductsPageColumnsComponent.jsx"],"names":["React","getProducts","getCategories","setImg","InputEditProductsCategory","InputEditProductsInStock","InputEditProductsName","InputEditProductsPrice","PopUp","PopUpSomethingWentWrong","EditProductsImage","postDeleteProduct","postProducts","EditProductsPageColumns","Component","constructor","props","setError","errorMessage","setState","ErrorMessageProducts","setErrorCategories","ErrorMessageCategories","setpopupSmthWentWrongActive","value","popupSmthWentWrongActive","setEditActive","isEditActive","updateImage","productImage","updateProductCategory","array","productCategory","categoriesArray","updateProductName","productName","updateProducts","valueIsLoading","productsArray","isLoadingProducts","updateDataCategories","categories","isLoadingCategories","state","isEditActiveId","isUpdated","IsSaveButtonVisible","IsEditButtonVisible","productPrice","componentDidMount","componentDidUpdate","prevProps","prevState","handleButtonOnClick","e","isProductsUpdated","setIsProductsUpdated","render","products","map","product","id","image","imgAlt","imgTitle","description","category","categoryId","price","inStock","Number"],"mappings":"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","sourcesContent":["import React from 'react';\nimport getProducts from '../api/get/getProducts';\nimport getCategories from '../../editCategory/api/get/getCategories';\nimport setImg from '../../../common/untils/setImg';\nimport InputEditProductsCategory from './InputEditProductsCategoryComponent';\nimport InputEditProductsInStock from './InputEditProductsInStockComponent';\nimport InputEditProductsName from './InputEditProductsNameComponent';\nimport InputEditProductsPrice from './InputEditCategoryPriceComponent';\nimport PopUp from '../../../common/popup/components/PopUpComponent';\nimport PopUpSomethingWentWrong from '../../../common/popup/components/PopUpSomethingWentWrongComponent';\nimport EditProductsImage from './EditProductsImageComponent';\nimport postDeleteProduct from '../api/post/postDeleteProduct';\nimport postProducts from '../api/post/postProducts';\n\nclass EditProductsPageColumns extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      productsArray: [],\n      isEditActive: false,\n      isEditActiveId: '',\n      isUpdated: false,\n      isLoadingProducts: false,\n      isLoadingCategories: false,\n      ErrorMessageProducts: '',\n      ErrorMessageCategories: '',\n      popupSmthWentWrongActive: true,\n      IsSaveButtonVisible: false,\n      IsEditButtonVisible: true,\n      productImage: '',\n      productCategory: '',\n      productName: '',\n      productPrice: '',\n      categoriesArray: [],\n    };\n  }\n\n  async componentDidMount() {\n    await getProducts(this.updateProducts, this.setError);\n    await getCategories(this.updateDataCategories, this.setErrorCategories);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const { isUpdated } = this.state;\n    if (prevState.isUpdated !== isUpdated) {\n      await getProducts(this.updateProducts, this.setError);\n    }\n  }\n\n  async handleButtonOnClick(e) {\n    const {\n      isEditActiveId, productImage, productCategory, categoriesArray, productName, isUpdated,\n    } = this.state;\n    const { isProductsUpdated, setIsProductsUpdated } = this.props;\n    await postProducts(\n      isEditActiveId, productImage, productCategory, categoriesArray, productName, productPrice,\n    );\n    this.setState({\n      isUpdated: !isUpdated,\n    });\n    isProductsUpdated\n      ? setIsProductsUpdated(false)\n      : setIsProductsUpdated(true);\n  }\n\n  setError = (errorMessage) => this.setState({ ErrorMessageProducts: errorMessage });\n\n  setErrorCategories = (errorMessage) => this.setState({ ErrorMessageCategories: errorMessage });\n\n  setpopupSmthWentWrongActive = (value) => this.setState({ popupSmthWentWrongActive: value });\n\n  setEditActive = (value) => this.setState({ isEditActive: value });\n\n  updateImage = (value) => this.setState({ productImage: value });\n\n  updateProductCategory = (value, array) => this.setState({\n    productCategory: value, categoriesArray: array,\n  });\n\n  updateProductName = (value) => this.setState({ productName: value });\n\n  updateProducts = (value, valueIsLoading) => this.setState({\n    productsArray: value,\n    isLoadingProducts: valueIsLoading,\n  });\n\n  updateDataCategories = (value, valueIsLoading) => this.setState({\n    categoriesArray: value.categories,\n    isLoadingCategories: valueIsLoading,\n  });\n\n  render() {\n    const {\n      isEditActive, isEditActiveId, ErrorMessageProducts, popupSmthWentWrongActive,\n      productsArray, isLoadingProducts, IsSaveButtonVisible, IsEditButtonVisible,\n      isLoadingCategories, ErrorMessageCategories, productPrice,\n    } = this.state;\n\n    const { isProductsUpdated, setIsProductsUpdated } = this.props;\n    if (!isLoadingProducts || !isLoadingCategories) {\n      return <div className=\"-isLoading\"> </div>;\n    }\n    if (ErrorMessageProducts || ErrorMessageCategories) {\n      return (\n        <PopUp\n          active={popupSmthWentWrongActive}\n          setActive={this.setpopupSmthWentWrongActive}\n        >\n          <PopUpSomethingWentWrong\n            text=\"Попробуйте еще раз\"\n            setpopupSmthWentWrongActive={this.setpopupSmthWentWrongActive}\n          />\n        </PopUp>\n      );\n    }\n    return (\n      <>\n        {productsArray.products.map((product) => (\n          <li key={product.id}>\n            <div className=\"columns\">\n              <div className=\"columnImage\">\n                {(isEditActive && product.id) !== isEditActiveId\n                  ? (\n                    <>\n                      {product.image\n                        ? (\n                          <img\n                            className=\"imageProducts\"\n                            src={product.image}\n                            alt={product.imgAlt}\n                            title={product.imgTitle}\n                          />\n                        ) : (\n                          <img\n                            src={setImg(product.description)}\n                            alt={product.imgAlt}\n                            title={product.imgTitle}\n                          />\n                        )}\n                    </>\n                  ) : (\n                    <EditProductsImage\n                      id={product.id}\n                      description={product.description}\n                      updateImage={this.updateImage}\n                    />\n                  )}\n              </div>\n              <div className=\"columnCategory\">\n                {isEditActive && product.id === isEditActiveId\n                  ? (\n                    <InputEditProductsCategory\n                      category={product.category}\n                      categoryId={product.categoryId}\n                      updateProductCategory={this.updateProductCategory}\n                    />\n                  )\n                  : <p>{product.category}</p>}\n              </div>\n\n              <div className=\"columnName\">\n                {isEditActive && product.id === isEditActiveId\n                  ? (\n                    <InputEditProductsName\n                      description={product.description}\n                      updateProductName={this.updateProductName}\n                    />\n                  )\n                  : <p>{product.description}</p>}\n              </div>\n\n              <div className=\"columnPrice\">\n                {isEditActive && product.id === isEditActiveId\n                  ? (\n                    <InputEditProductsPrice\n                      id={product.id}\n                      price={product.price}\n                      setEditActive={this.setEditActive}\n                      setIsProductsUpdated={setIsProductsUpdated}\n                      isProductsUpdated={isProductsUpdated}\n                    />\n                  )\n                  : <p>{product.price}</p>}\n              </div>\n\n              <div className=\"columnInStock\">\n                {isEditActive && product.id === isEditActiveId\n                  ? (\n                    <InputEditProductsInStock\n                      id={product.id}\n                      inStock={product.inStock}\n                      setEditActive={this.setEditActive}\n                      setIsProductsUpdated={setIsProductsUpdated}\n                      isProductsUpdated={isProductsUpdated}\n                    />\n                  )\n                  : <p className=\"inStockString\">{Number(product.inStock) === 1 ? 'да' : 'нет'}</p>}\n              </div>\n\n              <div className=\"columnEdit\">\n                {IsEditButtonVisible && isEditActive && product.id === isEditActiveId ? (\n                  <button\n                    type=\"button\"\n                    className=\"editProductsButton\"\n                    onClick={() => {\n                      this.setState({\n                        isEditActive: false,\n                        isEditActiveId: product.id,\n                        IsSaveButtonVisible: true,\n                        IsEditButtonVisible: false,\n                      });\n                      this.handleButtonOnClick();\n                    }}\n                  >\n                    Сохранить\n                  </button>\n                ) : (\n                  <button\n                    type=\"button\"\n                    className=\"editProductsButton\"\n                    onClick={() => {\n                      this.setState({\n                        isEditActive: true,\n                        isEditActiveId: product.id,\n                        productImage: product.image,\n                        productCategory: product.category,\n                        productName: product.description,\n                        IsEditButtonVisible: true,\n                        IsSaveButtonVisible: false,\n                      });\n                    }}\n                  >\n                    Изменить\n                  </button>\n                )}\n              </div>\n              <div className=\"columnDelete\">\n                <button\n                  type=\"button\"\n                  className=\"deleteProductsButton\"\n                  onClick={() => {\n                    this.setState({\n                      isEditActive: true,\n                      isEditActiveId: product.id,\n                    });\n                    postDeleteProduct(product.id, setIsProductsUpdated,\n                      isProductsUpdated);\n                  }}\n                >\n                  Удалить\n                </button>\n              </div>\n            </div>\n          </li>\n        ))}\n      </>\n    );\n  }\n}\n\nexport default EditProductsPageColumns;\n"]},"metadata":{},"sourceType":"module"}